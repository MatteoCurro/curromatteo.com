<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.5.1" created="2013-11-08 11:02" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Kludge</title>
	<link>http://www.kludge.it</link>
	<description>Web design in pillole</description>
	<pubDate>Fri, 08 Nov 2013 11:02:44 +0000</pubDate>
	<language>it-IT</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://www.kludge.it</wp:base_site_url>
	<wp:base_blog_url>http://www.kludge.it</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>curromatteo@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Matteo Currò]]></wp:author_display_name><wp:author_first_name><![CDATA[Matteo]]></wp:author_first_name><wp:author_last_name><![CDATA[Currò]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=3.5.1</generator>

	<item>
		<title>Scoprire la lunghezza di una stringa in PHP</title>
		<link>http://www.kludge.it/?p=132</link>
		<pubDate>Mon, 15 Apr 2013 09:21:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=132</guid>
		<description></description>
		<content:encoded><![CDATA[Per scoprire la lunghezza di una stringa in PHP possiamo utilizzare il metodo strlen();
[cc lang="php"]$str = 'abcdef';
$lunghezza = strlen($str);[/cc]

La variabile lunghezza ora conterr&agrave; la lunghezza dei caratteri contenuti nella variabile passatagli (in questo caso 6).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>132</wp:post_id>
		<wp:post_date>2013-04-15 10:21:00</wp:post_date>
		<wp:post_date_gmt>2013-04-15 09:21:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scoprire-la-lunghezza-di-una-stringa-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Switch-case in PHP</title>
		<link>http://www.kludge.it/?p=154</link>
		<pubDate>Fri, 19 Apr 2013 08:52:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=154</guid>
		<description></description>
		<content:encoded><![CDATA[Come ben sappiamo utilizzare pi&ugrave; di 2 o 3 volte di seguito "if-elseif" &egrave; considerata una bad practice, fortunatamente ci viene in auto switch:
[cc lang="php"]$mese = "Gennaio";
switch ($mese) {
    case 'Gennaio':
        echo '&Egrave; gennaio';
        break;
    case 'Febbraio':
        echo '&Egrave; febbraio';
        break;
    default:
        echo 'Nessun mese';
        break;
}[/cc]
Nell'esempio abbiamo evitato di utilizzare if sostituendolo con switch() che riceve la condizione da verificare e via, via controlla ciascun caso, se nessuno restituisce true allora viene eseguito il caso default.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>154</wp:post_id>
		<wp:post_date>2013-04-19 09:52:00</wp:post_date>
		<wp:post_date_gmt>2013-04-19 08:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>switch-case-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shorthand per if-else in PHP</title>
		<link>http://www.kludge.it/?p=156</link>
		<pubDate>Fri, 19 Apr 2013 07:59:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=156</guid>
		<description></description>
		<content:encoded><![CDATA[Oltre alla classica sintassi per utilizzare if-else in PHP possiamo usare il relativo shorthand:
[cc lang="php"]$mese = 'Gennaio';
($mese == 'Gennaio') ? echo 'Gennaio' : echo 'Non gennaio';[/cc]
Nell'esempio, piuttosto chiaro, abbiamo effettuato una verifica per capire se la variabile $mese &egrave; uguale a gennaio o no. La sintassi per cui contiene come primo elemento la condizione da verifica, seguita da un punto interrogativo a sua volta seguito dall'azione da effettuare nel caso in cui la verifica desse come risultato true, due punti e l'azione da effettuare nel caso in cui la verifica desse come risultato false.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>156</wp:post_id>
		<wp:post_date>2013-04-19 08:59:00</wp:post_date>
		<wp:post_date_gmt>2013-04-19 07:59:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shorthand-per-if-else-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Includere diversi files in PHP</title>
		<link>http://www.kludge.it/?p=161</link>
		<pubDate>Thu, 18 Apr 2013 08:57:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=161</guid>
		<description></description>
		<content:encoded><![CDATA[Possiamo includere frammenti di codice in una pagina php attraverso il metodo include:
[cc lang="php"]include 'inc/header.php';[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>161</wp:post_id>
		<wp:post_date>2013-04-18 09:57:00</wp:post_date>
		<wp:post_date_gmt>2013-04-18 08:57:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>includere-diversi-files-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Includere obbligatoriamente dei files in PHP</title>
		<link>http://www.kludge.it/?p=163</link>
		<pubDate>Thu, 18 Apr 2013 09:42:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=163</guid>
		<description></description>
		<content:encoded><![CDATA[Possiamo includere frammenti di codice in una pagina php, esattamente come con il metodo include, attraverso il metodo require:
[cc lang="php"]include 'inc/header.php';[/cc]

La sostanziale differenza tra include e require sta nel fatto che la richiesta della pagina, nel caso in cui il file richiesto con require non fosse disponibile, fallirebbe.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>163</wp:post_id>
		<wp:post_date>2013-04-18 10:42:00</wp:post_date>
		<wp:post_date_gmt>2013-04-18 09:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>includere-obbligatoriamente-dei-files-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Formattazione delle variabili nelle stringhe in PHP</title>
		<link>http://www.kludge.it/?p=165</link>
		<pubDate>Wed, 17 Apr 2013 09:18:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=165</guid>
		<description></description>
		<content:encoded><![CDATA[A volte potrebbe esserci la necessità di formattare in un determinato modo delle variabili all'interno di una stringa appena prima della stampa, possiamo effettuare tale operazione con il metodo printf():

[cc lang="php"]$name = "Matteo";
$age = "22";
printf("Mi chiamo %s ed ho %d anni", $name, $age);[/cc]

I "segnaposto" utilizzati all'interno della stringa passata come primo parametro a printf() sono seguiti da una lettera che specifica in che modo formattare la variabile:
<table border="0">
<tbody>
<tr>
<td>%%</td>
<td>Il simbolo percentuale</td>
</tr>
<tr>
<td>%b</td>
<td>Rappresentazione binaria (valore intero)</td>
</tr>
<tr>
<td>%c</td>
<td>Stringa ASCII</td>
</tr>
<tr>
<td>%d</td>
<td>Valore decimale con segno (valore intero)</td>
</tr>
<tr>
<td>%e</td>
<td>Valore decimale nella notazione scientifica (1.2e+34)</td>
</tr>
<tr>
<td>%f</td>
<td>Virgola mobile (stampa tenendo conto delle impostazioni locali)</td>
</tr>
<tr>
<td>%F</td>
<td>Virgola mobile (stampa senza tenere conto delle impostazioni locali)</td>
</tr>
<tr>
<td>%o</td>
<td>Rappresentazione ottale del valore</td>
</tr>
<tr>
<td>%s</td>
<td>Stringa</td>
</tr>
<tr>
<td>%u</td>
<td>Valore decimale senza segno</td>
</tr>
<tr>
<td>%x</td>
<td>Valore esadecimale in lettere minuscole</td>
</tr>
<tr>
<td>%X</td>
<td>Valore esadecimale in lettere maiuscole</td>
</tr>
</tbody>
</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>165</wp:post_id>
		<wp:post_date>2013-04-17 10:18:00</wp:post_date>
		<wp:post_date_gmt>2013-04-17 09:18:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>formattazione-delle-variabili-nelle-stringhe-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Archiviare stringa printf() in PHP</title>
		<link>http://www.kludge.it/?p=168</link>
		<pubDate>Wed, 17 Apr 2013 09:04:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=168</guid>
		<description></description>
		<content:encoded><![CDATA[Per archiviare il valore di una stringa elaborata con il metodo printf() &egrave; necessario utilizzare il metodo sprintf():

[cc lang="php"]$name = "Matteo";
$age = "22";
$saluti = sprintf("Mi chiamo %s ed ho %d anni", $name, $age);
echo $saluti;[/cc]

I "segnaposto" utilizzati all'interno della stringa passata come primo parametro a sprintf() sono seguiti da una lettera che specifica in che modo formattare la variabile:
<table border="0">
<tbody>
<tr>
<td>%%</td>
<td>Il simbolo percentuale</td>
</tr>
<tr>
<td>%b</td>
<td>Rappresentazione binaria (valore intero)</td>
</tr>
<tr>
<td>%c</td>
<td>Stringa ASCII</td>
</tr>
<tr>
<td>%d</td>
<td>Valore decimale con segno (valore intero)</td>
</tr>
<tr>
<td>%e</td>
<td>Valore decimale nella notazione scientifica (1.2e+34)</td>
</tr>
<tr>
<td>%f</td>
<td>Virgola mobile (stampa tenendo conto delle impostazioni locali)</td>
</tr>
<tr>
<td>%F</td>
<td>Virgola mobile (stampa senza tenere conto delle impostazioni locali)</td>
</tr>
<tr>
<td>%o</td>
<td>Rappresentazione ottale del valore</td>
</tr>
<tr>
<td>%s</td>
<td>Stringa</td>
</tr>
<tr>
<td>%u</td>
<td>Valore decimale senza segno</td>
</tr>
<tr>
<td>%x</td>
<td>Valore esadecimale in lettere minuscole</td>
</tr>
<tr>
<td>%X</td>
<td>Valore esadecimale in lettere maiuscole</td>
</tr>
</tbody>
</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date>2013-04-17 10:04:00</wp:post_date>
		<wp:post_date_gmt>2013-04-17 09:04:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>archiviare-stringa-printf-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title> Parsing di una stringa e archiviazione dei valori in PHP</title>
		<link>http://www.kludge.it/?p=170</link>
		<pubDate>Tue, 16 Apr 2013 08:50:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[Per effettuare l'operazione inversa a printf e sprintf ovvero estrarre dei valori/stringhe da una stringa ed archiviarle in delle variabili possiamo utilizzare il metodo sscanf():
[cc lang="php"]$nome_cognome_eta = "Tizio Rossi 26";
$n = sscanf($nome_cognome_eta, "%s %s %d", $nome, $cognome, $eta);
echo "Mi chiamo $nome $cognome ed ho $eta anni";[/cc]

Come si pu&ograve; facilmente intuire il primo parametro passato a sscanf() &egrave; la stringa della quale effettuare il parsing, il secondo parametro &egrave; la stringa contenente la formattazione degli elementi da prelevare ed i parametri successivi (opzionali) sono le variabili nelle quali archiviare i dati ricevuti.
Riporto di seguito la tabella dei segnaposto:
I "segnaposto" utilizzati all'interno della stringa passata come primo parametro a sprintf() sono seguiti da una lettera che specifica in che modo formattare la variabile:
<table border="0">
<tbody>
<tr>
<td>%%</td>
<td>Il simbolo percentuale</td>
</tr>
<tr>
<td>%b</td>
<td>Rappresentazione binaria (valore intero)</td>
</tr>
<tr>
<td>%c</td>
<td>Stringa ASCII</td>
</tr>
<tr>
<td>%d</td>
<td>Valore decimale con segno (valore intero)</td>
</tr>
<tr>
<td>%e</td>
<td>Valore decimale nella notazione scientifica (1.2e+34)</td>
</tr>
<tr>
<td>%f</td>
<td>Virgola mobile (stampa tenendo conto delle impostazioni locali)</td>
</tr>
<tr>
<td>%F</td>
<td>Virgola mobile (stampa senza tenere conto delle impostazioni locali)</td>
</tr>
<tr>
<td>%o</td>
<td>Rappresentazione ottale del valore</td>
</tr>
<tr>
<td>%s</td>
<td>Stringa</td>
</tr>
<tr>
<td>%u</td>
<td>Valore decimale senza segno</td>
</tr>
<tr>
<td>%x</td>
<td>Valore esadecimale in lettere minuscole</td>
</tr>
<tr>
<td>%X</td>
<td>Valore esadecimale in lettere maiuscole</td>
</tr>
</tbody>
</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2013-04-16 09:50:00</wp:post_date>
		<wp:post_date_gmt>2013-04-16 08:50:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>parsing-di-una-stringa-e-archiviazione-dei-valori-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Archiviare dati ricevuti con sscanf() in PHP</title>
		<link>http://www.kludge.it/?p=173</link>
		<pubDate>Tue, 16 Apr 2013 08:14:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=173</guid>
		<description></description>
		<content:encoded><![CDATA[Un metodo alternativo per l'archiviazione dei dati ricevuti dal metodo sscanf &egrave; la funzione list:
[cc lang="php"]$nome_cognome_eta = "Tizio Rossi 26";
list($nome, $cognome, $eta) = sscanf($nome_cognome_eta, "%s %s %d");
echo "Mi chiamo $nome $cognome ed ho $eta anni";[/cc]

In questo modo possiamo utilizzare un metodo specifico per achiviare i dati di sscanf senza appesantire ulteriormente quest'ultima.
Riporto di seguito la tabella dei segnaposto:
I "segnaposto" utilizzati all'interno della stringa passata come primo parametro a sprintf() sono seguiti da una lettera che specifica in che modo formattare la variabile:
<table border="0">
<tbody>
<tr>
<td>%%</td>
<td>Il simbolo percentuale</td>
</tr>
<tr>
<td>%b</td>
<td>Rappresentazione binaria (valore intero)</td>
</tr>
<tr>
<td>%c</td>
<td>Stringa ASCII</td>
</tr>
<tr>
<td>%d</td>
<td>Valore decimale con segno (valore intero)</td>
</tr>
<tr>
<td>%e</td>
<td>Valore decimale nella notazione scientifica (1.2e+34)</td>
</tr>
<tr>
<td>%f</td>
<td>Virgola mobile (stampa tenendo conto delle impostazioni locali)</td>
</tr>
<tr>
<td>%F</td>
<td>Virgola mobile (stampa senza tenere conto delle impostazioni locali)</td>
</tr>
<tr>
<td>%o</td>
<td>Rappresentazione ottale del valore</td>
</tr>
<tr>
<td>%s</td>
<td>Stringa</td>
</tr>
<tr>
<td>%u</td>
<td>Valore decimale senza segno</td>
</tr>
<tr>
<td>%x</td>
<td>Valore esadecimale in lettere minuscole</td>
</tr>
<tr>
<td>%X</td>
<td>Valore esadecimale in lettere maiuscole</td>
</tr>
</tbody>
</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>173</wp:post_id>
		<wp:post_date>2013-04-16 09:14:00</wp:post_date>
		<wp:post_date_gmt>2013-04-16 08:14:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>archiviare-dati-ricevuti-con-sscanf-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Funzione per developer: Estrapolare dati da array multidimensionali in PHP</title>
		<link>http://www.kludge.it/?p=175</link>
		<pubDate>Sat, 20 Apr 2013 10:50:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=175</guid>
		<description></description>
		<content:encoded><![CDATA[&Egrave; molto comodo, per chi sviluppa o disegna per il web, crearsi delle funzioni da riutilizzare in ogni progratto, funzioni che aiutino e velocizzino determinati passaggi.

Per estrapolare il valore di un dato X da un array multidimensionale abbiamo pensato di creare una funzione riutilizzabile: array_pluck():
[cc lang="php"]function array_pluck($toPluck, $arr) {
    $ret = array();

    foreach($arr as $item) {
        ret[] = $item[$toPluck];
    }
    return $ret;
}[/cc]

Un utilizzo esemplificativo potrebbe essere:
[cc lang="php"]$people = array(
	array('name' => 'Marco', 'age' => 23, 'occupation' => 'Web Developer'),
	array('name' => 'Mario', 'age' => 45, 'occupation' => 'Presidente'),
	array('name' => 'Elisabetta', 'age' => 33, 'occupation' => 'Marketing Manager')
);

$names = array_pluck('name', $people);

print_r($names);[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>175</wp:post_id>
		<wp:post_date>2013-04-20 11:50:00</wp:post_date>
		<wp:post_date_gmt>2013-04-20 10:50:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>funzione-per-developer-estrapolare-dati-da-array-multidimensionali-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Eseguire un&#039;azione per ciascun array di un array bidimensionale in PHP</title>
		<link>http://www.kludge.it/?p=177</link>
		<pubDate>Sat, 20 Apr 2013 09:42:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=177</guid>
		<description></description>
		<content:encoded><![CDATA[Se dobbiamo ciclare ciascun array contenuto in un array bidimensionale possiamo utilizzare il ciclo foreach o il metodo array_map():
[cc lang="php"]$people = array(
    array('name' => 'Marco', 'age' => 23, 'occupation' => 'Web Developer'),
    array('name' => 'Mario', 'age' => 45, 'occupation' => 'Presidente'),
    array('name' => 'Elisabetta', 'age' => 33, 'occupation' => 'Marketing Manager')
);

$names = array_map(function($item){
    echo "$item[name]<br/>";
}, $people);
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>177</wp:post_id>
		<wp:post_date>2013-04-20 10:42:00</wp:post_date>
		<wp:post_date_gmt>2013-04-20 09:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eseguire-unazione-per-ciascun-array-di-un-array-bidimensionale-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Archiviare stringhe in php con HEREDOC in PHP</title>
		<link>http://www.kludge.it/?p=180</link>
		<pubDate>Sun, 21 Apr 2013 07:33:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=180</guid>
		<description></description>
		<content:encoded><![CDATA[Talvolta abbiamo la necessit&agrave; di archiviare, ad esempio, del codice html in una variabile PHP ma le notazioni tradizionali (double quote e single quote) sono piuttosto scomode e non mantengono il codice "pulito" come piace a noi… ed &egrave; proprio qui che interviene la notazione HEREDOC:
[cc lang="php"]$arr = array(
    'author' => 'Matt',
    'title'  => 'La newsletter',
    'body'   => 'Ecco il contenuto'
);

$email = <<<EOT
<h1>{$arr['title']}</h1>
<p>Inviato da: {$arr['author']}</p>
<div>
    <p>{$arr['body']}</p>
</div>
EOT;

echo $email;
[/cc]

In questo esempio abbiamo simulato la preparazione di una mail; come potete notare la sintassi di heredoc &egrave; formata da tre angle brackets di apertura ('<'), una keyword (tipicamente EOT) e l'a capo, a seguito dell'apertura possiamo utilizzare variabili, single quote, double quotes e qualsiasi elemento senza nessuna preoccupazione e quando vorremo chiudere la stringa andremo a capo, inseriremo la keyword utilizzata all'inizio seguita dal punto e virgola e <strong>andremo a capo</strong>.
&Egrave; importante ricordarsi che un file php non pu&ograve; terminare con la chiusura di un heredoc e, per questo &egrave; necessario andare a capo.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date>2013-04-21 08:33:00</wp:post_date>
		<wp:post_date_gmt>2013-04-21 07:33:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>archiviare-stringhe-in-php-con-heredoc-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Capire se una variabile è impostata con isset() in PHP</title>
		<link>http://www.kludge.it/?p=186</link>
		<pubDate>Fri, 05 Apr 2013 09:40:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=186</guid>
		<description></description>
		<content:encoded><![CDATA[Spesso abbiamo la necessit&agrave; di capire se una variabile &egrave; stata impostata o se &egrave; NULL, per fare ci&ograve; ci viene in aiuto il metodo isset():
[cc lang="php"]$name = "Matt";
if ( isset($name) ) { //stamperà a video "Ciao Matt"
    echo "Ciao $name";
} else {
    echo "Ciao visitatore";
}
[/cc]
Questo codice di esempio stamper&agrave; "Ciao Matt".

[cc lang="php"]$name;
if ( isset($name) ) { //stamperà a video "Ciao visitatore"
    echo "Ciao $name"; 
} else {
    echo "Ciao visitatore"; 
}
[/cc]
Questo codice di esempio invece stamper&agrave; "Ciao visitatore" in quanto la variabile $name &egrave; stata dichiarata ma non inizializzata.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date>2013-04-05 10:40:00</wp:post_date>
		<wp:post_date_gmt>2013-04-05 09:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>capire-se-una-variabile-e-impostata-con-isset-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1367249812;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stampare HTML con htmlspecialchars() in PHP</title>
		<link>http://www.kludge.it/?p=189</link>
		<pubDate>Sat, 06 Apr 2013 08:47:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=189</guid>
		<description></description>
		<content:encoded><![CDATA[Spesso quando riceviamo dei dati dal superglobal $_GET[] ( o in altri casi ) abbiamo la necessit&agrave; per motivi di sicurezza o di effettiva necessit&agrave; di stampare a video del codice html, in tal caso ci viene in aiuto il metodo htmlspecialchars():
[cc lang="php"]$link_a_google = htmlspecialchars("<a href='http://www.google.com'>Google</a>", ENT_QUOTES);
echo $link_a_google; // stamperà a video: &lt;a href=&#039;http://www.google.com&#039;&gt;Google&lt;/a&gt;[/cc]

Queste sono alcune delle trasformazioni che htmlspecialchars() effettua alla stringa passatagli come primo parametro:
<ul>
	<li>'&amp;' (ampersand) diventa '&amp;amp;'</li>
	<li>'"' (double quote) diventa '&amp;quot;' se <strong>ENT_NOQUOTES</strong> non è impostato.</li>
	<li>"'" (single quote) diventa '&amp;#039;' (o &amp;apos;) solo quando <strong>ENT_QUOTES</strong> &egrave; impostato.</li>
	<li>'&lt;' (less than) diventa '&amp;lt;'</li>
	<li>'&gt;' (greater than) diventa '&amp;gt;'</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date>2013-04-06 09:47:00</wp:post_date>
		<wp:post_date_gmt>2013-04-06 08:47:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stampare-html-con-htmlspecialchars-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Controllare se un elemento è vuoto con empty() in PHP</title>
		<link>http://www.kludge.it/?p=193</link>
		<pubDate>Sat, 06 Apr 2013 07:05:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=193</guid>
		<description></description>
		<content:encoded><![CDATA[Per controllare se il valore/contenuto di un elemento è vuoto possiamo utilizzare la funzione empty():
[cc lang="php"]$arr = array();
if ( empty($arr) ) {
echo "$arr è vuoto";
} [/cc]
Nell'esempio sopra riportato verrà stampata a video la stringa "$arr è vuoto".

Gli elementi considerati vuoti sono i seguenti:
<ul>
	<li><em>""</em> (una stringa vuota)</li>
	<li><em>0</em> (0 come int)</li>
	<li><em>0.0</em> (0 come float)</li>
	<li><em>"0"</em> (0 come stringa)</li>
	<li><strong>NULL</strong></li>
	<li><strong>FALSE</strong></li>
	<li><em>array()</em> (un array vuoto)</li>
	<li><em>$var;</em> (una variabile dichiarata ma non inizializzata).</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>193</wp:post_id>
		<wp:post_date>2013-04-06 08:05:00</wp:post_date>
		<wp:post_date_gmt>2013-04-06 07:05:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>controllare-se-un-elemento-e-vuoto-con-empty-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scrivere in un file in PHP</title>
		<link>http://www.kludge.it/?p=267</link>
		<pubDate>Tue, 09 Apr 2013 07:20:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=267</guid>
		<description></description>
		<content:encoded><![CDATA[Se volessimo scrivere in un file, precedentemente aperto con il metodo fopen(), potremmo utilizzare il metodo fwrite():
[cc lang="php"]$file = '/percorso/di/file.txt';
$handle = fopen($file, w+);
fwrite($handle, 'Ciao da PHP');
fclose($handle);[/cc]
Il metodo fwrite() accetta due parametri: il primo &egrave; il file sul quale scrivere (a patto che sia stato aperto in modalit&agrave; scrittura), il secondo &egrave; ci&ograve; che vogliamo scrivere all'interno del file.
Una volta terminata la scrittura chiudiamo il file con il metodo fclose().
Di seguito modalit&agrave; di apertura dei file del metodo fopen() e relativa descrizione:

<table>
<thead>
<tr>
<th>Modo</th>
<th>Descrizione</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>'r'</em></td>
<td>Apre il file in sola lettura e posiziona il puntatore all'inizio del file.</td>
</tr>
<tr>
<td><em>'r+'</em></td>
<td>Apre il file in lettura e scrittura e posiziona il puntatore all'inizio del file.</td>
</tr>
<tr>
<td><em>'w'</em></td>
<td>Apre il file in sola scrittura, posiziona il puntatore all'inizio del file e ne cancella tutto il contenuto. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'w+'</em></td>
<td>Apre il file in lettura e scrittura, posiziona il puntatore all'inizio del file e ne cancella tutto il contenuto. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'a'</em></td>
<td>Apre il file in sola scrittura e posiziona il puntatore alla fine del file. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'a+'</em></td>
<td>Apre il file in lettura e scrittura e posiziona il puntatore alla fine del file. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'x'</em></td>
<td>Crea e apre il file in sola scrittura e posiziona il puntatore all'inizio del file. Se il file esiste già il metodo fopen() ritornerà FALSE e genererà un errore E_WARNING.</td>
</tr>
<tr>
<td><em>'x+'</em></td>
<td>Crea e apre il file in lettura e scrittura e posiziona il puntatore all'inizio del file. Se il file esiste già il metodo fopen() ritornerà FALSE e genererà un errore E_WARNING.</td>
</tr>
<tr>
<td><em>'c'</em></td>
<td>Apre il file in sola scrittura e posiziona il puntatore all'inizio del file mantenendone il contenuto (l'opposto di w). Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'c+'</em></td>
<td>Apre il file in lettura e scrittura e posiziona il puntatore all'inizio del file mantenendone il contenuto (l'opposto di w+). Se il file non esiste viene creato.</td>
</tr>
</tbody>
</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>267</wp:post_id>
		<wp:post_date>2013-04-09 08:20:00</wp:post_date>
		<wp:post_date_gmt>2013-04-09 07:20:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scrivere-in-un-file-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Leggere il contenuto di un file in PHP</title>
		<link>http://www.kludge.it/?p=274</link>
		<pubDate>Mon, 08 Apr 2013 07:51:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=274</guid>
		<description></description>
		<content:encoded><![CDATA[Per leggere il contenuto di un file, precedentemente aperto con il metodo fopen(), in PHP possiamo utilizzare il metodo fread():
[cc lang="php"]$file = '/percorso/di/file.txt';
$handle = fopen($file, w+);
$content = fread($handle, 100);
echo $content;
fclose($handle);[/cc]
Il metodo fread() accetta due parametri: il primo &egrave; il file da leggere, il secondo corrisponde a quante lettere vogliamo leggere (in questo caso 100).
Di seguito modalit&agrave; di apertura dei file del metodo fopen() e relativa descrizione:

<table>
<thead>
<tr>
<th>Modo</th>
<th>Descrizione</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>'r'</em></td>
<td>Apre il file in sola lettura e posiziona il puntatore all'inizio del file.</td>
</tr>
<tr>
<td><em>'r+'</em></td>
<td>Apre il file in lettura e scrittura e posiziona il puntatore all'inizio del file.</td>
</tr>
<tr>
<td><em>'w'</em></td>
<td>Apre il file in sola scrittura, posiziona il puntatore all'inizio del file e ne cancella tutto il contenuto. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'w+'</em></td>
<td>Apre il file in lettura e scrittura, posiziona il puntatore all'inizio del file e ne cancella tutto il contenuto. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'a'</em></td>
<td>Apre il file in sola scrittura e posiziona il puntatore alla fine del file. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'a+'</em></td>
<td>Apre il file in lettura e scrittura e posiziona il puntatore alla fine del file. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'x'</em></td>
<td>Crea e apre il file in sola scrittura e posiziona il puntatore all'inizio del file. Se il file esiste già il metodo fopen() ritornerà FALSE e genererà un errore E_WARNING.</td>
</tr>
<tr>
<td><em>'x+'</em></td>
<td>Crea e apre il file in lettura e scrittura e posiziona il puntatore all'inizio del file. Se il file esiste già il metodo fopen() ritornerà FALSE e genererà un errore E_WARNING.</td>
</tr>
<tr>
<td><em>'c'</em></td>
<td>Apre il file in sola scrittura e posiziona il puntatore all'inizio del file mantenendone il contenuto (l'opposto di w). Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'c+'</em></td>
<td>Apre il file in lettura e scrittura e posiziona il puntatore all'inizio del file mantenendone il contenuto (l'opposto di w+). Se il file non esiste viene creato.</td>
</tr>
</tbody>
</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>274</wp:post_id>
		<wp:post_date>2013-04-08 08:51:00</wp:post_date>
		<wp:post_date_gmt>2013-04-08 07:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>leggere-il-contenuto-di-un-file-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Aprire e leggere un file in PHP</title>
		<link>http://www.kludge.it/?p=277</link>
		<pubDate>Mon, 08 Apr 2013 07:46:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=277</guid>
		<description></description>
		<content:encoded><![CDATA[In alternativa ai metodi fopen(), fread() e fclose() possiamo utilizzare il metodo file_get_contents() per aprire e leggere il contenuto di un dato file:
[cc lang="php"]$file = '/indirizzo/di/file.txt';
echo file_get_contents($file);[/cc]

Nel caso in cui non sia possibile accedere al file il metodo file_get_contents() restituir&agrave; FALSE.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>277</wp:post_id>
		<wp:post_date>2013-04-08 08:46:00</wp:post_date>
		<wp:post_date_gmt>2013-04-08 07:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aprire-e-leggere-un-file-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Aprire e scrivere un file in PHP</title>
		<link>http://www.kludge.it/?p=280</link>
		<pubDate>Sun, 07 Apr 2013 08:29:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=280</guid>
		<description></description>
		<content:encoded><![CDATA[In alternativa ai metodi fopen(), fwrite() e fclose() possiamo utilizzare il metodo file_put_contents() per aprire e scrivere del contenuto di un dato file:
[cc lang="php"]$file = '/indirizzo/di/file.txt';
file_put_contents($file, "Ciao da PHP");[/cc]
Bisogna notare bene che il metodo file_put_contents() azzera totalmente il contenuto del file nel quale va a scrivere (comportandosi, per ci&ograve;, esattamente come fopen() in modalit&agrave; "w"), nel caso in cui volessimo appendere del contenuto al file senza cancellare ci&ograve; che &egrave; gi&agrave; presente dovremmo passare al metodo il flag FILE_APPEND:
[cc lang="php"]$file = '/indirizzo/di/file.txt';
file_put_contents($file, "Ciao ancora da PHP", FILE_APPEND);[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>280</wp:post_id>
		<wp:post_date>2013-04-07 09:29:00</wp:post_date>
		<wp:post_date_gmt>2013-04-07 08:29:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aprire-e-scrivere-un-file-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ottenere un array da un file in PHP</title>
		<link>http://www.kludge.it/?p=283</link>
		<pubDate>Sun, 07 Apr 2013 08:04:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=283</guid>
		<description></description>
		<content:encoded><![CDATA[Per ottenere un array da un file utilizzando come separatore una nuova linea possiamo utilizzare il metodo file():
[cc lang="php"]$file = 'indirizzo/di/file.txt';
$linee = file($file);
foreach($linee as $linea => $valore) {
    echo "$linea: $valore<br/>";
}[/cc]
In questo modo stamperemo a video il contenuto del file preceduto dal numero di riga (zero based).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>283</wp:post_id>
		<wp:post_date>2013-04-07 09:04:00</wp:post_date>
		<wp:post_date_gmt>2013-04-07 08:04:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ottenere-un-array-da-un-file-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Le variabili in LESS</title>
		<link>http://www.kludge.it/le-variabili-in-less/</link>
		<pubDate>Fri, 15 Feb 2013 10:30:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=9</guid>
		<description></description>
		<content:encoded><![CDATA[Per dichiarare una variabile in LESS si utilizza il simbolo @:
[cc]@nome: #fff;
@nome1: Arial, Helvetica, Sans-serif;[/cc]
Per utilizzarla è sufficiente utilizzare:
[cc]@nome;[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2013-02-15 11:30:00</wp:post_date>
		<wp:post_date_gmt>2013-02-15 10:30:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>le-variabili-in-less</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="css"><![CDATA[CSS]]></category>
		<category domain="category" nicename="css"><![CDATA[CSS]]></category>
		<category domain="post_tag" nicename="css3-2"><![CDATA[CSS3]]></category>
		<category domain="category" nicename="less"><![CDATA[LESS]]></category>
		<category domain="post_tag" nicename="less"><![CDATA[LESS]]></category>
		<category domain="funzione_linguaggio" nicename="less"><![CDATA[LESS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383861421;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shorthand per aggiungere un elemento in un array in PHP</title>
		<link>http://www.kludge.it/shorthand-per-aggiungere-un-elemento-in-un-array-in-php/</link>
		<pubDate>Tue, 19 Feb 2013 08:52:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=94</guid>
		<description></description>
		<content:encoded><![CDATA[Oltre al metodo array_push() per aggiungere un elemento in un array possiamo utilizzare anche uno shorthand:
[cc lang="php"]$mesi = array('gennaio', 'febbraio', 'marzo', 'aprile');
$mesi[] = 'maggio';[/cc]
Se ora provassimo ad utilizzare <a href="/?p=24">print_r()</a> su $mesi vedremmo che è stato aggiunto un quinto elemento all'array con la stringa "maggio" esattamente come sarebbe successo con array_push().]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>94</wp:post_id>
		<wp:post_date>2013-02-19 09:52:00</wp:post_date>
		<wp:post_date_gmt>2013-02-19 08:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shorthand-per-aggiungere-un-elemento-in-un-array-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="print_r"><![CDATA[print_r();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383827836;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rimuovere l&#039;ultimo elemento da un array in PHP</title>
		<link>http://www.kludge.it/rimuovere-lultimo-elemento-da-un-array-in-php/</link>
		<pubDate>Mon, 18 Feb 2013 07:40:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=96</guid>
		<description></description>
		<content:encoded><![CDATA[Per rimuovere <strong>l'ultimo elemento</strong> da un array in php possiamo utilizzare il metodo array_pop();.
Bisogna notare che questo elemento non solo modifica l'array passatogli ma ritorna il valore eliminato che pu&ograve; dunque essere salvato in un'altra variabile:
[cc lang="php"]$mesi = array('gennaio', 'febbraio', 'marzo', 'aprile');
$elemento_rimosso = array_pop($mesi);[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>96</wp:post_id>
		<wp:post_date>2013-02-18 08:40:00</wp:post_date>
		<wp:post_date_gmt>2013-02-18 07:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rimuovere-lultimo-elemento-da-un-array-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="array_pop"><![CDATA[array_pop();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:55:"http://www.kludge.it/funzione_linguaggio/php/array_pop/";}s:4:"time";i:1383839716;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rimuovere il primo elemento da un array in PHP</title>
		<link>http://www.kludge.it/rimuovere-il-primo-elemento-da-un-array-in-php/</link>
		<pubDate>Mon, 18 Feb 2013 08:41:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=98</guid>
		<description></description>
		<content:encoded><![CDATA[Per rimuovere <strong>il primo elemento</strong> da un array in php possiamo utilizzare il metodo array_shift();.
Bisogna notare che questo elemento, come array_pop(), non solo modifica l'array passatogli ma ritorna il valore eliminato che pu&ograve; dunque essere salvato in un'altra variabile:
[cc lang="php"]$mesi = array('gennaio', 'febbraio', 'marzo', 'aprile');
$elemento_rimosso = array_shift($mesi);[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date>2013-02-18 09:41:00</wp:post_date>
		<wp:post_date_gmt>2013-02-18 08:41:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rimuovere-il-primo-elemento-da-un-array-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="array_shift"><![CDATA[array_shift();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:57:"http://www.kludge.it/funzione_linguaggio/php/array_shift/";}s:4:"time";i:1383813791;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Aggiungere un elemento all&#039;inizio di un array in PHP</title>
		<link>http://www.kludge.it/aggiungere-un-elemento-allinizio-di-un-array-in-php/</link>
		<pubDate>Sun, 17 Feb 2013 08:48:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=100</guid>
		<description></description>
		<content:encoded><![CDATA[Per aggiungere un elemento ad un array abbiamo già visto che possiamo utilizzare il metodo array_push(), tale metodo però aggiunge un elemento alla fine dell'array, se invece volessimo aggiungere un elemento all'inizio di un array potremmo usare il metodo array_unshift():
[cc lang="php"]$mesi = array('febbraio', 'marzo', 'aprile');
array_unshift($mesi, 'gennaio');[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date>2013-02-17 09:48:00</wp:post_date>
		<wp:post_date_gmt>2013-02-17 08:48:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aggiungere-un-elemento-allinizio-di-un-array-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="altro"><![CDATA[Altro]]></category>
		<category domain="funzione_linguaggio" nicename="array_unshift"><![CDATA[array_unshift();]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383822057;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tagliare un array da un dato indice in PHP</title>
		<link>http://www.kludge.it/tagliare-un-array-da-un-dato-indice-in-php/</link>
		<pubDate>Sun, 17 Feb 2013 07:08:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=102</guid>
		<description></description>
		<content:encoded><![CDATA[Per ottenere solo la parte terminale di un array da un certo elemento in poi possiamo utilizzare la funzione array_slice(); che accetta 2 parametri: il primo è l'array sul quale andremo ad operare e il secondo è l'indice (compreso) dal quale taglieremo l'array:
[cc lang="php"]$mesi = array('gennaio', 'febbraio', 'marzo', 'aprile', 'maggio', 'giugno');
$mesi_primaverili = array_slice($mesi, 2);[/cc]
Ricordando ancora una volta che la numerazione dell'indice &egrave; 0 based il nuovo array sar&agrave; composto da marzo, aprile, maggio e giugno.

Se vogliamo limitare il numero di elementi da prelevare possiamo passare un ulteriore parametro al metodo array_slice() indicando quanti elementi prendere:
[cc lang="php"]$mesi = array('gennaio', 'febbraio', 'marzo', 'aprile');
$febbraio_marzo = array_slice($mesi, 1, 2);[/cc]
Il nuovo array conterr&agrave; solo febbraio e marzo.

NB: Dopo tutti questi passaggi come avrete potuto notare l'array $mesi &egrave; ancora perfettamente intatto dato che abbiamo sempre archiviato ci&ograve; che ci hanno ritornato i metodi in dei nuovi array.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>102</wp:post_id>
		<wp:post_date>2013-02-17 08:08:00</wp:post_date>
		<wp:post_date_gmt>2013-02-17 07:08:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tagliare-un-array-da-un-dato-indice-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="array_slice"><![CDATA[array_slice();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:57:"http://www.kludge.it/funzione_linguaggio/php/array_slice/";}s:4:"time";i:1383603561;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Modificare un array con un filtro in PHP</title>
		<link>http://www.kludge.it/modificare-un-array-con-un-filtro-in-php/</link>
		<pubDate>Sat, 16 Feb 2013 08:06:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=107</guid>
		<description></description>
		<content:encoded><![CDATA[Se volessimo filtrare un array in php potendo specificare dei parametri potremmo farlo utilizzando il metodo array_filter():
[cc lang="php"]$mesi = array('gen', 'feb', 'mar', 'aprile', 'mag');
$tre = array_filter($mesi, function( $item ) {
    return strlen( $item ) == 3;
});[/cc]
Come si pi&ograve; notare array_filter() accetta due parametri: il primo &egrave; l'array di riferimento e il secondo è una funzione che stabilisce i criteri con cui filtrare l'array; nello specifico abbiamo mantenuto solo gli elementi composti da 3 lettere.

Anche questa funzione non modifica al'array di riferimento ma ritorna un nuovo array che, banalmente, abbiamo chiamato $tre.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date>2013-02-16 09:06:00</wp:post_date>
		<wp:post_date_gmt>2013-02-16 08:06:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>modificare-un-array-con-un-filtro-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="array_filter"><![CDATA[array_filter();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="strlen"><![CDATA[strlen();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383827776;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Referenziare jQuery da google</title>
		<link>http://www.kludge.it/referenziare-jquery-da-google/</link>
		<pubDate>Sat, 16 Feb 2013 08:12:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=112</guid>
		<description></description>
		<content:encoded><![CDATA[Per referenziare jQuery possiamo appoggiarci ai server di google di modo da risparmiare un pochino di banda essendo certi che il file sia sempre disponibile.

Dove richiamare lo script? Personalmente preferisco richiamare lo script sempre subito prima della chiusura di body:
[cc lang="html"]
<!DOCTYPE html>
<html lang="it">
<head>
	<title>Title of the document</title>
	<meta charset="utf-8">
	<!--[if lt IE 9]>
		<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
</head>
<body>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>	
</body>
</html>
[/cc]

Come potete notare l'indirizzo per l'ultima versione aggiornata stabile di jQuery &egrave;: http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date>2013-02-16 09:12:00</wp:post_date>
		<wp:post_date_gmt>2013-02-16 08:12:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>referenziare-jquery-da-google</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:48:"http://www.kludge.it/funzione_linguaggio/jquery/";}s:4:"time";i:1383906349;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shorthand e selettori CSS in jQuery</title>
		<link>http://www.kludge.it/i-selettori-css-in-jquery/</link>
		<pubDate>Fri, 15 Feb 2013 07:11:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=116</guid>
		<description></description>
		<content:encoded><![CDATA[Per "scalare la DOM" con jQuery possiamo utilizzare esattamente la stessa sintassi utilizzata nei CSS:
[cc lang="jquery"]jQuery('div.container');[/cc]

Nel caso in cui avessimo la certezza che altri framework non interferiscano con il simbolo "$" possiamo utilizzarlo al posto della forma estesa:
[cc lang="jquery"]$('div.container');[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date>2013-02-15 08:11:00</wp:post_date>
		<wp:post_date_gmt>2013-02-15 07:11:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-selettori-css-in-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="category" nicename="senza-categoria"><![CDATA[Senza categoria]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:48:"http://www.kludge.it/funzione_linguaggio/jquery/";}s:4:"time";i:1383902043;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ottenere variabili da un array associativo con extract in PHP</title>
		<link>http://www.kludge.it/?p=182</link>
		<pubDate>Sun, 21 Apr 2013 08:40:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=182</guid>
		<description></description>
		<content:encoded><![CDATA[Esiste una funzione, utilizzata principalmente nel modello MVC, denominata extract() che ci permette di dividere automaticamente un array associativo in N variabili composte dall'indice come nome variabile e il valore come valore della variabile.
[cc lang="php"]$arr = array(
    'author' => 'Matt',
    'title'  => 'La newsletter',
    'body'   => 'Ecco il contenuto'
);

extract($arr);
echo "La newsletter della settimana si intitola $title &egrave; scritta da $author e dice $body";
[/cc]


]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date>2013-04-21 09:40:00</wp:post_date>
		<wp:post_date_gmt>2013-04-21 08:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ottenere-variabili-da-un-array-associativo-con-extract-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scoprire il metodo di richiesta (GET o POST) in PHP</title>
		<link>http://www.kludge.it/?p=200</link>
		<pubDate>Mon, 22 Apr 2013 10:36:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=200</guid>
		<description></description>
		<content:encoded><![CDATA[Per scoprire se c'&egrave; una richiesta GET o POST possiamo utilizzare il super global $_SERVER[]:
[cc lang="php"]if ( $_SERVER['REQUEST_METHOD'] == 'POST' {
    print_r($_POST);
}[/cc]
In questo esempio verr&agrave; stampato l'array $_POST se presente.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>200</wp:post_id>
		<wp:post_date>2013-04-22 11:36:00</wp:post_date>
		<wp:post_date_gmt>2013-04-22 10:36:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scoprire-il-metodo-di-richiesta-get-o-post-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Primi passi con le sessioni in PHP</title>
		<link>http://www.kludge.it/?p=235</link>
		<pubDate>Mon, 22 Apr 2013 07:03:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=235</guid>
		<description></description>
		<content:encoded><![CDATA[Oltre al metodo POST e GET per mantenere dei dati all'interno del nostro/a sito/web app possiamo utilizzare le sessioni che, tipicamente, sono utilizzate appunto per le sessioni utente.

In termini molto spicci una sessione assegna a ciascun utente un id e ci associa X dati.
Entriamo per&ograve; nel pratico:
[cc lang="php]session_start();[/cc]
Come prima cosa dobbiamo iniziare la sessione, e quando dico come prima cosa intendo proprio prima del tag html, prima del tag doctype, prima di qualsiasi altra cosa.

Una volta iniziata la sessione possiamo memorizzare e gestire quanti dati vogliamo all'interno del super global $_SESSION:

[cc lang="php"]$_SESSION['username'] = 'Matt';
echo $_SESSION['username'];[/cc]
Ora, in qualsiasi pagina del nostro/a sito/web app &egrave; disponibile [cci lang="php"]$_SESSION['username'][/cci].

Se volessimo distruggere una sessione e cancellarne i dati contenuti (come ad esempio se nel nostro sito un utente effettuasse il log out dovremmo utilizzare la il metodo session_destroy():
[cc lang="php"]session_destroy();[/cc]
Ora la sessione &egrave; stata distrutta per&ograve; se proverete ad effettuare un print_r di $_SESSION noterete che i dati sono ancora presenti!
Per eliminarli definitivamente sar&agrave; sufficiente re-inizializzare l'array:
[cc lang="php"]$_SESSION = array();[/cc]
Ricapitolando:
[cc lang="php"]
<?php
session_start();
$_SESSION['username'] = "Matt";
echo $_SESSION['username'];
session_destroy();
$_SESSION = array();[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>235</wp:post_id>
		<wp:post_date>2013-04-22 08:03:00</wp:post_date>
		<wp:post_date_gmt>2013-04-22 07:03:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>primi-passi-con-le-sessioni-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dichiarare una costante in PHP</title>
		<link>http://www.kludge.it/?p=243</link>
		<pubDate>Tue, 23 Apr 2013 07:34:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=243</guid>
		<description></description>
		<content:encoded><![CDATA[Per dichiarare una costante, ovvero una sorta di variabile immutabile, in php viene definita attraverso il metodo define():
[cc lang="php"]define('NOME_COSTANTE', 'valore della costante');[/cc]
e a tale costante ci si pu&ograve; accedere senza preporci il dollar sign ($):
[cc lang="php"]echo NOME_COSTANTE;[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>243</wp:post_id>
		<wp:post_date>2013-04-23 08:34:00</wp:post_date>
		<wp:post_date_gmt>2013-04-23 07:34:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dichiarare-una-costante-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Effettuare un redirect con header() in PHP</title>
		<link>http://www.kludge.it/?p=245</link>
		<pubDate>Tue, 23 Apr 2013 07:01:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=245</guid>
		<description></description>
		<content:encoded><![CDATA[Possiamo effettuare un redirect in php utilizzando il metodo header():
[cc lang="php"]header("Location: http://www.google.com/");[/cc]
Tale metodo (che va richiamato prima che qualsiasi cosa venga stampata a video) redireziona immediatamente la pagina all'indirizzo passato come valore di Location.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>245</wp:post_id>
		<wp:post_date>2013-04-23 08:01:00</wp:post_date>
		<wp:post_date_gmt>2013-04-23 07:01:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>effettuare-un-redirect-con-header-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Creare dei cookies in PHP</title>
		<link>http://www.kludge.it/?p=252</link>
		<pubDate>Wed, 24 Apr 2013 08:52:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=252</guid>
		<description></description>
		<content:encoded><![CDATA[Per iniziare a muovere i primi passi nella gestione dei cookies dobbiamo certamente crearli: per creare un cookie possiamo utilizzare il metodo setcookie():
[cc lang="php"]setcookie('nome_cookie', 'valore_cookie', time() + 60 * 30);[/cc]
Il metodo setcookie() accetta numerosi parametri anche se per il momento ci siamo limitati a passargli il nome del nostro cookie (primo parametro), il valore del cookie(secondo parametro) ed infine la scadenza del cookie che viene calcolata in secondi per cui abbiamo ottenuto il tempo attuale grazie al metodo time() e ci abbiamo sommato 60 secondi moltiplicati per trenta, ovvero il nostro cookie scadr&agrave; tra 30 minuti.

Ora che abbiamo creato il nostro bel cookie per&ograve; dobbiamo poterci accedere (altrimenti a cosa servirebbe), per farlo possiamo utilizzare l'array super global $_COOKIE['nome_cookie']:
[cc lang="php"]echo $_COOKIE['nome_cookie'];[/cc]

NB: Il cookie creato non &egrave; disponibile immediatamente ma &egrave; necessario refreshare la pagina!!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>252</wp:post_id>
		<wp:post_date>2013-04-24 09:52:00</wp:post_date>
		<wp:post_date_gmt>2013-04-24 08:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creare-dei-cookies-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Eliminare dei cookies in PHP</title>
		<link>http://www.kludge.it/?p=255</link>
		<pubDate>Wed, 24 Apr 2013 09:15:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=255</guid>
		<description></description>
		<content:encoded><![CDATA[Si potrebbe pensare che esista un metodo appositamente creato (qualcosa tipo deletecookie()) ma <u>non &egrave; cos&igrave;</u>!
Per eliminare un cookie, infatti, &egrave; sufficiente utilizzare il metodo setcookie() e impostare la scadenza ad un momento passato:
[cc lang="php"]setcookie('nome_cookie', 'valore_cookie', time() - 60);[/cc]
In questo modo abbiamo impostato la scadenza ad un minuto fa ed il cookie &egrave; cos&igrave; eliminato.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>255</wp:post_id>
		<wp:post_date>2013-04-24 10:15:00</wp:post_date>
		<wp:post_date_gmt>2013-04-24 09:15:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eliminare-dei-cookies-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Array associativo archiviato come cookie in PHP</title>
		<link>http://www.kludge.it/?p=257</link>
		<pubDate>Thu, 25 Apr 2013 07:12:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=257</guid>
		<description></description>
		<content:encoded><![CDATA[Molte persone non sanno che &egrave; possibile archiviare un array nei cookie.
Se per esempio volessimo archiviare delle preferenze utente (hard-coded ovviamente nell'esempio) come elementi di un array associativo potremmo farlo nel seguente modo:
[cc lang="php"]setcookie('user_pref[fontSize]', 25);
setcookie('user_pref[favCategory]', 'Appunti php');
setcookie('user_pref[screenWidth]', 1024);
[/cc]
Se proviamo ora a controllare i cookies dal browser noteremo che sono comunque tre elementi distinti ma, per il modo nel quale sono stati creati, possiamo accederci esattamente come se fossero un array:
[cc lang="php"]if ( isset($_COOKIE['user_pref'] ) {
    foreach($_COOKIE['user_pref'] as $key => $val ) {
        echo '<li>' . $key . ': ' . $val . '</li>';
    }
}[/cc]

NB: Il cookie creato non è disponibile immediatamente ma è necessario refreshare la pagina!!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>257</wp:post_id>
		<wp:post_date>2013-04-25 08:12:00</wp:post_date>
		<wp:post_date_gmt>2013-04-25 07:12:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>array-associativo-archiviato-come-cookie-in-php</wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Metodo is_home() in WORDPRESS</title>
		<link>http://www.kludge.it/metodo-is_home-in-wordpress/</link>
		<pubDate>Sun, 17 Feb 2013 06:56:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=491</guid>
		<description></description>
		<content:encoded><![CDATA[Il metodo is_home() restituisce un valore booleano dicendoci se la pagina attuale &egrave; la pagina posts (del blog) ed &egrave; l'home page:
[cc lang="php"]
<?php if (is_home()) {
    echo 'I nostri ultimi articoli...';
} ?>
[/cc]
Il metodo non accetta parametri.

NB: Se in home page &egrave; stata impostata una pagina statica questo metodo restituir&agrave; FALSE, sar&agrave; invece necessario utilizzare il metodo is_front_page().
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>491</wp:post_id>
		<wp:post_date>2013-02-17 07:56:00</wp:post_date>
		<wp:post_date_gmt>2013-02-17 06:56:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>metodo-is_home-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="is_home"><![CDATA[is_home();]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383855935;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Metodo get_search_form() in WORDPRESS</title>
		<link>http://www.kludge.it/metodo-get_search_form-in-wordpress/</link>
		<pubDate>Sat, 16 Feb 2013 07:30:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=493</guid>
		<description></description>
		<content:encoded><![CDATA[Il metodo get_search_form() include nel documento il file searchform.php:
[cc lang="php"]
<aside>
    <?php get_search_form(); ?>
</aside>
[/cc]
Il metodo accetta un parametro booleano opzionale (di default TRUE) che stabilisce se stampare a video il form di ricerca (TRUE) o restituirlo come stringa (FALSE).
Un esempio di ci&ograve; che pu&ograve; esser contenuto all'interno del file searchform.php &egrave; il seguente:
[cc lang="html"]
<form action="<?php bloginfo('siteurl'); ?>" id="searchform" method="get">
    <div>
        <label for="s">Cerca...</label>
        <input type="search" id="s" name="s" value="" />
        
        <input type="submit" value="Cerca" id="searchsubmit" />
    </div>
</form>
[/cc]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>493</wp:post_id>
		<wp:post_date>2013-02-16 08:30:00</wp:post_date>
		<wp:post_date_gmt>2013-02-16 07:30:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>metodo-get_search_form-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="get_search_form"><![CDATA[get_search_form();]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383843812;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://www.kludge.it/?p=1677</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1677</guid>
		<description></description>
		<content:encoded><![CDATA[Capita molto spesso quando si opera con un terminale (Shell) di voler andare direttamente all'inizio di una riga: ci&amp;ograve; &amp;egrave; possibile utilizzando lo shortcut: CTRL + A.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1677</wp:post_id>
		<wp:post_date>2013-05-31 18:19:46</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="senza-categoria"><![CDATA[Senza categoria]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gli Arrays in PHP</title>
		<link>http://www.kludge.it/gli-arrays-in-php/</link>
		<pubDate>Mon, 25 Feb 2013 07:18:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=20</guid>
		<description></description>
		<content:encoded><![CDATA[Per creare un array dichiaro una variabile e richiamo la funzione array() alla quale passo i valori separati da virgola:
[cc lang="php"]$months = array('Gennaio', 'Febbraio', 'Marzo');[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2013-02-25 08:18:00</wp:post_date>
		<wp:post_date_gmt>2013-02-25 07:18:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gli-arrays-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="array"><![CDATA[array();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383847301;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Visualizzare i valori di un Array in PHP con var_dump();</title>
		<link>http://www.kludge.it/visualizzare-i-valori-di-un-array-in-php/</link>
		<pubDate>Sun, 24 Feb 2013 08:41:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=22</guid>
		<description></description>
		<content:encoded><![CDATA[Per stampare un array e visualizzarne i valori si può utilizzare la funzione var_dump():
[cc lang="php"]var_dump($array_da_visualizzare);[/cc]

anche se il metodo pi&ugrave; comunemente usato &egrave; <a href="/?p=24" title="Visualizzare i valori di un Array in PHP con print_r();">print_r()</a>;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date>2013-02-24 09:41:00</wp:post_date>
		<wp:post_date_gmt>2013-02-24 08:41:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visualizzare-i-valori-di-un-array-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="var_dump"><![CDATA[var_dump();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383828976;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Visualizzare i valori di un Array in PHP con print_r();</title>
		<link>http://www.kludge.it/visualizzare-i-valori-di-un-array-in-php-con-print_r/</link>
		<pubDate>Sun, 24 Feb 2013 09:34:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=24</guid>
		<description></description>
		<content:encoded><![CDATA[Per stampare un array e visualizzarne i valori si può utilizzare la funzione var_dump():
[cc lang="php"]print_r($array_da_visualizzare);[/cc]

Ricordando che il questa funzione ci da una visuale che è utile solo ai fini di sviluppo o test.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2013-02-24 10:34:00</wp:post_date>
		<wp:post_date_gmt>2013-02-24 09:34:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visualizzare-i-valori-di-un-array-in-php-con-print_r</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="print_r"><![CDATA[print_r();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383827836;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stampare a video un elemento di un array in PHP</title>
		<link>http://www.kludge.it/stampare-a-video-un-elemento-di-un-array-in-php/</link>
		<pubDate>Sat, 23 Feb 2013 08:57:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=31</guid>
		<description></description>
		<content:encoded><![CDATA[Ricordando che la numerazione in php &egrave; 0 based per stampare a video con echo il valore di un elemento di un array possiamo utilizzare le parentesi graffe con l'indice dell'elemento che vogliamo stampare:
[cc lang="php"]
$months = array('Gennaio', 'Febbraio', 'Marzo');
echo $months[0];[/cc]

Per stampare tutto l'array &egrave; necessario ciclarlo.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2013-02-23 09:57:00</wp:post_date>
		<wp:post_date_gmt>2013-02-23 08:57:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>stampare-a-video-un-elemento-di-un-array-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="echo"><![CDATA[echo]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383866398;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ciclare un array e stamparne i valori in PHP</title>
		<link>http://www.kludge.it/ciclare-un-array-e-stamparne-i-valori-in-php/</link>
		<pubDate>Sat, 23 Feb 2013 09:59:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=34</guid>
		<description></description>
		<content:encoded><![CDATA[Per stampare i valori di un array in modo leggibile (e non con print_r per intenderci) possiamo utilizzare il loop foreach:
[cc lang="php"]foreach($array_da_visualizzare as $nome_variabile_per_valore ) {
	echo $nome_variabile_per_valore;
}[/cc]
questo esempio stamperà tutti gli elementi dell'array (senza alcun tipo di formattazione chiaramente) a video.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2013-02-23 10:59:00</wp:post_date>
		<wp:post_date_gmt>2013-02-23 09:59:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ciclare-un-array-e-stamparne-i-valori-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383866398;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shorthand per la creazione di un array in PHP</title>
		<link>http://www.kludge.it/shorthand-per-la-creazione-di-un-array-in-php/</link>
		<pubDate>Fri, 22 Feb 2013 10:03:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=36</guid>
		<description></description>
		<content:encoded><![CDATA[Dalla versione 5.4 di PHP è possibile utilizzare un'abbreviazione per creare un nuovo array:
[cc lang="php"]$months = ['jenuary', 'february', 'march'];[/cc]
&Egrave; necessario effettuare una verifica per capire se nel server nel quale stiamo operando è supportato questo shorthand.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date>2013-02-22 11:03:00</wp:post_date>
		<wp:post_date_gmt>2013-02-22 10:03:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shorthand-per-la-creazione-di-un-array-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383866398;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Gli array associativi in PHP</title>
		<link>http://www.kludge.it/gli-array-associativi-in-php/</link>
		<pubDate>Fri, 22 Feb 2013 10:46:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=38</guid>
		<description></description>
		<content:encoded><![CDATA[Negli array associativi al posto dell'indice viene utilizzata una stringa che deve essere, chiaramente, univoca nell'array:
[cc lang="php"]$months = array(
	'primo_mese' => 'gennaio',
	'secondo_mese' => 'febbraio',	
	'terzo_mese' => 'marzo'
);[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2013-02-22 11:46:00</wp:post_date>
		<wp:post_date_gmt>2013-02-22 10:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>gli-array-associativi-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383845327;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ciclare e stampare gli array associativi in PHP</title>
		<link>http://www.kludge.it/ciclare-e-stampare-gli-array-associativi-in-php/</link>
		<pubDate>Thu, 21 Feb 2013 07:49:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[Per stampare a video gli array associativi possiamo utilizzare allo stesso modo il loop foreach:
[cc lang="php"]foreach($array_da_stampare as $nome_dell_indice => $valore)
	echo "il $nome_dell_indice &egrave; $valore";
};[/cc]
Notiamo, ancora una volt,a come utilizzando il double quote al posto del single quote possiamo inserire le variabili all'interno della stringa e verranno riconosciute.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2013-02-21 08:49:00</wp:post_date>
		<wp:post_date_gmt>2013-02-21 07:49:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ciclare-e-stampare-gli-array-associativi-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383822796;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Capitalizzare un stringa in PHP</title>
		<link>http://www.kludge.it/capitalizzare-un-stringa-in-php/</link>
		<pubDate>Thu, 21 Feb 2013 08:59:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=42</guid>
		<description></description>
		<content:encoded><![CDATA[Per capitalizzare una variabile (impostare la prima lettera della stringa maiuscola) possiamo utilizzare la funzione ucwords():
[cc lang="php"]ucwords($variabile_contentenente_la_stringa);[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2013-02-21 09:59:00</wp:post_date>
		<wp:post_date_gmt>2013-02-21 08:59:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>capitalizzare-un-stringa-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="us_words"><![CDATA[ucwords();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383829006;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shorthand per echo in PHP</title>
		<link>http://www.kludge.it/shorthand-per-echo-in-php/</link>
		<pubDate>Wed, 20 Feb 2013 07:06:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=44</guid>
		<description></description>
		<content:encoded><![CDATA[Un'altra novità di php 5.4 e successive è lo shorthand per il comando echo:
[cc lang="php"]<?= $variabile_da_stampare;?>[/cc]

Ribadendo che DEVE essere disponibile almeno la versione 5.4 di php, per cui sconsigliamo per ora di utilizzare tali abbreviazioni per lo sviluppo di progetti open source.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2013-02-20 08:06:00</wp:post_date>
		<wp:post_date_gmt>2013-02-20 07:06:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shorthand-per-echo-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383863559;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shorthand dichiarazione array in PHP</title>
		<link>http://www.kludge.it/shorthand-dichiarazione-array-in-php/</link>
		<pubDate>Wed, 20 Feb 2013 09:37:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=81</guid>
		<description></description>
		<content:encoded><![CDATA[Esiste anche uno shorthand per dichiarare un array in php che &egrave; per&ograve; disponibile solo dalla versione 5.3 in poi:
[cc lang="php"]$mesi = ['gennaio', 'febbraio', 'marzo', 'aprile'];[/cc]

Come per tutti i nuovi comandi è sconsigliato l'utilizzo di questi comandi per progetti open source/pubblici dato che non è garantita un'ampia compatibilit&agrave;.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date>2013-02-20 10:37:00</wp:post_date>
		<wp:post_date_gmt>2013-02-20 09:37:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shorthand-dichiarazione-array-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383863559;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Aggiungere un elemento in un array con array_push() in PHP</title>
		<link>http://www.kludge.it/aggiungere-un-elemento-in-un-array-con-array_push-in-php/</link>
		<pubDate>Tue, 19 Feb 2013 10:18:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=92</guid>
		<description></description>
		<content:encoded><![CDATA[Per aggiungere un elemento alla fine di un array possiamo utilizzare la funzione array_push():
[cc lang="php"]$mesi = array('gennaio', 'febbraio', 'marzo', 'aprile');
array_push($mesi, 'maggio');[/cc]
Se ora provassimo ad utilizzare <a href="/?p=24">print_r()</a> su $mesi vedremmo che è stato aggiunto un quinto elemento all'array con la stringa "maggio".]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>92</wp:post_id>
		<wp:post_date>2013-02-19 11:18:00</wp:post_date>
		<wp:post_date_gmt>2013-02-19 10:18:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aggiungere-un-elemento-in-un-array-con-array_push-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="print_r"><![CDATA[print_r();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383827836;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Visualizzare tutti i databases disponibili in SQL</title>
		<link>http://www.kludge.it/visualizzare-tutti-i-databases-disponibili-in-sql/</link>
		<pubDate>Mon, 25 Feb 2013 07:14:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=202</guid>
		<description></description>
		<content:encoded><![CDATA[Per visualizzare tutti i databases disponibili nel server al quale siamo connessi &egrave; possibile utilizzare la query:
[cc lang="SQL"]SHOW databases;[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>202</wp:post_id>
		<wp:post_date>2013-02-25 08:14:00</wp:post_date>
		<wp:post_date_gmt>2013-02-25 07:14:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visualizzare-tutti-i-databases-disponibili-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="show_databases"><![CDATA[SHOW DATABASES;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383828947;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Creare un nuovo database in SQL</title>
		<link>http://www.kludge.it/creare-un-nuovo-database-in-sql/</link>
		<pubDate>Tue, 26 Feb 2013 07:33:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=204</guid>
		<description></description>
		<content:encoded><![CDATA[Per creare un nuovo database in SQL possiamo utilizzare la dicitura CREATE DATABASE:
effettuiamo una query:
[cc lang="SQL"]CREATE DATABASE nome_database;[/cc]
NB: Ricordiamoci sempre di chiudere la query con il punto e virgola (;).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>204</wp:post_id>
		<wp:post_date>2013-02-26 08:33:00</wp:post_date>
		<wp:post_date_gmt>2013-02-26 07:33:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creare-un-nuovo-database-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="create_database"><![CDATA[CREATE DATABASE;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383855399;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Utilizzare un database per le query in SQL</title>
		<link>http://www.kludge.it/utilizzare-un-database-per-le-query-in-sql/</link>
		<pubDate>Wed, 27 Feb 2013 09:35:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=206</guid>
		<description></description>
		<content:encoded><![CDATA[Quando lavoriamo in MySQL dobbiamo riferirci specificatamente ad un database (dato che molto probabilmente ne abbiamo pi&ugrave; di uno), sorge quindi il problema di come spiegare a MySQL quale DB utilizzare:
[cc lang="SQL"]USE nome_database;[/cc]
Tutto qui!
Dal momento in cui lanceremo questa query tutte le queries successive verranno effettuate all'interno di "nome_database".]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>206</wp:post_id>
		<wp:post_date>2013-02-27 10:35:00</wp:post_date>
		<wp:post_date_gmt>2013-02-27 09:35:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>utilizzare-un-database-per-le-query-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="use"><![CDATA[USE;]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383828856;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Visualizzare le tabelle presenti in un database in SQL</title>
		<link>http://www.kludge.it/visualizzare-le-tabelle-presenti-in-un-database-in-sql/</link>
		<pubDate>Tue, 26 Feb 2013 07:52:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=208</guid>
		<description></description>
		<content:encoded><![CDATA[Nel momento in cui abbiamo specificato in che DB operare con il comando USE possiamo visualizzare le tabelle presenti nel database in uso con il comando SHOW:
[cc lang="SQL"]SHOW tables;[/cc]
Ricordiamoci che i databases relazionali (come MySQL nel quale noi lavoriamo) sono strutturati in tabelle opportunamente relazionate tra loro.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>208</wp:post_id>
		<wp:post_date>2013-02-26 08:52:00</wp:post_date>
		<wp:post_date_gmt>2013-02-26 07:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visualizzare-le-tabelle-presenti-in-un-database-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="show_tables"><![CDATA[SHOW TABLES;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383828916;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Creare una tabella in SQL</title>
		<link>http://www.kludge.it/creare-una-tabella-in-sql/</link>
		<pubDate>Wed, 27 Feb 2013 10:27:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=210</guid>
		<description></description>
		<content:encoded><![CDATA[Le tabelle in MySQL sono formate da colonne di ciascuna colonna è necessario specificare <strong>almeno</strong> il nome e il datatype:
[cc lang="sql"]CREATE TABLE nome_tabella (
nome_colonna datatype_coonna,
nome_colonna datatype_coonna
);[/cc]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date>2013-02-27 11:27:00</wp:post_date>
		<wp:post_date_gmt>2013-02-27 10:27:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creare-una-tabella-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="create_table"><![CDATA[CREATE TABLE;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383839990;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tipologie campi tabella in SQL</title>
		<link>http://www.kludge.it/tipologie-campi-tabella-in-sql/</link>
		<pubDate>Thu, 28 Feb 2013 10:08:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=212</guid>
		<description></description>
		<content:encoded><![CDATA[Esistono vari data types per le colonne di una tabella in un database MySQL, per comodità riporteremo alcuni tra quelli più utilizzati:

<table>
<tbody>
<tr>
<th colspan="2">Data types testuali</th>
</tr>
<tr>
<td>VARCHAR(N)</td>
<td>Una variabile stringa con una lunghezza massima di 255 caratteri..</td>
</tr>
<tr>
<td>TINYTEXT</td>
<td>Una stringa con una lunghezza massima di 255 caratteri.</td>
</tr>
<tr>
<td>TEXT</td>
<td>Una stringa con una lunghezza massima di 65'535 caratteri.</td>
</tr>
<tr>
<td>BLOB</td>
<td>Una stringa con una lunghezza massima di 65'535 caratteri.</td>
</tr>
<tr>
<td>MEDIUMTEXT</td>
<td>Una stringa con una lunghezza massima di 16'777'215 caratteri.</td>
</tr>
<tr>
<td>MEDIUMBLOB</td>
<td>Una stringa con una lunghezza massima di 16'777'215 caratteri.</td>
</tr>
<tr>
<td>LONGTEXT</td>
<td>Una stringa con una lunghezza massima di 4'294'967'295 caratteri.</td>
</tr>
<tr>
<td>LONGBLOB</td>
<td>Una stringa con una lunghezza massima di 4'294'967'295 caratteri.</td>
</tr>
</tbody>
</table>
&nbsp;
<table>
<tbody>
<tr>
<th colspan="2">Data types numerici</th>
</tr>
<tr>
<td>TINYINT(N)</td>
<td>Numero da -128 a 127 in modalit&agrave; NORMAL, se utilizzato con UNSIGNED va da
0 a 255 .</td>
</tr>
<tr>
<td>SMALLINT(N)</td>
<td>Numero da -32768 a 32767 in modalit&agrave; NORMAL, se utilizzato con UNSIGNED va da
0 a 65535 .</td>
</tr>
<tr>
<td>MEDIUMINT(N)</td>
<td>Numero da -8388608 a 8388607 in modalit&agrave; NORMAL, se utilizzato con UNSIGNED va da
0 a 16777215 .</td>
</tr>
<tr>
<td>INT(N)</td>
<td>Numero da -2147483648 a 2147483647 in modalit&agrave; NORMAL, se utilizzato con UNSIGNED va da
0 a 4294967295 .</td>
</tr>
<tr>
<td>BIGINT(N)</td>
<td>Numero da -9223372036854775808 a 9223372036854775807 in modalit&agrave; NORMAL, se utilizzato con UNSIGNED va da
0 a 18446744073709551615 .</td>
</tr>
<tr>
<td>FLOAT</td>
<td>Un piccolo numero con la virgola.</td>
</tr>
<tr>
<td>DOUBLE(N)</td>
<td>Un grande numero con la virgola.</td>
</tr>
</tbody>
</table>
&nbsp;
<table>
<tbody>
<tr>
<th colspan="2">Data types relativi alle date</th>
</tr>
<tr>
<td>DATE</td>
<td>YYYY-MM-DD.</td>
</tr>
<tr>
<td>DATETIME</td>
<td>YYYY-MM-DD HH:MM:SS.</td>
</tr>
<tr>
<td>TIMESTAMP</td>
<td>YYYYMMDDHHMMSS.</td>
</tr>
<tr>
<td>TIME</td>
<td>HH:MM:SS.</td>
</tr>
</tbody>
</table>

*NB: il valore "N" che si legge tra le parentesi rappresenta un numero utile a specificare la grandezza massima <b>entro i limiti fisici del datatype</b>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>212</wp:post_id>
		<wp:post_date>2013-02-28 11:08:00</wp:post_date>
		<wp:post_date_gmt>2013-02-28 10:08:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tipologie-campi-tabella-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383737781;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scoprire i data types delle colonne di una tabella in SQL</title>
		<link>http://www.kludge.it/scoprire-i-data-types-delle-colonne-di-una-tabella-in-sql/</link>
		<pubDate>Thu, 28 Feb 2013 07:31:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=222</guid>
		<description></description>
		<content:encoded><![CDATA[Supponiamo di dover lavorare su un Database che non abbiamo creato noi e nel quale dobbiamo inserire dei dati: come facciamo a scoprire il datatype di ciascuna colonna di una tabella? Con il comando EXPLAIN: posizioniamoci nel database di nostro interesse con il comando "USE nome_database" e lanciamo la query:
[cc lang="sql"]EXPLAIN nome_tabella;[/cc]

il risultato sar&agrave; qualcosa di simile a:
[cc lang="sql"]
+-------------+--------------+------+-----+---------+-------+
| Field       | Type         | Null | Key | Default | Extra |
+-------------+--------------+------+-----+---------+-------+
| title       | varchar(100) | YES  |     | NULL    |       |
| name        | varchar(30)  | YES  |     | NULL    |       |
| children    | int(11)      | YES  |     | NULL    |       |
+-------------+--------------+------+-----+---------+-------+
3 rows in set (0,01 sec)[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>222</wp:post_id>
		<wp:post_date>2013-02-28 08:31:00</wp:post_date>
		<wp:post_date_gmt>2013-02-28 07:31:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scoprire-i-data-types-delle-colonne-di-una-tabella-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="explain"><![CDATA[EXPLAIN;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383822357;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Inserire dati in una tabella in SQL</title>
		<link>http://www.kludge.it/inserire-dati-in-una-tabella-in-sql/</link>
		<pubDate>Fri, 01 Mar 2013 08:44:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=225</guid>
		<description></description>
		<content:encoded><![CDATA[Per inserire dati in una tabella della quale conosciamo le colonne possiamo utilizzare la seguente query:
[cc lang="sql"]INSERT INTO nome_tabella VALUES("contenuto della prima colonna", "contenuto della seconda");[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>225</wp:post_id>
		<wp:post_date>2013-03-01 09:44:00</wp:post_date>
		<wp:post_date_gmt>2013-03-01 08:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>inserire-dati-in-una-tabella-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="insert"><![CDATA[INSERT;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383666727;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Il nesting in LESS</title>
		<link>http://www.kludge.it/13/</link>
		<pubDate>Thu, 07 Mar 2013 08:27:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=13</guid>
		<description></description>
		<content:encoded><![CDATA[Grazie a less possiamo gestire gli stili ad albero in questo modo:
[cc lang="css"]header {
	color: red;
	h1 {
		font-size:25px;
	}
}[/cc]

Ci pensar&agrave; poi Less e trasformare il tutto in:
[cc lang="css"]
header {
	color: red;
}

header h1 {
	font-size: 25px;
}
[/cc]
Facciamo per&ograve; attenzione a non abusare di questa caratteristica, rischieremmo di essere troppo specifici anche quando, magari non ce ne sarebbe bisogno.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2013-03-07 09:27:00</wp:post_date>
		<wp:post_date_gmt>2013-03-07 08:27:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>13</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="color"><![CDATA[color]]></category>
		<category domain="post_tag" nicename="css"><![CDATA[CSS]]></category>
		<category domain="category" nicename="css"><![CDATA[CSS]]></category>
		<category domain="post_tag" nicename="css3-2"><![CDATA[CSS3]]></category>
		<category domain="funzione_linguaggio" nicename="font-size"><![CDATA[font-size]]></category>
		<category domain="category" nicename="less"><![CDATA[LESS]]></category>
		<category domain="post_tag" nicename="less"><![CDATA[LESS]]></category>
		<category domain="funzione_linguaggio" nicename="less"><![CDATA[LESS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383839328;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Aggiungere una classe ad un elemento con jQuery</title>
		<link>http://www.kludge.it/aggiungere-una-classa-ad-un-elemento-con-jquery/</link>
		<pubDate>Tue, 05 Mar 2013 10:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=121</guid>
		<description></description>
		<content:encoded><![CDATA[Per aggiungere una classe ad un elemento html con jQuery possiamo utilizzare il metodo addClass():
[cc lang="html"]
<ul>
	<li>ciao</li>
	<li>ciao due</li>
	<li>ciao tre</li>
</ul>
[/cc]
[cc lang="jquery"]
<script>
	$('ul li').addClass('rosso');
</script>[/cc]

In questo modo avremo aggiunto la classe "rosso" a tutti gli elementi passati a jQuery.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date>2013-03-05 11:00:00</wp:post_date>
		<wp:post_date_gmt>2013-03-05 10:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aggiungere-una-classa-ad-un-elemento-con-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="addclass"><![CDATA[addClass();]]></category>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:48:"http://www.kludge.it/funzione_linguaggio/jquery/";}s:4:"time";i:1383899769;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Eseguire uno script jQuery solo quando il documento è stato caricato</title>
		<link>http://www.kludge.it/eseguire-uno-script-jquery-solo-quando-il-documento-e-stato-caricato/</link>
		<pubDate>Sat, 02 Mar 2013 10:25:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=124</guid>
		<description></description>
		<content:encoded><![CDATA[Per eseguire del codice solo quando il documento &egrave; stato totalmente caricato possiamo utilizzare il metodo ready():
[cc lang="jQuery"]
<script>
$(document).ready(function() {
	$('ul li').addClass('rosso');
});
</script>
[/cc]
[cc lang="html"]
<ul>
	<li>ciao</li>
	<li>ciao due</li>
	<li>ciao tre</li>
</ul>
[/cc]

In questo modo avremo aggiunto la classe "rosso" a tutti gli elementi passati a jQuery avendo la certezza che il documento fosse stato caricato..]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>124</wp:post_id>
		<wp:post_date>2013-03-02 11:25:00</wp:post_date>
		<wp:post_date_gmt>2013-03-02 10:25:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eseguire-uno-script-jquery-solo-quando-il-documento-e-stato-caricato</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="addclass"><![CDATA[addClass();]]></category>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="ready"><![CDATA[ready();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:48:"http://www.kludge.it/funzione_linguaggio/jquery/";}s:4:"time";i:1383749793;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Selezionare i figli di un elemento in jQuery e CSS</title>
		<link>http://www.kludge.it/selezionare-i-figli-di-un-elemento-in-jquery-e-css/</link>
		<pubDate>Sun, 03 Mar 2013 10:12:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=134</guid>
		<description></description>
		<content:encoded><![CDATA[Per selezionare i "figli diretti" di un dato elemento in jQuery possiamo utilizzare il metodo children():
[cc lang="html"]
<ul class="class">
	<li>ciao</li>
	<li>ciao due</li>
	<li>
	<ul>
		<li>ciao tre</li>
	</ul>
	</li>
</ul>
[/cc]
[cc lang="jQuery"]
<script>
$(document).ready(function() {
	$('ul.class').children('li').css('color', 'red');
});
</script> 
[/cc]
Nell'esempio sono stati colorati di rosso solo "ciao" e "ciao due" mentre (solo nel caso in cui fosse stato impostato un colore di default per i list item) "ciao tre" rimarr&agrave; invariato in quanto, come gi&agrave; detto, il metodo children seleziona solo i figli diretti.

In css avremmo potuto raggiungere lo stesso scopo utilizzando la dicitura:
[cc lang="css"]
ul.class > li {
	color: red;
}
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>134</wp:post_id>
		<wp:post_date>2013-03-03 11:12:00</wp:post_date>
		<wp:post_date_gmt>2013-03-03 10:12:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selezionare-i-figli-di-un-elemento-in-jquery-e-css</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="children"><![CDATA[children();]]></category>
		<category domain="category" nicename="css"><![CDATA[CSS]]></category>
		<category domain="funzione_linguaggio" nicename="css-jquery"><![CDATA[css();]]></category>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="ready"><![CDATA[ready();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:48:"http://www.kludge.it/funzione_linguaggio/jquery/";}s:4:"time";i:1383869656;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Selezionare tutti i figli di un dato tipo in jQuery e CSS</title>
		<link>http://www.kludge.it/selezionare-tutti-i-figli-di-un-dato-tipo-in-jquery-e-css/</link>
		<pubDate>Sun, 03 Mar 2013 08:34:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=137</guid>
		<description></description>
		<content:encoded><![CDATA[Per selezionare tutti i figli di un dato tipo in jQuery possiamo utilizzare il metodo find():
[cc lang="html"]
<ul class="class">
	<li>ciao</li>
	<li>ciao due</li>
	<li>
	<ul>
		<li>ciao tre</li>
	</ul>
	</li>
</ul>
[/cc]
[cc lang="jQuery"]
<script>
$(document).ready(function() {
	$('ul.class').find('li').css('color', 'red');
});
</script> 
[/cc]
Nell'esempio sono stati colorati di rosso tutti i list item (compreso "ciao tre" che invece con il metodo children() veniva ignorato).

In css avremmo potuto raggiungere lo stesso scopo utilizzando la dicitura:
[cc lang="css"]
ul.class li {
	color: red;
}
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>137</wp:post_id>
		<wp:post_date>2013-03-03 09:34:00</wp:post_date>
		<wp:post_date_gmt>2013-03-03 08:34:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selezionare-tutti-i-figli-di-un-dato-tipo-in-jquery-e-css</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="css"><![CDATA[CSS]]></category>
		<category domain="funzione_linguaggio" nicename="css-jquery"><![CDATA[css();]]></category>
		<category domain="funzione_linguaggio" nicename="find"><![CDATA[find();]]></category>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="ready"><![CDATA[ready();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:48:"http://www.kludge.it/funzione_linguaggio/jquery/";}s:4:"time";i:1383827926;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Selezionare un elemento con un indice in jQuery</title>
		<link>http://www.kludge.it/selezionare-un-elemento-con-un-indice-in-jquery/</link>
		<pubDate>Mon, 04 Mar 2013 09:19:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=142</guid>
		<description></description>
		<content:encoded><![CDATA[Attraverso il metodo eq() possiamo, data una selezione contenente pi&ugrave; elementi, specificare un elemento attraverso il suo indice:
[cc lang="html"]
<ul class="class">
	<li>ciao</li>
	<li>ciao due</li>
	<li>
	<ul>
		<li>ciao tre</li>
	</ul>
	</li>
</ul>
[/cc]
[cc lang="jQuery"]
$('ul.class li').eq(1).css('color', 'red');
[/cc]
Nell'esempio abbiamo colorato di rosso il testo "ciao due" (dato che la numerazione &egrave; 0 based).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>142</wp:post_id>
		<wp:post_date>2013-03-04 10:19:00</wp:post_date>
		<wp:post_date_gmt>2013-03-04 09:19:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selezionare-un-elemento-con-un-indice-in-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="css-jquery"><![CDATA[css();]]></category>
		<category domain="funzione_linguaggio" nicename="eq"><![CDATA[eq();]]></category>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383844820;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Selezionare il primo elemento di un gruppo in jQuery</title>
		<link>http://www.kludge.it/selezionare-il-primo-elemento-di-un-gruppo-in-jquery/</link>
		<pubDate>Mon, 04 Mar 2013 07:10:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=144</guid>
		<description></description>
		<content:encoded><![CDATA[Grazie al metodo first() possiamo selezionare solo il primo elemento di un dato gruppo:
[cc lang="html"]
<ul class="class">
	<li>ciao uno</li>
	<li>ciao due</li>
	<li>ciao tre</li>
</ul>
[/cc]
[cc lang="jQuery"]
$('ul.class li').first().css('color', 'red');
[/cc]
Nell'esempio abbiamo colorato di rosso il testo "ciao" ovvero il primo list item che jQuery ha trovato con il selettore [cci lang="css"]ul.class li[/cci].]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>144</wp:post_id>
		<wp:post_date>2013-03-04 08:10:00</wp:post_date>
		<wp:post_date_gmt>2013-03-04 07:10:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selezionare-il-primo-elemento-di-un-gruppo-in-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="css-jquery"><![CDATA[css();]]></category>
		<category domain="funzione_linguaggio" nicename="first"><![CDATA[first();]]></category>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:48:"http://www.kludge.it/funzione_linguaggio/jquery/";}s:4:"time";i:1383817667;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Selezionare l&#039;ultimo elemento di un gruppo in jQuery</title>
		<link>http://www.kludge.it/selezionare-lultimo-elemento-di-un-gruppo-in-jquery/</link>
		<pubDate>Tue, 05 Mar 2013 07:02:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=147</guid>
		<description></description>
		<content:encoded><![CDATA[Grazie al metodo last() possiamo selezionare solo l'ultimo elemento di un dato gruppo:
[cc lang="html"]
<ul class="class">
	<li>ciao uno</li>
	<li>ciao due</li>
	<li>ciao tre</li>
</ul>
[/cc]
[cc lang="jQuery"]
$('ul.class li').last().css('color', 'red');
[/cc]
Nell'esempio abbiamo colorato di rosso il testo "ciao tre" ovvero l'ultimo list item che jQuery ha trovato con il selettore [cci lang="css"]ul.class li[/cci].]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date>2013-03-05 08:02:00</wp:post_date>
		<wp:post_date_gmt>2013-03-05 07:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selezionare-lultimo-elemento-di-un-gruppo-in-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="css-jquery"><![CDATA[css();]]></category>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="last"><![CDATA[last();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:48:"http://www.kludge.it/funzione_linguaggio/jquery/";}s:4:"time";i:1383894311;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Selezionare l&#039;elemento precedente ad una selezione in jQuery</title>
		<link>http://www.kludge.it/selezionare-lelemento-precedente-ad-una-selezione-in-jquery/</link>
		<pubDate>Wed, 06 Mar 2013 07:42:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=150</guid>
		<description></description>
		<content:encoded><![CDATA[Possiamo selezionare gli/l'elemento precedente ad una data selezione in jQuery con il metodo prev():
[cc lang="html"]
<ul class="class">
	<li>ciao uno</li>
	<li>ciao due</li>
	<li>ciao tre</li>
</ul>
[/cc]
[cc lang="jQuery"]
$('ul.class li').eq(2).prev().css('color', 'red');
[/cc]
In questo esempio abbiamo colorato di rosso il testo "ciao due" ovvero il list item precedente a quello selezionato ("ciao tre").
NB: Ricordiamoci che il metodo eq(); &egrave; zero-based quindi cominciate a contare sempre da 0.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date>2013-03-06 08:42:00</wp:post_date>
		<wp:post_date_gmt>2013-03-06 07:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selezionare-lelemento-precedente-ad-una-selezione-in-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="css-jquery"><![CDATA[css();]]></category>
		<category domain="funzione_linguaggio" nicename="eq"><![CDATA[eq();]]></category>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="prev"><![CDATA[prev();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:48:"http://www.kludge.it/funzione_linguaggio/jquery/";}s:4:"time";i:1383829486;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Selezionare l’elemento successivo ad una selezione in jQuery</title>
		<link>http://www.kludge.it/selezionare-lelemento-successivo-ad-una-selezione-in-jquery/</link>
		<pubDate>Wed, 06 Mar 2013 08:37:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=152</guid>
		<description></description>
		<content:encoded><![CDATA[Possiamo selezionare gli/l'elemento successivo ad una data selezione in jQuery con il metodo next():
[cc lang="html"]
<ul class="class">
	<li>ciao uno</li>
	<li>ciao due</li>
	<li>ciao tre</li>
</ul>
[/cc]
[cc lang="jQuery"]
$('ul.class li').eq(1).next().css('color', 'red');
[/cc]
In questo esempio abbiamo colorato di rosso il testo "ciao tre" ovvero il list item precedente a quello selezionato ("ciao due").

NB: Ricordiamoci che il metodo eq(); è zero-based quindi cominciate a contare sempre da 0.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date>2013-03-06 09:37:00</wp:post_date>
		<wp:post_date_gmt>2013-03-06 08:37:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selezionare-lelemento-successivo-ad-una-selezione-in-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="css-jquery"><![CDATA[css();]]></category>
		<category domain="funzione_linguaggio" nicename="eq"><![CDATA[eq();]]></category>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="next"><![CDATA[next();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:48:"http://www.kludge.it/funzione_linguaggio/jquery/";}s:4:"time";i:1383837295;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Inserire dati solo in alcune delle colonne di una tabella in SQL</title>
		<link>http://www.kludge.it/inserire-dati-solo-in-alcune-delle-colonne-di-una-tabella-in-sql/</link>
		<pubDate>Fri, 01 Mar 2013 10:03:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=227</guid>
		<description></description>
		<content:encoded><![CDATA[Per inserire dati solo in alcune delle colonne di una tabella possiamo specificare le colonne interessaten tra parentesi subito dopo il nome della tabella come nella query seguente:
[cc lang="sql"]INSERT INTO nome_tabella(nome_colonna) VALUES("Contenuto campo");[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>227</wp:post_id>
		<wp:post_date>2013-03-01 11:03:00</wp:post_date>
		<wp:post_date_gmt>2013-03-01 10:03:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>inserire-dati-solo-in-alcune-delle-colonne-di-una-tabella-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="insert"><![CDATA[INSERT;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383666727;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Selezionare / visualizzare record di una tabella in SQL</title>
		<link>http://www.kludge.it/selezionare-visualizzare-record-di-una-tabella-in-sql/</link>
		<pubDate>Sat, 02 Mar 2013 07:43:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=231</guid>
		<description></description>
		<content:encoded><![CDATA[Per selezionare i record di una data tabella in SQL possiamo utilizzare la seguente query:
[cc lang="sql"]SELECT nome_colonna, nome_colonna2 FROM nome_tabella;[/cc]
In alternativa se volessimo selezionare tutte le colonne di nome_tabella potremmo utilizzare il simbolo asterisco (*) che, in SQL, sta per "tutti":
[cc lang="sql"]SELECT * FROM nome_tabella;[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>231</wp:post_id>
		<wp:post_date>2013-03-02 08:43:00</wp:post_date>
		<wp:post_date_gmt>2013-03-02 07:43:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selezionare-visualizzare-record-di-una-tabella-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="select"><![CDATA[SELECT;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383829276;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rimuovere una classe di un elemento in jQuery</title>
		<link>http://www.kludge.it/rimuovere-una-classe-di-un-elemento-in-jquery/</link>
		<pubDate>Sun, 10 Mar 2013 10:06:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=304</guid>
		<description></description>
		<content:encoded><![CDATA[Per rimuovere una classe ad un elemento html con jQuery possiamo utilizzare il metodo removeClass():
[cc lang="html"]
<ul class="emphasis">
	<li>ciao</li>
	<li>ciao due</li>
	<li>ciao tre</li>
</ul>
[/cc]
[cc lang="jquery"]
<script>
	$('ul').removeClass('emphasis');
</script>[/cc]

In questo modo avremo rimosso la classe "emphasis" a tutti gli elementi passati a jQuery.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>304</wp:post_id>
		<wp:post_date>2013-03-10 11:06:00</wp:post_date>
		<wp:post_date_gmt>2013-03-10 10:06:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rimuovere-una-classe-di-un-elemento-in-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="removeclass"><![CDATA[removeClass();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:48:"http://www.kludge.it/funzione_linguaggio/jquery/";}s:4:"time";i:1383827896;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Selezionare il genitore &quot;stretto&quot; di un elemento in jQuery</title>
		<link>http://www.kludge.it/selezionare-il-genitore-di-un-elemento-in-jquery/</link>
		<pubDate>Sun, 10 Mar 2013 07:28:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=340</guid>
		<description></description>
		<content:encoded><![CDATA[Se, dato un elemento volessimo selezionarne lo "stretto" genitore potremmo utilizzare il metodo parent():
[cc lang="html"]
<ul>
	<li>ciao</li>
	<li>ciao due</li>
	<li>ciao tre</li>
</ul>
[/cc]
[cc lang="jquery"]
<script>
	$('li').parent().addClass('rosso');
</script>[/cc]

In questo modo avremo aggiunto la classe "rosso" a ul.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>340</wp:post_id>
		<wp:post_date>2013-03-10 08:28:00</wp:post_date>
		<wp:post_date_gmt>2013-03-10 07:28:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selezionare-il-genitore-di-un-elemento-in-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="parent"><![CDATA[parent();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383828046;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Selezionare i genitori di un elemento in jQuery</title>
		<link>http://www.kludge.it/selezionare-i-genitori-di-un-elemento-in-jquery/</link>
		<pubDate>Sat, 09 Mar 2013 09:28:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=343</guid>
		<description></description>
		<content:encoded><![CDATA[Se, dato un elemento volessimo selezionarne tutti i genitori potremmo utilizzare il metodo parents() (attenzione alla "s" finale):
[cc lang="html"]
<ul class="rosso">
    <li>ciao</li>
    <li>
        <ul>
            <li id="nest">ciao</li>
        </ul>
    </li>
    <li>ciao tre</li>
</ul>
[/cc]
[cc lang="jquery"]
<script type="text/javascript">
	$('li#nest').parents('.rosso').removeClass('rosso');
</script>[/cc]

In questo modo avremo rimosso la classe "rosso" a ul.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>343</wp:post_id>
		<wp:post_date>2013-03-09 10:28:00</wp:post_date>
		<wp:post_date_gmt>2013-03-09 09:28:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selezionare-i-genitori-di-un-elemento-in-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="parents"><![CDATA[parents();]]></category>
		<category domain="funzione_linguaggio" nicename="removeclass"><![CDATA[removeClass();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383827896;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Selezionare l&#039;elemento più vicino in jQuery</title>
		<link>http://www.kludge.it/selezionare-lelemento-pi-vicino-in-jquery/</link>
		<pubDate>Sat, 09 Mar 2013 09:23:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=347</guid>
		<description></description>
		<content:encoded><![CDATA[Se, dato un elemento, volessimo selezionare il pi&ugrave; vicino che abbia determinate caratteristiche potremmo utilizzare il metodo closest():
[cc lang="html"]
<ul class="rosso">
    <li class="rosso">ciao</li>
    <li>
        <ul id="nest">
            <li>ciao</li>
        </ul>
    </li>
    <li>ciao tre</li>
</ul>
[/cc]
[cc lang="jquery"]
<script type="text/javascript">
	$('ul#nest li').closest('.rosso').removeClass('rosso');
</script>[/cc]

In questo modo avremo rimosso la classe "rosso" SOLO dall'elemento "li" in quanto risulta il pi&ugrave; vicino nel DOM (pensiamo sempre al DOM come ad un albero genealogico).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>347</wp:post_id>
		<wp:post_date>2013-03-09 10:23:00</wp:post_date>
		<wp:post_date_gmt>2013-03-09 09:23:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selezionare-lelemento-pi-vicino-in-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="closest"><![CDATA[closest();]]></category>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="removeclass"><![CDATA[removeClass();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383827897;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Metodo is_search() in WORDPRESS</title>
		<link>http://www.kludge.it/metodo-is_search-in-wordpress/</link>
		<pubDate>Fri, 08 Mar 2013 10:14:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=483</guid>
		<description></description>
		<content:encoded><![CDATA[Il metodo is_search() restituisce un valore booleano dicendoci se la pagina attuale &egrave; una pagina di risultati di ricerca.
Pu&ograve; essere utile, ad esempio, se volessimo impedire ai bot dei motori di ricerca di indicizzare le pagine dei risultati di ricerca di modo da evitare di essere penalizzati per la duplicazione del contenuto:
[cc lang="php"]
<?php if (is_search()) {
    echo '<meta name="robots" content="noindex, nofollow" />';
} ?>
[/cc]
Il metodo non accetta parametri.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>483</wp:post_id>
		<wp:post_date>2013-03-08 11:14:00</wp:post_date>
		<wp:post_date_gmt>2013-03-08 10:14:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>metodo-is_search-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="is_search"><![CDATA[is_search();]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383811444;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Metodo is_404() in WORDPRESS</title>
		<link>http://www.kludge.it/metodo-is_404-in-wordpress/</link>
		<pubDate>Fri, 08 Mar 2013 09:17:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=488</guid>
		<description></description>
		<content:encoded><![CDATA[Il metodo is_404() restituisce un valore booleano dicendoci se la pagina attuale &egrave; una pagina di errore 404:
[cc lang="php"]
<?php if (is_404()) {
    echo '<title>Pagina non trovata... ops</title>';
} ?>
[/cc]
Il metodo non accetta parametri.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>488</wp:post_id>
		<wp:post_date>2013-03-08 10:17:00</wp:post_date>
		<wp:post_date_gmt>2013-03-08 09:17:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>metodo-is_404-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="is_404"><![CDATA[is_404();]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383836796;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Creare un nuovo tipo di posts (custom posts type) in WORDPRESS</title>
		<link>http://www.kludge.it/creare-un-nuovo-tipo-di-posts-custom-posts-type-in-wordpress/</link>
		<pubDate>Thu, 07 Mar 2013 08:25:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=552</guid>
		<description></description>
		<content:encoded><![CDATA[Se abbiamo utilizzato wordpress almeno un p&ograve;, anche da utenti, magari installando dei temi fatti da sviluppatori professionisti, ci saremo sicuramente accorti che, talvolta, sono presenti delle nuove tipologie di articoli, le stesse pagine sono dei post type.
Compare infatti una nuova voce nel men&ugrave; all'interno del pannello di amministrazione che ha esattamente le stessa caratteristiche ma un nome diverso: ebbene quelli sono i custom posts type.

Come tutte le altre integrazioni che andiamo a fare al core di wordpress andr&agrave; eseguita all'interno del file function.php del nostro tema o, se vogliamo, in un file esterno che verr&agrave; incluso o richiesto all'interno di function.php.

Apriamo dunque il nostro file e registriamo il nuovo post type:
[cc lang="php"]
// verifichiamo che wordpress sia stato inizializzato
add_action('init', function() {
    // creiamo, ad esempio, un post type per gli snippet
    register_post_type('snippet', array(
        'public' => true, // post type pubblico
        'label' => 'Snippets', // nome dell'etichetta
        'labels' => array( // configuriamo qualche etichetta
            'add_new_item' => 'Aggiungi Snippet',
            'edit_item' => 'Modifica Snippet',
            'new_item' => ' Aggiungi Snippet'
            ),
        'supports' => array( 'title', 'editor', 'comments'),
        'taxonomies' => array( // tag, categorie
            'post_tag',
            'category')
    ));
});
[/cc]
NB: Se stiamo sviluppando un tema che verr&agrave; venduto o, non conosciamo le caratteristiche del server nel quale verr&agrave; installato wordpress &egrave; necessario nominare la funzione passata come secondo parametri ad add_action() e passare una stringa contenente il nome della funzione al suo posto poich&egrave; la sintassi utilizzata nell'esempio &egrave; valida solo dalla versione php 5.3 in poi.

<img src="http://localhost/appunti/wp-content/uploads/Schermata-2013-01-30-a-11.10.38.png" alt="Custom taxonomy dedicata agli snippets" width="162" height="166" class="aligncenter size-full wp-image-677" />

Se controllassimo ora all'interno del nostro pannello admin di wordpress troveremmo dunque la nostra nuova voce men&ugrave; chiamata "Snippets" che supporta il titolo, il testo, i commenti, i tag e le categorie.
Questi ultimi per&ograve;, i tag e le categorie, sono quelli standard ma se volessimo crearne di personalizzati, se volessimo avere delle tassonomie personalizzate? Potremmo crearle con un'altra funzione di wordpress: <a href="/?p=669" title="Creare delle nuove categorie e tag con register_taxonomy()">register_taxonomy()</a>.

Ulteriori opzioni e dettagli sono sempre disponibili nel codex di wordpress all'indirizzo <a href="http://codex.wordpress.org/Function_Reference/register_post_type" title="Referenza metodo register_post_type nel codex">http://codex.wordpress.org/Function_Reference/register_post_type</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>552</wp:post_id>
		<wp:post_date>2013-03-07 09:25:00</wp:post_date>
		<wp:post_date_gmt>2013-03-07 08:25:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creare-un-nuovo-tipo-di-posts-custom-posts-type-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="add_action"><![CDATA[add_action();]]></category>
		<category domain="funzione_linguaggio" nicename="register_post_type"><![CDATA[register_post_type();]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:51:"http://www.kludge.it/funzione_linguaggio/wordpress/";}s:4:"time";i:1383822360;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>I nomi dei colori e i valori esadecimali in CSS</title>
		<link>http://www.kludge.it/i-nomi-dei-colori-e-i-valori-esadecimali-in-css/</link>
		<pubDate>Tue, 05 Mar 2013 08:44:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1323</guid>
		<description></description>
		<content:encoded><![CDATA[Ci sono vari modi per specificare un colore nei nostri CSS: RGB, RGBA, codice esadecimale e testualmente.
Con questa tabella possiamo ricavare i nomi dei vari colori utilizzabili ed il loro corrispettivo codice esadecimale che possono essere utilizzati nelle propriet&agrave; color, background-color, text-shadow, box-shadow ecc.

<style>
td {
-webkit-border-radius: 2px;
   -moz-border-radius: 2px;
   	border-radius: 2px;
padding: 10px;
}
table {
cellspacing: 10px;
}
tr {
border-bottom: 5px solid #fff;
}
tr:nth-child(even) {
background-color: #f1f2f3;
}
tr:hover {
background-color: #ff7;
}
</style>
<table cellspacing="10" border="1" width="100%">
<tr>
<th align="left" width="30%">Nome colore</th>
<th align="left" width="15%">HEX</th>
<th align="left" width="45%">Colore</th>
</tr>

<tr>
<td align="left">Black&nbsp;</td>
<td align="left">#000000</td>
<td style="background-color: #000000">&nbsp;</td>
</tr>


<tr>
<td align="left">Navy&nbsp;</td>
<td align="left">#000080</td>
<td style="background-color: #000080">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkBlue&nbsp;</td>
<td align="left">#00008B</td>
<td style="background-color: #00008B">&nbsp;</td>
</tr>


<tr>
<td align="left">MediumBlue&nbsp;</td>
<td align="left">#0000CD</td>
<td style="background-color: #0000CD">&nbsp;</td>
</tr>


<tr>
<td align="left">Blue&nbsp;</td>
<td align="left">#0000FF</td>
<td style="background-color: #0000FF">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkGreen&nbsp;</td>
<td align="left">#006400</td>
<td style="background-color: #006400">&nbsp;</td>
</tr>


<tr>
<td align="left">Green&nbsp;</td>
<td align="left">#008000</td>
<td style="background-color: #008000">&nbsp;</td>
</tr>


<tr>
<td align="left">Teal&nbsp;</td>
<td align="left">#008080</td>
<td style="background-color: #008080">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkCyan&nbsp;</td>
<td align="left">#008B8B</td>
<td style="background-color: #008B8B">&nbsp;</td>
</tr>


<tr>
<td align="left">DeepSkyBlue&nbsp;</td>
<td align="left">#00BFFF</td>
<td style="background-color: #00BFFF">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkTurquoise&nbsp;</td>
<td align="left">#00CED1</td>
<td style="background-color: #00CED1">&nbsp;</td>
</tr>


<tr>
<td align="left">MediumSpringGreen&nbsp;</td>
<td align="left">#00FA9A</td>
<td style="background-color: #00FA9A">&nbsp;</td>
</tr>


<tr>
<td align="left">Lime&nbsp;</td>
<td align="left">#00FF00</td>
<td style="background-color: #00FF00">&nbsp;</td>
</tr>


<tr>
<td align="left">SpringGreen&nbsp;</td>
<td align="left">#00FF7F</td>
<td style="background-color: #00FF7F">&nbsp;</td>
</tr>


<tr>
<td align="left">Aqua&nbsp;</td>
<td align="left">#00FFFF</td>
<td style="background-color: #00FFFF">&nbsp;</td>
</tr>


<tr>
<td align="left">Cyan&nbsp;</td>
<td align="left">#00FFFF</td>
<td style="background-color: #00FFFF">&nbsp;</td>
</tr>


<tr>
<td align="left">MidnightBlue&nbsp;</td>
<td align="left">#191970</td>
<td style="background-color: #191970">&nbsp;</td>
</tr>


<tr>
<td align="left">DodgerBlue&nbsp;</td>
<td align="left">#1E90FF</td>
<td style="background-color: #1E90FF">&nbsp;</td>
</tr>


<tr>
<td align="left">LightSeaGreen&nbsp;</td>
<td align="left">#20B2AA</td>
<td style="background-color: #20B2AA">&nbsp;</td>
</tr>


<tr>
<td align="left">ForestGreen&nbsp;</td>
<td align="left">#228B22</td>
<td style="background-color: #228B22">&nbsp;</td>
</tr>


<tr>
<td align="left">SeaGreen&nbsp;</td>
<td align="left">#2E8B57</td>
<td style="background-color: #2E8B57">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkSlateGray&nbsp;</td>
<td align="left">#2F4F4F</td>
<td style="background-color: #2F4F4F">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkSlateGrey&nbsp;</td>
<td align="left">#2F4F4F</td>
<td style="background-color: #2F4F4F">&nbsp;</td>
</tr>


<tr>
<td align="left">LimeGreen&nbsp;</td>
<td align="left">#32CD32</td>
<td style="background-color: #32CD32">&nbsp;</td>
</tr>


<tr>
<td align="left">MediumSeaGreen&nbsp;</td>
<td align="left">#3CB371</td>
<td style="background-color: #3CB371">&nbsp;</td>
</tr>


<tr>
<td align="left">Turquoise&nbsp;</td>
<td align="left">#40E0D0</td>
<td style="background-color: #40E0D0">&nbsp;</td>
</tr>


<tr>
<td align="left">RoyalBlue&nbsp;</td>
<td align="left">#4169E1</td>
<td style="background-color: #4169E1">&nbsp;</td>
</tr>


<tr>
<td align="left">SteelBlue&nbsp;</td>
<td align="left">#4682B4</td>
<td style="background-color: #4682B4">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkSlateBlue&nbsp;</td>
<td align="left">#483D8B</td>
<td style="background-color: #483D8B">&nbsp;</td>
</tr>


<tr>
<td align="left">MediumTurquoise&nbsp;</td>
<td align="left">#48D1CC</td>
<td style="background-color: #48D1CC">&nbsp;</td>
</tr>


<tr>
<td align="left">Indigo  &nbsp;</td>
<td align="left">#4B0082</td>
<td style="background-color: #4B0082">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkOliveGreen&nbsp;</td>
<td align="left">#556B2F</td>
<td style="background-color: #556B2F">&nbsp;</td>
</tr>


<tr>
<td align="left">CadetBlue&nbsp;</td>
<td align="left">#5F9EA0</td>
<td style="background-color: #5F9EA0">&nbsp;</td>
</tr>


<tr>
<td align="left">CornflowerBlue&nbsp;</td>
<td align="left">#6495ED</td>
<td style="background-color: #6495ED">&nbsp;</td>
</tr>


<tr>
<td align="left">MediumAquaMarine&nbsp;</td>
<td align="left">#66CDAA</td>
<td style="background-color: #66CDAA">&nbsp;</td>
</tr>


<tr>
<td align="left">DimGray&nbsp;</td>
<td align="left">#696969</td>
<td style="background-color: #696969">&nbsp;</td>
</tr>


<tr>
<td align="left">DimGrey&nbsp;</td>
<td align="left">#696969</td>
<td style="background-color: #696969">&nbsp;</td>
</tr>


<tr>
<td align="left">SlateBlue&nbsp;</td>
<td align="left">#6A5ACD</td>
<td style="background-color: #6A5ACD">&nbsp;</td>
</tr>


<tr>
<td align="left">OliveDrab&nbsp;</td>
<td align="left">#6B8E23</td>
<td style="background-color: #6B8E23">&nbsp;</td>
</tr>


<tr>
<td align="left">SlateGray&nbsp;</td>
<td align="left">#708090</td>
<td style="background-color: #708090">&nbsp;</td>
</tr>


<tr>
<td align="left">SlateGrey&nbsp;</td>
<td align="left">#708090</td>
<td style="background-color: #708090">&nbsp;</td>
</tr>


<tr>
<td align="left">LightSlateGray&nbsp;</td>
<td align="left">#778899</td>
<td style="background-color: #778899">&nbsp;</td>
</tr>


<tr>
<td align="left">LightSlateGrey&nbsp;</td>
<td align="left">#778899</td>
<td style="background-color: #778899">&nbsp;</td>
</tr>


<tr>
<td align="left">MediumSlateBlue&nbsp;</td>
<td align="left">#7B68EE</td>
<td style="background-color: #7B68EE">&nbsp;</td>
</tr>


<tr>
<td align="left">LawnGreen&nbsp;</td>
<td align="left">#7CFC00</td>
<td style="background-color: #7CFC00">&nbsp;</td>
</tr>


<tr>
<td align="left">Chartreuse&nbsp;</td>
<td align="left">#7FFF00</td>
<td style="background-color: #7FFF00">&nbsp;</td>
</tr>


<tr>
<td align="left">Aquamarine&nbsp;</td>
<td align="left">#7FFFD4</td>
<td style="background-color: #7FFFD4">&nbsp;</td>
</tr>


<tr>
<td align="left">Maroon&nbsp;</td>
<td align="left">#800000</td>
<td style="background-color: #800000">&nbsp;</td>
</tr>


<tr>
<td align="left">Purple&nbsp;</td>
<td align="left">#800080</td>
<td style="background-color: #800080">&nbsp;</td>
</tr>


<tr>
<td align="left">Olive&nbsp;</td>
<td align="left">#808000</td>
<td style="background-color: #808000">&nbsp;</td>
</tr>


<tr>
<td align="left">Gray&nbsp;</td>
<td align="left">#808080</td>
<td style="background-color: #808080">&nbsp;</td>
</tr>


<tr>
<td align="left">Grey&nbsp;</td>
<td align="left">#808080</td>
<td style="background-color: #808080">&nbsp;</td>
</tr>


<tr>
<td align="left">SkyBlue&nbsp;</td>
<td align="left">#87CEEB</td>
<td style="background-color: #87CEEB">&nbsp;</td>
</tr>


<tr>
<td align="left">LightSkyBlue&nbsp;</td>
<td align="left">#87CEFA</td>
<td style="background-color: #87CEFA">&nbsp;</td>
</tr>


<tr>
<td align="left">BlueViolet&nbsp;</td>
<td align="left">#8A2BE2</td>
<td style="background-color: #8A2BE2">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkRed&nbsp;</td>
<td align="left">#8B0000</td>
<td style="background-color: #8B0000">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkMagenta&nbsp;</td>
<td align="left">#8B008B</td>
<td style="background-color: #8B008B">&nbsp;</td>
</tr>


<tr>
<td align="left">SaddleBrown&nbsp;</td>
<td align="left">#8B4513</td>
<td style="background-color: #8B4513">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkSeaGreen&nbsp;</td>
<td align="left">#8FBC8F</td>
<td style="background-color: #8FBC8F">&nbsp;</td>
</tr>


<tr>
<td align="left">LightGreen&nbsp;</td>
<td align="left">#90EE90</td>
<td style="background-color: #90EE90">&nbsp;</td>
</tr>


<tr>
<td align="left">MediumPurple&nbsp;</td>
<td align="left">#9370DB</td>
<td style="background-color: #9370DB">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkViolet&nbsp;</td>
<td align="left">#9400D3</td>
<td style="background-color: #9400D3">&nbsp;</td>
</tr>


<tr>
<td align="left">PaleGreen&nbsp;</td>
<td align="left">#98FB98</td>
<td style="background-color: #98FB98">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkOrchid&nbsp;</td>
<td align="left">#9932CC</td>
<td style="background-color: #9932CC">&nbsp;</td>
</tr>


<tr>
<td align="left">YellowGreen&nbsp;</td>
<td align="left">#9ACD32</td>
<td style="background-color: #9ACD32">&nbsp;</td>
</tr>


<tr>
<td align="left">Sienna&nbsp;</td>
<td align="left">#A0522D</td>
<td style="background-color: #A0522D">&nbsp;</td>
</tr>


<tr>
<td align="left">Brown&nbsp;</td>
<td align="left">#A52A2A</td>
<td style="background-color: #A52A2A">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkGray&nbsp;</td>
<td align="left">#A9A9A9</td>
<td style="background-color: #A9A9A9">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkGrey&nbsp;</td>
<td align="left">#A9A9A9</td>
<td style="background-color: #A9A9A9">&nbsp;</td>
</tr>


<tr>
<td align="left">LightBlue&nbsp;</td>
<td align="left">#ADD8E6</td>
<td style="background-color: #ADD8E6">&nbsp;</td>
</tr>


<tr>
<td align="left">GreenYellow&nbsp;</td>
<td align="left">#ADFF2F</td>
<td style="background-color: #ADFF2F">&nbsp;</td>
</tr>


<tr>
<td align="left">PaleTurquoise&nbsp;</td>
<td align="left">#AFEEEE</td>
<td style="background-color: #AFEEEE">&nbsp;</td>
</tr>


<tr>
<td align="left">LightSteelBlue&nbsp;</td>
<td align="left">#B0C4DE</td>
<td style="background-color: #B0C4DE">&nbsp;</td>
</tr>


<tr>
<td align="left">PowderBlue&nbsp;</td>
<td align="left">#B0E0E6</td>
<td style="background-color: #B0E0E6">&nbsp;</td>
</tr>


<tr>
<td align="left">FireBrick&nbsp;</td>
<td align="left">#B22222</td>
<td style="background-color: #B22222">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkGoldenRod&nbsp;</td>
<td align="left">#B8860B</td>
<td style="background-color: #B8860B">&nbsp;</td>
</tr>


<tr>
<td align="left">MediumOrchid&nbsp;</td>
<td align="left">#BA55D3</td>
<td style="background-color: #BA55D3">&nbsp;</td>
</tr>


<tr>
<td align="left">RosyBrown&nbsp;</td>
<td align="left">#BC8F8F</td>
<td style="background-color: #BC8F8F">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkKhaki&nbsp;</td>
<td align="left">#BDB76B</td>
<td style="background-color: #BDB76B">&nbsp;</td>
</tr>


<tr>
<td align="left">Silver&nbsp;</td>
<td align="left">#C0C0C0</td>
<td style="background-color: #C0C0C0">&nbsp;</td>
</tr>


<tr>
<td align="left">MediumVioletRed&nbsp;</td>
<td align="left">#C71585</td>
<td style="background-color: #C71585">&nbsp;</td>
</tr>


<tr>
<td align="left">IndianRed &nbsp;</td>
<td align="left">#CD5C5C</td>
<td style="background-color: #CD5C5C">&nbsp;</td>
</tr>


<tr>
<td align="left">Peru&nbsp;</td>
<td align="left">#CD853F</td>
<td style="background-color: #CD853F">&nbsp;</td>
</tr>


<tr>
<td align="left">Chocolate&nbsp;</td>
<td align="left">#D2691E</td>
<td style="background-color: #D2691E">&nbsp;</td>
</tr>


<tr>
<td align="left">Tan&nbsp;</td>
<td align="left">#D2B48C</td>
<td style="background-color: #D2B48C">&nbsp;</td>
</tr>


<tr>
<td align="left">LightGray&nbsp;</td>
<td align="left">#D3D3D3</td>
<td style="background-color: #D3D3D3">&nbsp;</td>
</tr>


<tr>
<td align="left">LightGrey&nbsp;</td>
<td align="left">#D3D3D3</td>
<td style="background-color: #D3D3D3">&nbsp;</td>
</tr>


<tr>
<td align="left">Thistle&nbsp;</td>
<td align="left">#D8BFD8</td>
<td style="background-color: #D8BFD8">&nbsp;</td>
</tr>


<tr>
<td align="left">Orchid&nbsp;</td>
<td align="left">#DA70D6</td>
<td style="background-color: #DA70D6">&nbsp;</td>
</tr>


<tr>
<td align="left">GoldenRod&nbsp;</td>
<td align="left">#DAA520</td>
<td style="background-color: #DAA520">&nbsp;</td>
</tr>


<tr>
<td align="left">PaleVioletRed&nbsp;</td>
<td align="left">#DB7093</td>
<td style="background-color: #DB7093">&nbsp;</td>
</tr>


<tr>
<td align="left">Crimson&nbsp;</td>
<td align="left">#DC143C</td>
<td style="background-color: #DC143C">&nbsp;</td>
</tr>


<tr>
<td align="left">Gainsboro&nbsp;</td>
<td align="left">#DCDCDC</td>
<td style="background-color: #DCDCDC">&nbsp;</td>
</tr>


<tr>
<td align="left">Plum&nbsp;</td>
<td align="left">#DDA0DD</td>
<td style="background-color: #DDA0DD">&nbsp;</td>
</tr>


<tr>
<td align="left">BurlyWood&nbsp;</td>
<td align="left">#DEB887</td>
<td style="background-color: #DEB887">&nbsp;</td>
</tr>


<tr>
<td align="left">LightCyan&nbsp;</td>
<td align="left">#E0FFFF</td>
<td style="background-color: #E0FFFF">&nbsp;</td>
</tr>


<tr>
<td align="left">Lavender&nbsp;</td>
<td align="left">#E6E6FA</td>
<td style="background-color: #E6E6FA">&nbsp;</td>
</tr>


<tr>
<td align="left">DarkSalmon&nbsp;</td>
<td align="left">#E9967A</td>
<td style="background-color: #E9967A">&nbsp;</td>
</tr>


<tr>
<td align="left">Violet&nbsp;</td>
<td align="left">#EE82EE</td>
<td style="background-color: #EE82EE">&nbsp;</td>
</tr>


<tr>
<td align="left">PaleGoldenRod&nbsp;</td>
<td align="left">#EEE8AA</td>
<td style="background-color: #EEE8AA">&nbsp;</td>
</tr>


<tr>
<td align="left">LightCoral&nbsp;</td>
<td align="left">#F08080</td>
<td style="background-color: #F08080">&nbsp;</td>
</tr>


<tr>
<td align="left">Khaki&nbsp;</td>
<td align="left">#F0E68C</td>
<td style="background-color: #F0E68C">&nbsp;</td>
</tr>


<tr>
<td align="left">AliceBlue&nbsp;</td>
<td align="left">#F0F8FF</td>
<td style="background-color: #F0F8FF">&nbsp;</td>
</tr>


<tr>
<td align="left">HoneyDew&nbsp;</td>
<td align="left">#F0FFF0</td>
<td style="background-color: #F0FFF0">&nbsp;</td>
</tr>


<tr>
<td align="left">Azure&nbsp;</td>
<td align="left">#F0FFFF</td>
<td style="background-color: #F0FFFF">&nbsp;</td>
</tr>


<tr>
<td align="left">SandyBrown&nbsp;</td>
<td align="left">#F4A460</td>
<td style="background-color: #F4A460">&nbsp;</td>
</tr>


<tr>
<td align="left">Wheat&nbsp;</td>
<td align="left">#F5DEB3</td>
<td style="background-color: #F5DEB3">&nbsp;</td>
</tr>


<tr>
<td align="left">Beige&nbsp;</td>
<td align="left">#F5F5DC</td>
<td style="background-color: #F5F5DC">&nbsp;</td>
</tr>


<tr>
<td align="left">WhiteSmoke&nbsp;</td>
<td align="left">#F5F5F5</td>
<td style="background-color: #F5F5F5">&nbsp;</td>
</tr>


<tr>
<td align="left">MintCream&nbsp;</td>
<td align="left">#F5FFFA</td>
<td style="background-color: #F5FFFA">&nbsp;</td>
</tr>


<tr>
<td align="left">GhostWhite&nbsp;</td>
<td align="left">#F8F8FF</td>
<td style="background-color: #F8F8FF">&nbsp;</td>
</tr>


<tr>
<td align="left">Salmon&nbsp;</td>
<td align="left">#FA8072</td>
<td style="background-color: #FA8072">&nbsp;</td>
</tr>


<tr>
<td align="left">AntiqueWhite&nbsp;</td>
<td align="left">#FAEBD7</td>
<td style="background-color: #FAEBD7">&nbsp;</td>
</tr>


<tr>
<td align="left">Linen&nbsp;</td>
<td align="left">#FAF0E6</td>
<td style="background-color: #FAF0E6">&nbsp;</td>
</tr>


<tr>
<td align="left">LightGoldenRodYellow&nbsp;</td>
<td align="left">#FAFAD2</td>
<td style="background-color: #FAFAD2">&nbsp;</td>
</tr>


<tr>
<td align="left">OldLace&nbsp;</td>
<td align="left">#FDF5E6</td>
<td style="background-color: #FDF5E6">&nbsp;</td>
</tr>


<tr>
<td align="left">Red&nbsp;</td>
<td align="left">#FF0000</td>
<td style="background-color: #FF0000">&nbsp;</td>
</tr>


<tr>
<td align="left">Fuchsia&nbsp;</td>
<td align="left">#FF00FF</td>
<td style="background-color: #FF00FF">&nbsp;</td>
</tr>


<tr>
<td align="left">Magenta&nbsp;</td>
<td align="left">#FF00FF</td>
<td style="background-color: #FF00FF">&nbsp;</td>
</tr>


<tr>
<td align="left">DeepPink&nbsp;</td>
<td align="left">#FF1493</td>
<td style="background-color: #FF1493">&nbsp;</td>
</tr>


<tr>
<td align="left">OrangeRed&nbsp;</td>
<td align="left">#FF4500</td>
<td style="background-color: #FF4500">&nbsp;</td>
</tr>


<tr>
<td align="left">Tomato&nbsp;</td>
<td align="left">#FF6347</td>
<td style="background-color: #FF6347">&nbsp;</td>
</tr>


<tr>
<td align="left">HotPink&nbsp;</td>
<td align="left">#FF69B4</td>
<td style="background-color: #FF69B4">&nbsp;</td>
</tr>


<tr>
<td align="left">Coral&nbsp;</td>
<td align="left">#FF7F50</td>
<td style="background-color: #FF7F50">&nbsp;</td>
</tr>


<tr>
<td align="left">Darkorange&nbsp;</td>
<td align="left">#FF8C00</td>
<td style="background-color: #FF8C00">&nbsp;</td>
</tr>


<tr>
<td align="left">LightSalmon&nbsp;</td>
<td align="left">#FFA07A</td>
<td style="background-color: #FFA07A">&nbsp;</td>
</tr>


<tr>
<td align="left">Orange&nbsp;</td>
<td align="left">#FFA500</td>
<td style="background-color: #FFA500">&nbsp;</td>
</tr>


<tr>
<td align="left">LightPink&nbsp;</td>
<td align="left">#FFB6C1</td>
<td style="background-color: #FFB6C1">&nbsp;</td>
</tr>


<tr>
<td align="left">Pink&nbsp;</td>
<td align="left">#FFC0CB</td>
<td style="background-color: #FFC0CB">&nbsp;</td>
</tr>


<tr>
<td align="left">Gold&nbsp;</td>
<td align="left">#FFD700</td>
<td style="background-color: #FFD700">&nbsp;</td>
</tr>


<tr>
<td align="left">PeachPuff&nbsp;</td>
<td align="left">#FFDAB9</td>
<td style="background-color: #FFDAB9">&nbsp;</td>
</tr>


<tr>
<td align="left">NavajoWhite&nbsp;</td>
<td align="left">#FFDEAD</td>
<td style="background-color: #FFDEAD">&nbsp;</td>
</tr>


<tr>
<td align="left">Moccasin&nbsp;</td>
<td align="left">#FFE4B5</td>
<td style="background-color: #FFE4B5">&nbsp;</td>
</tr>


<tr>
<td align="left">Bisque&nbsp;</td>
<td align="left">#FFE4C4</td>
<td style="background-color: #FFE4C4">&nbsp;</td>
</tr>


<tr>
<td align="left">MistyRose&nbsp;</td>
<td align="left">#FFE4E1</td>
<td style="background-color: #FFE4E1">&nbsp;</td>
</tr>


<tr>
<td align="left">BlanchedAlmond&nbsp;</td>
<td align="left">#FFEBCD</td>
<td style="background-color: #FFEBCD">&nbsp;</td>
</tr>


<tr>
<td align="left">PapayaWhip&nbsp;</td>
<td align="left">#FFEFD5</td>
<td style="background-color: #FFEFD5">&nbsp;</td>
</tr>


<tr>
<td align="left">LavenderBlush&nbsp;</td>
<td align="left">#FFF0F5</td>
<td style="background-color: #FFF0F5">&nbsp;</td>
</tr>


<tr>
<td align="left">SeaShell&nbsp;</td>
<td align="left">#FFF5EE</td>
<td style="background-color: #FFF5EE">&nbsp;</td>
</tr>


<tr>
<td align="left">Cornsilk&nbsp;</td>
<td align="left">#FFF8DC</td>
<td style="background-color: #FFF8DC">&nbsp;</td>
</tr>


<tr>
<td align="left">LemonChiffon&nbsp;</td>
<td align="left">#FFFACD</td>
<td style="background-color: #FFFACD">&nbsp;</td>
</tr>


<tr>
<td align="left">FloralWhite&nbsp;</td>
<td align="left">#FFFAF0</td>
<td style="background-color: #FFFAF0">&nbsp;</td>
</tr>


<tr>
<td align="left">Snow&nbsp;</td>
<td align="left">#FFFAFA</td>
<td style="background-color: #FFFAFA">&nbsp;</td>
</tr>


<tr>
<td align="left">Yellow&nbsp;</td>
<td align="left">#FFFF00</td>
<td style="background-color: #FFFF00">&nbsp;</td>
</tr>


<tr>
<td align="left">LightYellow&nbsp;</td>
<td align="left">#FFFFE0</td>
<td style="background-color: #FFFFE0">&nbsp;</td>
</tr>


<tr>
<td align="left">Ivory&nbsp;</td>
<td align="left">#FFFFF0</td>
<td style="background-color: #FFFFF0">&nbsp;</td>
</tr>


<tr>
<td align="left">White&nbsp;</td>
<td align="left">#FFFFFF</td>
<td style="background-color: #FFFFFF">&nbsp;</td>
</tr>


</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1323</wp:post_id>
		<wp:post_date>2013-03-05 09:44:00</wp:post_date>
		<wp:post_date_gmt>2013-03-05 08:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>i-nomi-dei-colori-e-i-valori-esadecimali-in-css</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="css"><![CDATA[CSS]]></category>
		<category domain="category" nicename="senza-categoria"><![CDATA[Senza categoria]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:51:"http://www.kludge.it/funzione_linguaggio/css/color/";}s:4:"time";i:1383839328;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Referenza dei caratteri ASCII</title>
		<link>http://www.kludge.it/referenza-dei-caratteri-ascii/</link>
		<pubDate>Sun, 17 Mar 2013 08:21:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=195</guid>
		<description></description>
		<content:encoded><![CDATA[Quante volte ci è capitato di vedere qual fastidiosissimo punto di domanda in un testo o un carattere indecifrabile perchè ci è sfuggito un carattere unicode in un codice?
Per comodit&amp;agrve; (mia soprattutto!) ecco di seguito la referenza dei caratteri più comuni ASCII:
<table>
<tbody>
<tr>
<th align="left">CARATTERE ASCII</th>
<th align="left">CODICE HTML</th>
<th align="left">DESCRIZIONE</th>
</tr>
<tr>
<td></td>
<td>&amp;#32;</td>
<td>spazio</td>
</tr>
<tr>
<td>!</td>
<td>&amp;#33;</td>
<td>punto esclamativo</td>
</tr>
<tr>
<td>"</td>
<td>&amp;#34;</td>
<td>virgolette</td>
</tr>
<tr>
<td>#</td>
<td>&amp;#35;</td>
<td>cancelletto</td>
</tr>
<tr>
<td>$</td>
<td>&amp;#36;</td>
<td>simbolo del dollaro</td>
</tr>
<tr>
<td>%</td>
<td>&amp;#37;</td>
<td>simbolo percentuale</td>
</tr>
<tr>
<td>&#8984;</td>
<td>&amp;#8984;</td>
<td>CMD - Simbolo Apple</td>
</tr>
<tr>
<td>&amp;</td>
<td>&amp;#38;</td>
<td>e commerciale</td>
</tr>
<tr>
<td>'</td>
<td>&amp;#39;</td>
<td>apostrofo / apice</td>
</tr>
<tr>
<td>(</td>
<td>&amp;#40;</td>
<td>parentesi aperta</td>
</tr>
<tr>
<td>)</td>
<td>&amp;#41;</td>
<td>parentesi chiusa</td>
</tr>
<tr>
<td>*</td>
<td>&amp;#42;</td>
<td>asterisco</td>
</tr>
<tr>
<td>+</td>
<td>&amp;#43;</td>
<td>segno più</td>
</tr>
<tr>
<td>,</td>
<td>&amp;#44;</td>
<td>virgola</td>
</tr>
<tr>
<td>-</td>
<td>&amp;#45;</td>
<td>segno meno</td>
</tr>
<tr>
<td>.</td>
<td>&amp;#46;</td>
<td>punto</td>
</tr>
<tr>
<td>/</td>
<td>&amp;#47;</td>
<td>slash</td>
</tr>
<tr>
<td>0</td>
<td>&amp;#48;</td>
<td>numero 0</td>
</tr>
<tr>
<td>1</td>
<td>&amp;#49;</td>
<td>numero 1</td>
</tr>
<tr>
<td>2</td>
<td>&amp;#50;</td>
<td>numero 2</td>
</tr>
<tr>
<td>3</td>
<td>&amp;#51;</td>
<td>numero 3</td>
</tr>
<tr>
<td>4</td>
<td>&amp;#52;</td>
<td>numero 4</td>
</tr>
<tr>
<td>5</td>
<td>&amp;#53;</td>
<td>numero 5</td>
</tr>
<tr>
<td>6</td>
<td>&amp;#54;</td>
<td>numero 6</td>
</tr>
<tr>
<td>7</td>
<td>&amp;#55;</td>
<td>numero 7</td>
</tr>
<tr>
<td>8</td>
<td>&amp;#56;</td>
<td>numero 8</td>
</tr>
<tr>
<td>9</td>
<td>&amp;#57;</td>
<td>numero 9</td>
</tr>
<tr>
<td>:</td>
<td>&amp;#58;</td>
<td>due punti</td>
</tr>
<tr>
<td>;</td>
<td>&amp;#59;</td>
<td>punto e virgola</td>
</tr>
<tr>
<td>&lt;</td>
<td>&amp;#60;</td>
<td>segno minore di</td>
</tr>
<tr>
<td>=</td>
<td>&amp;#61;</td>
<td>segno uguale</td>
</tr>
<tr>
<td>&gt;</td>
<td>&amp;#62;</td>
<td>segno maggiore di</td>
</tr>
<tr>
<td>?</td>
<td>&amp;#63;</td>
<td>punto di domanda</td>
</tr>
<tr>
<td>@</td>
<td>&amp;#64;</td>
<td>chiocciola</td>
</tr>
<tr>
<td>A</td>
<td>&amp;#65;</td>
<td>lettera maiuscola A</td>
</tr>
<tr>
<td>B</td>
<td>&amp;#66;</td>
<td>lettera maiuscola B</td>
</tr>
<tr>
<td>C</td>
<td>&amp;#67;</td>
<td>lettera maiuscola C</td>
</tr>
<tr>
<td>D</td>
<td>&amp;#68;</td>
<td>lettera maiuscola D</td>
</tr>
<tr>
<td>E</td>
<td>&amp;#69;</td>
<td>lettera maiuscola E</td>
</tr>
<tr>
<td>F</td>
<td>&amp;#70;</td>
<td>lettera maiuscola F</td>
</tr>
<tr>
<td>G</td>
<td>&amp;#71;</td>
<td>lettera maiuscola G</td>
</tr>
<tr>
<td>H</td>
<td>&amp;#72;</td>
<td>lettera maiuscola H</td>
</tr>
<tr>
<td>I</td>
<td>&amp;#73;</td>
<td>lettera maiuscola I</td>
</tr>
<tr>
<td>J</td>
<td>&amp;#74;</td>
<td>lettera maiuscola J</td>
</tr>
<tr>
<td>K</td>
<td>&amp;#75;</td>
<td>lettera maiuscola K</td>
</tr>
<tr>
<td>L</td>
<td>&amp;#76;</td>
<td>lettera maiuscola L</td>
</tr>
<tr>
<td>M</td>
<td>&amp;#77;</td>
<td>lettera maiuscola M</td>
</tr>
<tr>
<td>N</td>
<td>&amp;#78;</td>
<td>lettera maiuscola N</td>
</tr>
<tr>
<td>O</td>
<td>&amp;#79;</td>
<td>lettera maiuscola O</td>
</tr>
<tr>
<td>P</td>
<td>&amp;#80;</td>
<td>lettera maiuscola P</td>
</tr>
<tr>
<td>Q</td>
<td>&amp;#81;</td>
<td>lettera maiuscola Q</td>
</tr>
<tr>
<td>R</td>
<td>&amp;#82;</td>
<td>lettera maiuscola R</td>
</tr>
<tr>
<td>S</td>
<td>&amp;#83;</td>
<td>lettera maiuscola S</td>
</tr>
<tr>
<td>T</td>
<td>&amp;#84;</td>
<td>lettera maiuscola T</td>
</tr>
<tr>
<td>U</td>
<td>&amp;#85;</td>
<td>lettera maiuscola U</td>
</tr>
<tr>
<td>V</td>
<td>&amp;#86;</td>
<td>lettera maiuscola V</td>
</tr>
<tr>
<td>W</td>
<td>&amp;#87;</td>
<td>lettera maiuscola W</td>
</tr>
<tr>
<td>X</td>
<td>&amp;#88;</td>
<td>lettera maiuscola X</td>
</tr>
<tr>
<td>Y</td>
<td>&amp;#89;</td>
<td>lettera maiuscola Y</td>
</tr>
<tr>
<td>Z</td>
<td>&amp;#90;</td>
<td>lettera maiuscola Z</td>
</tr>
<tr>
<td>[</td>
<td>&amp;#91;</td>
<td>left square bracket</td>
</tr>
<tr>
<td></td>
<td>&amp;#92;</td>
<td>backslash</td>
</tr>
<tr>
<td>]</td>
<td>&amp;#93;</td>
<td>parentesi quadra chiusa</td>
</tr>
<tr>
<td>^</td>
<td>&amp;#94;</td>
<td>caret</td>
</tr>
<tr>
<td>_</td>
<td>&amp;#95;</td>
<td>underscore</td>
</tr>
<tr>
<td>`</td>
<td>&amp;#96;</td>
<td>accento grave</td>
</tr>
<tr>
<td>a</td>
<td>&amp;#97;</td>
<td>lettera minuscola a</td>
</tr>
<tr>
<td>b</td>
<td>&amp;#98;</td>
<td>lettera minuscola b</td>
</tr>
<tr>
<td>c</td>
<td>&amp;#99;</td>
<td>lettera minuscola c</td>
</tr>
<tr>
<td>d</td>
<td>&amp;#100;</td>
<td>lettera minuscola d</td>
</tr>
<tr>
<td>e</td>
<td>&amp;#101;</td>
<td>lettera minuscola e</td>
</tr>
<tr>
<td>f</td>
<td>&amp;#102;</td>
<td>lettera minuscola f</td>
</tr>
<tr>
<td>g</td>
<td>&amp;#103;</td>
<td>lettera minuscola g</td>
</tr>
<tr>
<td>h</td>
<td>&amp;#104;</td>
<td>lettera minuscola h</td>
</tr>
<tr>
<td>i</td>
<td>&amp;#105;</td>
<td>lettera minuscola i</td>
</tr>
<tr>
<td>j</td>
<td>&amp;#106;</td>
<td>lettera minuscola j</td>
</tr>
<tr>
<td>k</td>
<td>&amp;#107;</td>
<td>lettera minuscola k</td>
</tr>
<tr>
<td>l</td>
<td>&amp;#108;</td>
<td>lettera minuscola l</td>
</tr>
<tr>
<td>m</td>
<td>&amp;#109;</td>
<td>lettera minuscola m</td>
</tr>
<tr>
<td>n</td>
<td>&amp;#110;</td>
<td>lettera minuscola n</td>
</tr>
<tr>
<td>o</td>
<td>&amp;#111;</td>
<td>lettera minuscola o</td>
</tr>
<tr>
<td>p</td>
<td>&amp;#112;</td>
<td>lettera minuscola p</td>
</tr>
<tr>
<td>q</td>
<td>&amp;#113;</td>
<td>lettera minuscola q</td>
</tr>
<tr>
<td>r</td>
<td>&amp;#114;</td>
<td>lettera minuscola r</td>
</tr>
<tr>
<td>s</td>
<td>&amp;#115;</td>
<td>lettera minuscola s</td>
</tr>
<tr>
<td>t</td>
<td>&amp;#116;</td>
<td>lettera minuscola t</td>
</tr>
<tr>
<td>u</td>
<td>&amp;#117;</td>
<td>lettera minuscola u</td>
</tr>
<tr>
<td>v</td>
<td>&amp;#118;</td>
<td>lettera minuscola v</td>
</tr>
<tr>
<td>w</td>
<td>&amp;#119;</td>
<td>lettera minuscola w</td>
</tr>
<tr>
<td>x</td>
<td>&amp;#120;</td>
<td>lettera minuscola x</td>
</tr>
<tr>
<td>y</td>
<td>&amp;#121;</td>
<td>lettera minuscola y</td>
</tr>
<tr>
<td>z</td>
<td>&amp;#122;</td>
<td>lettera minuscola z</td>
</tr>
<tr>
<td>{</td>
<td>&amp;#123;</td>
<td>parentesi graffa aperta</td>
</tr>
<tr>
<td>|</td>
<td>&amp;#124;</td>
<td>barra verticale</td>
</tr>
<tr>
<td>}</td>
<td>&amp;#125;</td>
<td>parentesi graffa chiusa</td>
</tr>
<tr>
<td>~</td>
<td>&amp;#126;</td>
<td>tilde</td>
</tr>
</tbody>
</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>195</wp:post_id>
		<wp:post_date>2013-03-17 09:21:00</wp:post_date>
		<wp:post_date_gmt>2013-03-17 08:21:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>referenza-dei-caratteri-ascii</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="html5"><![CDATA[HTML 5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383738396;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Aggiungere uno spazio vuoto nel dock in MAC OSX</title>
		<link>http://www.kludge.it/aggiungere-uno-spazio-vuoto-nel-dock-in-mac-osx/</link>
		<pubDate>Wed, 13 Mar 2013 07:54:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=249</guid>
		<description></description>
		<content:encoded><![CDATA[Per aggiungere uno o pi&ugrave; spazi vuoti tra le applicazioni presenti nel dock in MAC OSX &egrave; sufficiente lanciare nel teminale:
[cc]defaults write com.apple.dock persistent-apps -array-add '{"tile-type"="spacer-tile";}'[/cc]
e successivamente riavviarlo con:
[cc]killall Dock[/cc]
Per aggiungere pi&ugrave; spazi vuoti &egrave; sufficiente lanciare il primo comando pi&ugrave; volte; mentre per rimuoverli basta trascinarli fuori dal dock come una normale icona.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>249</wp:post_id>
		<wp:post_date>2013-03-13 08:54:00</wp:post_date>
		<wp:post_date_gmt>2013-03-13 07:54:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aggiungere-uno-spazio-vuoto-nel-dock-in-mac-osx</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="altro"><![CDATA[Altro]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383899766;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Creare una chiave primaria in una tabella</title>
		<link>http://www.kludge.it/creare-una-chiave-primaria-in-una-tabella/</link>
		<pubDate>Wed, 13 Mar 2013 08:28:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=286</guid>
		<description></description>
		<content:encoded><![CDATA[Ogni tabella deve possedere una "chiave primaria" che che non sia NULL che identifichi univocamente ciascuna riga; salvo diversa necessita, generalmente si imposta tale chiave in modo che il valore aumenti automaticamente ad ogni inserimento di record:
[cc lang="sql"]CREATE TABLE nome_tabella (
    id int NOT NULL AUTO_INCREMENT,
    nome varchar(25),
    cognome varchar(25),
    PRIMARY KEY(id)
);[/cc]
Teniamo presente che questa &egrave; la sintassi specifica per MySQL e che ci sono delle variazioni in quasi tutti i database che utilizzano il linguaggio SQL.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>286</wp:post_id>
		<wp:post_date>2013-03-13 09:28:00</wp:post_date>
		<wp:post_date_gmt>2013-03-13 08:28:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creare-una-chiave-primaria-in-una-tabella</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="auto_increment"><![CDATA[AUTO_INCREMENT;]]></category>
		<category domain="funzione_linguaggio" nicename="create_table"><![CDATA[CREATE TABLE;]]></category>
		<category domain="funzione_linguaggio" nicename="primari-key"><![CDATA[PRIMARY KEY;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383829366;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rinominare una tabella in SQL</title>
		<link>http://www.kludge.it/rinominare-una-tabella-in-sql/</link>
		<pubDate>Thu, 14 Mar 2013 07:08:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=290</guid>
		<description></description>
		<content:encoded><![CDATA[Anche un database progettato benissimo prima o poi necessita di qualche modifica prima o poi: ipotizziamo ad esempio di dover rinominare una tabella, ci&ograve; &egrave; possibile utilizzando i comandi ALTER TABLE e RENAME:
Dato un database contenente la seguente tabella:
[cc lang="sql"]
+--------------------+
| Tables_in_test_sql |
+--------------------+
| test_tabella       |
+--------------------+
[/cc]
Lanciamo la query:
[cc lang="sql"]
ALTER TABLE test_tabella RENAME tabella_dei_test;
[/cc]
ottenendo:
[cc lang="sql"]
+--------------------+
| Tables_in_test_sql |
+--------------------+
| tabella_dei_test   |
+--------------------+
[/cc]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>290</wp:post_id>
		<wp:post_date>2013-03-14 08:08:00</wp:post_date>
		<wp:post_date_gmt>2013-03-14 07:08:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rinominare-una-tabella-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="alter-table"><![CDATA[ALTER TABLE;]]></category>
		<category domain="funzione_linguaggio" nicename="rename-table"><![CDATA[RENAME TABLE; / RENAME;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383829336;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Aggiungere una colonna ad una tabella in SQL</title>
		<link>http://www.kludge.it/aggiungere-una-colonna-ad-una-tabella-in-sql/</link>
		<pubDate>Sat, 16 Mar 2013 08:37:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=292</guid>
		<description></description>
		<content:encoded><![CDATA[Se volessimo aggiungere una colonna ad una tabella preesistente utilizzeremmo i comandi ALTER TABLE e ADD:
Data la seguente tabella:
[cc lang="sql"]
+-------------+---------------+------+-----+---------+-------+
| Field       | Type          | Null | Key | Default | Extra |
+-------------+---------------+------+-----+---------+-------+
| titolo      | varchar(100)  | YES  |     | NULL    |       |
| descrizione | varchar(1000) | YES  |     | NULL    |       |
+-------------+---------------+------+-----+---------+-------+
[/cc]
Lanciamo la seguente query per aggiungere la colonna categoria:
[cc lang="sql"]
ALTER TABLE tabella_dei_test ADD categoria varchar(100);
[/cc]
ottenendo:
[cc lang="sql"]
+-------------+---------------+------+-----+---------+-------+
| Field       | Type          | Null | Key | Default | Extra |
+-------------+---------------+------+-----+---------+-------+
| titolo      | varchar(100)  | YES  |     | NULL    |       |
| descrizione | varchar(1000) | YES  |     | NULL    |       |
| categoria   | varchar(100)  | YES  |     | NULL    |       |
+-------------+---------------+------+-----+---------+-------+
[/cc]

Com'&egrave; facilmente intuibile la query per aggiungere una colonna si struttura selezionando la tabella da alterare con ALTER TABLE  e dicendo di scrivendo il nome della nuova colonna seguito dal suo data type dopo ADD.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>292</wp:post_id>
		<wp:post_date>2013-03-16 09:37:00</wp:post_date>
		<wp:post_date_gmt>2013-03-16 08:37:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aggiungere-una-colonna-ad-una-tabella-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="add"><![CDATA[ADD;]]></category>
		<category domain="funzione_linguaggio" nicename="alter-table"><![CDATA[ALTER TABLE;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383820670;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Eliminare una colonna da una tabella in SQL</title>
		<link>http://www.kludge.it/eliminare-una-colonna-da-una-tabella-in-sql/</link>
		<pubDate>Fri, 15 Mar 2013 07:46:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=294</guid>
		<description></description>
		<content:encoded><![CDATA[Se volessimo eliminare una colonna da una tabella preesistente utilizzeremmo i comandi ALTER TABLE e DROP (che sta per delete and remove):
Data la seguente tabella:
[cc lang="sql"]
+-------------+---------------+------+-----+---------+-------+
| Field       | Type          | Null | Key | Default | Extra |
+-------------+---------------+------+-----+---------+-------+
| titolo      | varchar(100)  | YES  |     | NULL    |       |
| descrizione | varchar(1000) | YES  |     | NULL    |       |
| categoria   | varchar(100)  | YES  |     | NULL    |       |
+-------------+---------------+------+-----+---------+-------+
[/cc]
Lanciamo la seguente query per eliminare la colonna categoria:
[cc lang="sql"]
ALTER TABLE tabella_dei_test DROP categoria;
[/cc]
ottenendo:
[cc lang="sql"]
+-------------+---------------+------+-----+---------+-------+
| Field       | Type          | Null | Key | Default | Extra |
+-------------+---------------+------+-----+---------+-------+
| titolo      | varchar(100)  | YES  |     | NULL    |       |
| descrizione | varchar(1000) | YES  |     | NULL    |       |
+-------------+---------------+------+-----+---------+-------+
[/cc]

Com'&egrave; facilmente intuibile la query per eliminare una colonna si struttura selezionando la tabella da alterare con ALTER TABLE e dicendo il nome della colonna da eliminare dopo DROP.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>294</wp:post_id>
		<wp:post_date>2013-03-15 08:46:00</wp:post_date>
		<wp:post_date_gmt>2013-03-15 07:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eliminare-una-colonna-da-una-tabella-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="alter-table"><![CDATA[ALTER TABLE;]]></category>
		<category domain="funzione_linguaggio" nicename="drop-column"><![CDATA[DROP COLUMN; / DROP;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383820670;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Modificare il data type e rinominare una colonna in SQL</title>
		<link>http://www.kludge.it/modificare-il-data-type-e-rinominare-una-colonna-in-sql/</link>
		<pubDate>Sat, 16 Mar 2013 08:05:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=296</guid>
		<description></description>
		<content:encoded><![CDATA[Talvolta pu&ograve; succedere di aver la necessit&agrave; di modificare il data type di una o pi&ugrave; colonne:
Nella seguente tabella abbiamo erroneamente impostato il data type di titolo come data anche se in realt&agrave; avremmo voluto una stringa di massimo 100 caratteri:
[cc lang="sql"]
+-------------+---------------+------+-----+---------+-------+
| Field       | Type          | Null | Key | Default | Extra |
+-------------+---------------+------+-----+---------+-------+
| titolo      | date          | YES  |     | NULL    |       |
| descrizione | varchar(1000) | YES  |     | NULL    |       |
+-------------+---------------+------+-----+---------+-------+
[/cc]
Premettendo che questa sintassi &egrave; <strong>esclusiva per MySQL</strong> utilizzeremo il comando CHANGE che permette di rinominare la colonna e/o di cambiarne il data type:
[cc lang="sql"]
ALTER TABLE tabella_dei_test CHANGE titolo titolo varchar(100);
[/cc]
Il comando CHANGE richiede 3 valori, il primo &egrave; il nome della colonna sulla quale effettuare le modifiche, il secondo &egrave; il nuovo nome da assegnarle (nel nostro caso abbiamo ri-assegnato il vecchio nome) ed il terzo &egrave; il data type.
Otterremo quindi:
[cc lang="sql"]
+-------------+---------------+------+-----+---------+-------+
| Field       | Type          | Null | Key | Default | Extra |
+-------------+---------------+------+-----+---------+-------+
| titolo      | varchar(100)  | YES  |     | NULL    |       |
| descrizione | varchar(1000) | YES  |     | NULL    |       |
+-------------+---------------+------+-----+---------+-------+
[/cc]

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>296</wp:post_id>
		<wp:post_date>2013-03-16 09:05:00</wp:post_date>
		<wp:post_date_gmt>2013-03-16 08:05:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>modificare-il-data-type-e-rinominare-una-colonna-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="alter-table"><![CDATA[ALTER TABLE;]]></category>
		<category domain="funzione_linguaggio" nicename="change"><![CDATA[CHANGE;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383820670;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Inserire una colonna chiave primaria in SQL</title>
		<link>http://www.kludge.it/inserire-una-colonna-chiave-primaria-in-sql/</link>
		<pubDate>Fri, 15 Mar 2013 07:33:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=298</guid>
		<description></description>
		<content:encoded><![CDATA[Ipotizzando di avere una tabella con un campo "id" contenente gi&agrave; valori numerici univoci ma che, di fatto, non sia ancora impostata come chiave primaria:
[cc lang="sql"]
+-------------+---------------+------+-----+---------+-------+
| Field       | Type          | Null | Key | Default | Extra |
+-------------+---------------+------+-----+---------+-------+
| titolo      | varchar(100)  | YES  |     | NULL    |       |
| descrizione | varchar(1000) | YES  |     | NULL    |       |
| id          | int(11)       | NO   |     | NULL    |       |
+-------------+---------------+------+-----+---------+-------+
[/cc]
Per impostarla come chiave primaria possiamo utilizzare il comando ADD PRIMARY KEY:
[cc lang="sql"]ALTER TABLE tabella_dei_test ADD PRIMARY KEY (id);[/cc]
ottenendo quanto segue:
[cc lang="sql"]
+-------------+---------------+------+-----+---------+-------+
| Field       | Type          | Null | Key | Default | Extra |
+-------------+---------------+------+-----+---------+-------+
| titolo      | varchar(100)  | YES  |     | NULL    |       |
| descrizione | varchar(1000) | YES  |     | NULL    |       |
| id          | int(11)       | NO   | PRI | NULL    |       |
+-------------+---------------+------+-----+---------+-------+
[/cc]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>298</wp:post_id>
		<wp:post_date>2013-03-15 08:33:00</wp:post_date>
		<wp:post_date_gmt>2013-03-15 07:33:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>inserire-una-colonna-chiave-primaria-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="create_table"><![CDATA[CREATE TABLE;]]></category>
		<category domain="funzione_linguaggio" nicename="primari-key"><![CDATA[PRIMARY KEY;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383820670;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Modificare una colonna facendola auto incrementare in SQL</title>
		<link>http://www.kludge.it/modificare-una-colonna-facendola-auto-incrementare-in-sql/</link>
		<pubDate>Thu, 14 Mar 2013 09:33:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=300</guid>
		<description></description>
		<content:encoded><![CDATA[Ipotizzando di avere una tabella con un campo "id" che sia chiave primaria ma che non si auto incrementi:
[cc lang="sql"]
+-------------+---------------+------+-----+---------+-------+
| Field       | Type          | Null | Key | Default | Extra |
+-------------+---------------+------+-----+---------+-------+
| titolo      | varchar(100)  | YES  |     | NULL    |       |
| descrizione | varchar(1000) | YES  |     | NULL    |       |
| id          | int(11)       | NO   | PRI | NULL    |       |
+-------------+---------------+------+-----+---------+-------+
[/cc]
Per impostarla l'auto increment <strong>in MySQL</strong> possiamo utilizzare il comando CHANGE:
[cc lang="sql"]ALTER TABLE tabella_dei_test CHANGE id id INT NOT NULL AUTO_INCREMENT;[/cc]
ottenendo quanto segue:
[cc lang="sql"]
+-------------+---------------+------+-----+---------+----------------+
| Field       | Type          | Null | Key | Default | Extra          |
+-------------+---------------+------+-----+---------+----------------+
| titolo      | varchar(100)  | YES  |     | NULL    |                |
| descrizione | varchar(1000) | YES  |     | NULL    |                |
| id          | int(11)       | NO   | PRI | NULL    | auto_increment |
+-------------+---------------+------+-----+---------+----------------+
[/cc]
Per ulteriori dettagli riguardo il comando CHANGE leggete "Modificare il data type e rinominare una colonna in SQL".
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>300</wp:post_id>
		<wp:post_date>2013-03-14 10:33:00</wp:post_date>
		<wp:post_date_gmt>2013-03-14 09:33:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>modificare-una-colonna-facendola-auto-incrementare-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="alter-table"><![CDATA[ALTER TABLE;]]></category>
		<category domain="funzione_linguaggio" nicename="auto_increment"><![CDATA[AUTO_INCREMENT;]]></category>
		<category domain="funzione_linguaggio" nicename="change"><![CDATA[CHANGE;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:55:"Modificare il data type e rinominare una colonna in SQL";s:77:"http://www.kludge.it/modificare-il-data-type-e-rinominare-una-colonna-in-sql/";}s:4:"time";i:1383837490;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Eliminare tutti i records di una tabella in SQL</title>
		<link>http://www.kludge.it/eliminare-tutti-i-records-di-una-tabella-in-sql/</link>
		<pubDate>Mon, 11 Mar 2013 09:14:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=302</guid>
		<description></description>
		<content:encoded><![CDATA[Per eliminare tutti i records di una tabella in SQL possiamo utilizzare il comando DELETE:
[cc lang="sql"]DELETE FROM tabella_dei_test;[/cc]
Facciamo attenzione a non confondere DROP TABLE che elimina la tabella con DELETE che elimina solo i records dalla tabella.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>302</wp:post_id>
		<wp:post_date>2013-03-11 10:14:00</wp:post_date>
		<wp:post_date_gmt>2013-03-11 09:14:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eliminare-tutti-i-records-di-una-tabella-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="delete"><![CDATA[DELETE;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383666727;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Modificare i valori di una tabella in SQL</title>
		<link>http://www.kludge.it/modificare-i-valori-di-una-tabella-in-sql/</link>
		<pubDate>Tue, 12 Mar 2013 07:16:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=373</guid>
		<description></description>
		<content:encoded><![CDATA[Supponendo di avere la seguente tabella:
[cc lang="sql"]
+-------------------+------------------------+----+----------+
| titolo            | descrizione            | id | n_autori |
+-------------------+------------------------+----+----------+
| La fine del mondo | descrizione della fine |  1 |        2 |
+-------------------+------------------------+----+----------+
[/cc]
Se volessimo, ad esempio aggiungere un autore alla colonna n_autori dovremmo utilizzare il comando UPDATE:
[cc lang="sql"]
UPDATE tabella_dei_test SET n_autori = n_autori + 1;
[/cc]
In questo modo abbiamo modificato <strong>tutti</strong> i records aggiungendo 1 all'attuale valore di n_autori, ottenendo quanto segue:
[cc lang="sql"]
+-------------------+------------------------+----+----------+
| titolo            | descrizione            | id | n_autori |
+-------------------+------------------------+----+----------+
| La fine del mondo | descrizione della fine |  1 |        3 |
+-------------------+------------------------+----+----------+
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>373</wp:post_id>
		<wp:post_date>2013-03-12 08:16:00</wp:post_date>
		<wp:post_date_gmt>2013-03-12 07:16:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>modificare-i-valori-di-una-tabella-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="update"><![CDATA[UPDATE;]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383828886;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Selezionare solo certi records in SQL</title>
		<link>http://www.kludge.it/selezionare-solo-certi-records-in-sql/</link>
		<pubDate>Tue, 12 Mar 2013 10:25:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=375</guid>
		<description></description>
		<content:encoded><![CDATA[Data la seguente tabella:
[cc lang="sql"]
+------------------------+-------------------------------+----+----------+
| titolo                 | descrizione                   | id | n_autori |
+------------------------+-------------------------------+----+----------+
| La fine del mondo      | descrizione della fine        |  1 |        3 |
| I maya sbagliavano     | Articolo sui maya             |  2 |        1 |
| La musica nello spazio | Armstrong ascoltava i beatles |  3 |        5 |
+------------------------+-------------------------------+----+----------+
[/cc]
Se volessimo selezionare solo il record con il titolo "I maya sbagliavano" dovremmo utilizzare il comando WHERE:
[cc lang="sql"]
SELECT * FROM tabella_dei_test WHERE titolo = "I maya sbagliavano";
[/cc]
Ottenendo questo risultato come ci aspettavamo:
[cc lang="sql"]
+--------------------+-------------------+----+----------+
| titolo             | descrizione       | id | n_autori |
+--------------------+-------------------+----+----------+
| I maya sbagliavano | Articolo sui maya |  2 |        1 |
+--------------------+-------------------+----+----------+
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>375</wp:post_id>
		<wp:post_date>2013-03-12 11:25:00</wp:post_date>
		<wp:post_date_gmt>2013-03-12 10:25:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selezionare-solo-certi-records-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="select"><![CDATA[SELECT;]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383829276;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Modificare solo certi records di una tabella in SQL</title>
		<link>http://www.kludge.it/modificare-solo-certi-records-di-una-tabella-in-sql/</link>
		<pubDate>Mon, 11 Mar 2013 08:40:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=377</guid>
		<description></description>
		<content:encoded><![CDATA[Supponendo di avere la seguente tabella:
[cc lang="sql"]
+------------------------+-------------------------------+----+----------+
| titolo                 | descrizione                   | id | n_autori |
+------------------------+-------------------------------+----+----------+
| La fine del mondo      | descrizione della fine        |  1 |        3 |
| I maya sbagliavano     | Articolo sui maya             |  2 |        1 |
| La musica nello spazio | Armstrong ascoltava i beatles |  3 |        5 |
+------------------------+-------------------------------+----+----------+
[/cc]
Se volessimo, ad esempio, modificare il titolo "I maya sbagliavano" in "I maya non sbagliavano" dovremmo utilizzare il comando UPDATE WHERE dato che, come abbiamo visto in precedenza, se utilizzassimo solo il comando UPDATE senza imporre delle limitazioni modificheremmo tutti i records presenti nella tabella:
[cc lang="sql"]
UPDATE tabella_dei_test SET titolo = "I maya non sbagliavano" WHERE titolo = "I maya sbagliavano";
[/cc]
In questo modo abbiamo modificato il titolo del record con id 2 in questo modo:
[cc lang="sql"]
+------------------------+-------------------------------+----+----------+
| titolo                 | descrizione                   | id | n_autori |
+------------------------+-------------------------------+----+----------+
| La fine del mondo      | descrizione della fine        |  1 |        3 |
| I maya non sbagliavano | Articolo sui maya             |  2 |        1 |
| La musica nello spazio | Armstrong ascoltava i beatles |  3 |        5 |
+------------------------+-------------------------------+----+----------+
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>377</wp:post_id>
		<wp:post_date>2013-03-11 09:40:00</wp:post_date>
		<wp:post_date_gmt>2013-03-11 08:40:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>modificare-solo-certi-records-di-una-tabella-in-sql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="update"><![CDATA[UPDATE;]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383828886;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Creare un custom menu con register_nav_menus() in WORDPRESS</title>
		<link>http://www.kludge.it/creare-un-custom-menu-con-register_custom_menus-in-wordpress/</link>
		<pubDate>Wed, 20 Mar 2013 09:33:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=498</guid>
		<description></description>
		<content:encoded><![CDATA[Dalla versione 3.0 di Wordpress &egrave; disponibile un nuovo editor per dei men&ugrave; personalizzati (Appearance -> Menus) nel quale &egrave; possibile gestire gli elementi presenti in vari men&ugrave; custom presenti nel tema che stiamo utilizzando.
Chiaramente se siamo noi a creare il tema abbiamo la necessit&agrave; di dichiarare questi men&ugrave;, qui ci viene in aiuto register_custom_menus():
[cc lang="php"]
if (function_exists(register_nav_menus)) {
        register_nav_menus(
            array('primary' => 'Men&ugrave; principale')
        );
};
[/cc]
Tale codice dovr&agrave; essere inserito nel file function.php del nostro tema.
A questo punto abbiamo registrato con successo un nuovo men&ugrave; ma dobbiamo ancora inserirlo fisicamente nel tema e tale operazione effettuata con il <a href="/?p=502" alt="Inserire un menu' in un tema wordpress">metodo wp_nav_menu();</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>498</wp:post_id>
		<wp:post_date>2013-03-20 10:33:00</wp:post_date>
		<wp:post_date_gmt>2013-03-20 09:33:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creare-un-custom-menu-con-register_custom_menus-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="array"><![CDATA[array();]]></category>
		<category domain="funzione_linguaggio" nicename="function_exists"><![CDATA[function_exists();]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="register_nav_menu"><![CDATA[register_nav_menu();]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383822805;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Inserire un custom menu con wp_nav_menu() in WORDPRESS</title>
		<link>http://www.kludge.it/inserire-custom-menu-wp_nav_menu-wordpress/</link>
		<pubDate>Wed, 20 Mar 2013 07:06:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=502</guid>
		<description></description>
		<content:encoded><![CDATA[Dopo aver <a href="/?p=498" alt="Creare un custom menu con register_custom_menus() in WORDPRESS">creato il/i custom menus</a> dobbiamo inserirli nel nostro tema, per fare ci&ograve; possiamo utilizzare la funzione wp_nav_menu():
[cc lang="php"]
$args = array(
    'theme_location' => 'primary'
);
wp_nav_menu($args);
[/cc]
Come potete notare wp_nav_menu() accetta un parametro (array) che contiene, a sua volta, molte personalizzazioni per le quali rimandiamo al codex di wordpress: <a href="http://codex.wordpress.org/Function_Reference/wp_nav_menu" alt="Codex wordpress wp_nav_menu">Function reference per wp_nav_menu()</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>502</wp:post_id>
		<wp:post_date>2013-03-20 08:06:00</wp:post_date>
		<wp:post_date_gmt>2013-03-20 07:06:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>inserire-custom-menu-wp_nav_menu-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="array"><![CDATA[array();]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wp_nav_menu"><![CDATA[wp_nav_menu();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/8abbR]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/inserire-custom-menu-wp_nav_menu-wordpress/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:96:"Inserire un custom menu con wp_nav_menu() in WORDPRESS http://goo.gl/8abbR #Wordpress #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[da-finire-wp_nav_menu]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:51:"http://www.kludge.it/funzione_linguaggio/wordpress/";}s:4:"time";i:1383811444;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mela (CMD), ALT, ESC, SHIFT: icone in UNICODE</title>
		<link>http://www.kludge.it/mela-cmd-alt-esc-shift-icone-in-unicode/</link>
		<pubDate>Tue, 19 Mar 2013 07:14:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=527</guid>
		<description></description>
		<content:encoded><![CDATA[Mi &egrave; capitato qualche tempo fa di dover utilizzare le icone dei vari tasti per annotarmi degli shortcut e, spulciando un p&ograve; nella rete, ho trovato il codice UNICODE per quelli pi&ugrave; utilizzati per quanto riguarda MAC:

⌘ – [cci lang="html"]&#x2318;[/cci] – [cci lang="html"]&#8984;[/cci] – Simbolo Mela (CMD)
⌥ – [cci lang="html"]&#x2325;[/cci] – [cci lang="html"]&#8997;[/cci] – Simbolo ALT (Option)
⇧ – [cci lang="html"]&#x21E7;[/cci] – [cci lang="html"]&#8679;[/cci] – Simbolo Shift
⎋ – [cci lang="html"]&#x238B;[/cci] – [cci lang="html"]&#9099;[/cci] – Simbolo ESC
⇪ – [cci lang="html"]&#x21ea;[/cci] – [cci lang="html"]&#8682;[/cci] – Simbolo Capslock
⏎ – [cci lang="html"]&#x23ce;[/cci] – [cci lang="html"]&#9166;[/cci] – Simbolo Enter (Invio)
⌫ – [cci lang="html"]&#x232b;[/cci] – [cci lang="html"]&#9003;[/cci] – Simbolo Backspace (Delete - cancella)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>527</wp:post_id>
		<wp:post_date>2013-03-19 08:14:00</wp:post_date>
		<wp:post_date_gmt>2013-03-19 07:14:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mela-cmd-alt-esc-shift-icone-in-unicode</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="html5"><![CDATA[HTML 5]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383729194;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Zen Coding / Emmet in SUBLIME TEXT 2</title>
		<link>http://www.kludge.it/zen-coding-emmet-in-sublime-text-2/</link>
		<pubDate>Sun, 17 Mar 2013 07:04:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=537</guid>
		<description></description>
		<content:encoded><![CDATA[Lo Zen Coding / Emmet sono un insieme di plugin compatibili con vari editor (Coda, TextMate, Sublime Text 2, Notepad ++ ecc.) che velocizzano di molto il workflow di qualsiasi web designer.
Consistono essenzialmente in dei comandi rapidi per la creazione di markup HTML, XML, XLS (e ultimamente anche CSS).
Quante volte ci &egrave; capitato di dover creare una serie di "post" di esempio nei nostri layout html, con Zen Coding / Emmet bastano pochi caratteri ed un tab:
[cc lang="html"]
article.post*5>h1+p
[/cc]
Premiamo TAB, e il risultato sar&agrave;:
[cc lang="html"]
<article class="post">
	<h1></h1>
	<p></p>
</article>
<article class="post">
	<h1></h1>
	<p></p>
</article>
<article class="post">
	<h1></h1>
	<p></p>
</article>
<article class="post">
	<h1></h1>
	<p></p>
</article>
<article class="post">
	<h1></h1>
	<p></p>
</article>
[/cc]

Facile no?
<ul>
<li><a href="http://docs.emmet.io/" title="Emmet">http://docs.emmet.io/</a></li>
<li><a href="http://code.google.com/p/zen-coding/" title="Zen Coding">http://code.google.com/p/zen-coding/</a></li>
</ul>

NB: In Sublime Text 2 per installare Emmet &egrave; sufficiente aprire il Package Control (&#8984 + &#8679 + P) digitare "Install Package" e digitare "Emmet".
Riavviate SB2 e sarete pronti!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>537</wp:post_id>
		<wp:post_date>2013-03-17 08:04:00</wp:post_date>
		<wp:post_date_gmt>2013-03-17 07:04:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>zen-coding-emmet-in-sublime-text-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="altro"><![CDATA[Altro]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[40]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383863696;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Limitare l&#039;accesso ai clienti del pannello admin in WORDPRESS</title>
		<link>http://www.kludge.it/limitare-laccesso-ai-clienti-del-pannello-admin-in-wordpress/</link>
		<pubDate>Mon, 18 Mar 2013 08:35:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=540</guid>
		<description></description>
		<content:encoded><![CDATA[L'utilizzo di CMS (Wordpress in questo caso) per lo sviluppo di siti web &egrave;, come gi&agrave; sappiamo, molto utile.
A tal proposito per&ograve; pu&ograve; sembrare piuttosto brutto consegnare un pannello di amministrazione di un sito con il logo e i riferimenti del CMS ovunque e neanche l'ombra del nostro.
Allo stesso modo pu&ograve; essere piuttosto pericoloso consegnare un pannello di amministrazione aperto a dei clienti, magari, inesperti che potrebbero inevitabilmente compromettere alcune impostazioni.

Per ovviare a questo problema in modo piuttosto rapido possiamo utilizzare 3 plugin che mi &egrave; capitato di testare di recente:
<ul>
<li><a href="http://wordpress.org/extend/plugins/white-label-cms/" title="White label cms">White Label CMS</a>
Questo plugin, in breve, permette di customizzare la nostra pagina login piuttosto che il logo in alto a sinistra dell'admin bar o i crediti nel footer. Molto comodo e rapido.
<img src="/wp-content/uploads/wordpress-white-label-plugin.png" alt="White label CMS esempio kludge" title="White label CMS esempio" width="427" height="410" class="alignnone size-full wp-image-542" /></li>
<li><a href="http://wordpress.org/extend/plugins/adminimize/" title="Adminimize">Adminimize</a>
Adminimize permette di modificare ci&ograve; che determinati gruppi di utenti possono visualizzare del pannello di amministrazione, ad esempio possiamo far visualizzare la schermata per la gestione dei widget ma non quella dei temi. Ma la domanda sorge spontanea: E se ci servissero pi&ugrave; gruppi utente? in tal caso...</li>
<li><a href="http://wordpress.org/extend/plugins/members/" title="Members">Members</a>
Possiamo utilizzare members per creare o modificare dei gruppi utente andando ad intervenire anche su ci&ograve; che possono o non possono fare. Viene da s&egrave; che l'accoppiata con adminimize consente di avere un controllo perssocch&egrave; totale sulla gestione del pannello admin di Wordpress</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>540</wp:post_id>
		<wp:post_date>2013-03-18 09:35:00</wp:post_date>
		<wp:post_date_gmt>2013-03-18 08:35:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>limitare-laccesso-ai-clienti-del-pannello-admin-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp-svbtle-kudos</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:51:"http://www.kludge.it/funzione_linguaggio/wordpress/";}s:4:"time";i:1383811444;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Abilitare la modalità Debug durante lo sviluppo in WORDPRESS</title>
		<link>http://www.kludge.it/abilitare-la-modalita-debug-durante-lo-sviluppo-in-wordpress/</link>
		<pubDate>Tue, 19 Mar 2013 09:45:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=550</guid>
		<description></description>
		<content:encoded><![CDATA[Quando stiamo sviluppando dei plugins, dei temi o qualsiasi elemento nuovo a Wordpress &egrave; buona regola abilitare la modalit&agrave; debug.
Molte persone non lo sanno ma all'interno del file wp-config.php viene definita una costante php chiamata WP_DEBUG (linea 81 all'attuale versione di wordpress) che di default ha impostato il valore false:
[cc lang="php"]
define('WP_DEBUG', false);
[/cc]
Impostando il suo valore a true, come spiegano molto bene i commenti presenti nel file, permettiamo a wordpress di "stampare a video" gli avvisi e gli errori.
[cc lang="php"]
define('WP_DEBUG', true);
[/cc]
Lo stesso team di wordpress raccomanda vivamente di abilitare tale funzione durante lo sviluppo]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>550</wp:post_id>
		<wp:post_date>2013-03-19 10:45:00</wp:post_date>
		<wp:post_date_gmt>2013-03-19 09:45:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>abilitare-la-modalita-debug-durante-lo-sviluppo-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="define"><![CDATA[define();]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp-svbtle-kudos</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:51:"http://www.kludge.it/funzione_linguaggio/wordpress/";}s:4:"time";i:1383903794;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Eseguire una funzione solo dopo un&#039;azione di WORDPRESS</title>
		<link>http://www.kludge.it/eseguire-una-funzione-solo-dopo-unazione-di-wordpress/</link>
		<pubDate>Mon, 18 Mar 2013 07:45:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=553</guid>
		<description></description>
		<content:encoded><![CDATA[Wordpress effettua numerose azioni, dall'inizializzazione dello stesso, alla pubblicazione di un post, al caricamento del footer, della sidebar, dell'header e moltissime altre.
Possiamo, per alcuni motivi, trovarci nella necessit&agrave; di eseguire una funzione subito dopo che una di queste azioni &egrave; stata terminata, per fare ci&ograve; Wordpress ci mette a disposizione il metodo add_action();.
Tale metodo richiede almeno due parametri: il primo &egrave; una stringa contenente il nome dell'azione eseguita da wordpress (che &egrave; consultabile nel codex all'indirizzo <a href="http://codex.wordpress.org/Plugin_API/Action_Reference" title="Referenza Azioni di Wordpress">http://codex.wordpress.org/Plugin_API/Action_Reference</a>) e il secondo &egrave; la funzione da eseguire.

L'esempio tipico potrebbe essere l'invio di una mail ad un amico ogniqualvolta viene pubblicato un post:
[cc lang="php"]
function email_friends( $post_ID )  
{
   $friends = 'matt@kludge.it, baby@kludge.it';
   wp_mail( $friends, "Post pubblicato in kludge.it", 'Hey, abbiamo pubblicato un nuovo post nel blog di Kludge.it!' );

   return $post_ID;
}
add_action( 'publish_post', 'email_friends' );
[/cc]

Per ulteriori dettagli consultate, come al solito, il codex di wordpress all'indirizzo <a href="http://codex.wordpress.org/Function_Reference/add_action" title="Wordpress codex - referenza ADD_ACTION()">http://codex.wordpress.org/Function_Reference/add_action</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>553</wp:post_id>
		<wp:post_date>2013-03-18 08:45:00</wp:post_date>
		<wp:post_date_gmt>2013-03-18 07:45:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eseguire-una-funzione-solo-dopo-unazione-di-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="add_action"><![CDATA[add_action();]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp-svbtle-kudos</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:62:"http://www.kludge.it/funzione_linguaggio/wordpress/add_action/";}s:4:"time";i:1383811444;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ottenere percorso, nome ed estensione di un files</title>
		<link>http://www.kludge.it/ottenere-percorso-nome-ed-estensione-di-un-files/</link>
		<pubDate>Thu, 28 Mar 2013 09:04:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=362</guid>
		<description></description>
		<content:encoded><![CDATA[Supponendo di avere una cartella "img" con all'interno una serie di files .jpg, .jpeg e .png potremmo ottenere un array contenente il percorso, il nome, il nome con l'estensione e l'estensione soltanto grazie al metodo pathinfo():
[cc lang="php"]
$images= glob("img/*.{jpg,jpeg,png}", GLOB_BRACE);
foreach ( $images as $image) {
    $info = pathinfo($image);
    print_r($info);
}
[/cc]
Gli indici di ciascun array associativo sono:
<ul>
<li>dirname: il percorso del file</li>
<li>basename: il nome + l'estensione</li>
<li>extension: la sola estensione del file</li>
<li>filename: il nome del file senza estensione</li>
</ul>

Se volessimo ottenere direttamente uno degli elementi sopraelencati senza dover "passare per l'array associativo" potremmo passare un flag come secondo parametro a pathinfo(): PATHINFO_DIRNAME, PATHINFO_BASENAME, PATHINFO_EXTENSION e PATHINFO_FILENAME.
[cc lang="php"]
$images: glob("img/*.{jpg,jpeg,png}", GLOB_BRACE);
foreach ( $images as $image) {
    $info = pathinfo($image, PATHINFO_FILENAME);
    echo "$info <br/>";
}
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>362</wp:post_id>
		<wp:post_date>2013-03-28 10:04:00</wp:post_date>
		<wp:post_date_gmt>2013-03-28 09:04:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ottenere-percorso-nome-ed-estensione-di-un-files</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="glob"><![CDATA[glob();]]></category>
		<category domain="funzione_linguaggio" nicename="pathinfo"><![CDATA[pathinfo();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383905924;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/kntcB]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/ottenere-percorso-nome-ed-estensione-di-un-files/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:85:"Ottenere percorso, nome ed estensione di un files http://goo.gl/kntcB #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:85:"Ottenere percorso, nome ed estensione di un files http://goo.gl/kntcB #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364461953;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Trasformare un CSV in un array in PHP</title>
		<link>http://www.kludge.it/trasformare-un-csv-in-un-array-in-php/</link>
		<pubDate>Wed, 27 Mar 2013 08:51:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=366</guid>
		<description></description>
		<content:encoded><![CDATA[Nel caso in cui dovessimo trasformare una stringa delimitata in un preciso modo (anche un indirizzo o un URL per esempio) o un file CSV in un array potremmo farlo utilizzando il metodo explode():
[cc lang="php"]$string = "Matt,Marc,Jane,John,Julie";
$str_arr = explode(",", $string);
print_r($str_arr);[/cc]
Come risultato avremmo un array con 5 elementi contenenti i vari nomi.
Il metodo explode() accetta anche un terzo parametro (opzionale) che specifica la lunghezza massima dell'array creato ma per ulteriori delucidazioni in merito consultare http://php.net/manual/en/function.explode.php.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>366</wp:post_id>
		<wp:post_date>2013-03-27 09:51:00</wp:post_date>
		<wp:post_date_gmt>2013-03-27 08:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>trasformare-un-csv-in-un-array-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="explode"><![CDATA[explode();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="print_r"><![CDATA[print_r();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383907394;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/Oot1i]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/trasformare-un-csv-in-un-array-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:73:"Trasformare un CSV in un array in PHP http://goo.gl/Oot1i #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:73:"Trasformare un CSV in un array in PHP http://goo.gl/Oot1i #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364374439;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Trova e sostituisci in PHP</title>
		<link>http://www.kludge.it/trova-e-sostituisci-in-php/</link>
		<pubDate>Wed, 27 Mar 2013 07:08:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=368</guid>
		<description></description>
		<content:encoded><![CDATA[Il metodo str_replace() funziona come il "Trova e sostituisci" di qualsiasi editor di testo:
[cc lang="php"]$string = "Io mi chiamo Matt";
$string = str_replace("Matt", "John", $string);
//il risultato sarà "Io mi chiamo John"[/cc]
&Egrave; possibile inoltre lavorare con array e ciascuna sostituzione sar&agrave; effettuata in ordine:
[cc lang="php"]
$string  = "Dovresti mangiare frutta, verdura e fibre ogni giorno.";
$healthy = array("frutta", "verdura", "fibre");
$yummy   = array("pizza", "patatine", "gelato");
$string = str_replace($healthy, $yummy, $string);
// Il risultato sarà "Dovresti mangiare pizza, patatine e gelato ogni giorno"[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>368</wp:post_id>
		<wp:post_date>2013-03-27 08:08:00</wp:post_date>
		<wp:post_date_gmt>2013-03-27 07:08:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>trova-e-sostituisci-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="str_replace"><![CDATA[str_replace();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383829096;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/UWnUI]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/trova-e-sostituisci-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:61:"Trova e sostituisci in PHP http://goo.gl/UWnUI PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:61:"Trova e sostituisci in PHP http://goo.gl/UWnUI PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364368305;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Trasformare gli elementi di un array in una stringa in PHP</title>
		<link>http://www.kludge.it/trasformare-gli-elementi-di-un-array-in-una-stringa-in-php/</link>
		<pubDate>Tue, 26 Mar 2013 08:33:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=370</guid>
		<description></description>
		<content:encoded><![CDATA[Con il metodo implode() (l'opposto di explode() ) possiamo trasformare tutti i valori di un array in una stringa separandoli a nostro piacimento:
[cc lang="php"]
$arr = array('Matt', 'John', 'Julie', 'Jane');
echo $string = implode(", ", $arr);
//il risultato sarà "Matt, John, Julie, Jane";
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>370</wp:post_id>
		<wp:post_date>2013-03-26 09:33:00</wp:post_date>
		<wp:post_date_gmt>2013-03-26 08:33:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>trasformare-gli-elementi-di-un-array-in-una-stringa-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="implode"><![CDATA[implode();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383839132;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Protezione basilare da sql injection in PHP</title>
		<link>http://www.kludge.it/protezione-basilare-da-sql-injection-in-php/</link>
		<pubDate>Sat, 30 Mar 2013 10:23:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=406</guid>
		<description></description>
		<content:encoded><![CDATA[Sicuramente, anche nella pi&ugrave;, semplice web application &egrave; necessario passare dei valori dinamici ad una query sql, tali frammenti di codice sono spesso il punto critico (riguardo la sicurezza) delle prime applicazioni.
La protezione minima di cui abbiamo bisogno &egrave; racchiusa nel metodo PDO::quote :
Una volta che <a href="/?p=387" title="new PDO">&egrave; stata stabilita una connessione</a> ad un database, la variabile passata al metodo PDO::query sar&agrave; filtrata dal metodo PDO::quote :
[cc lang="php"]
$data_source_name = 'mysql:host=localhost;dbname=nome_db';
$username = 'root';
$password = 'password';
$id = 3;
try {
    $conn = new PDO($data_source_name, $username, $password);
    $results = $conn->query("SELECT * FROM nome_tabella WHERE id = " . $conn->quote($id));
} catch(PDOException $e) {
    echo 'Connessione fallita: ' . $e->getMessage();
}
[/cc]
Nel nostro caso il valore &egrave; stato dichiarato da noi ma supponendo che provenisse da un form, il metodo PDO::quote racchiude tra apici, ove necessario e sostituisce i caratteri speciali (potenzialmente pericolosi).

NB: Ci sono metodi migliori per per proteggersi (come ad esempio <a href="/?p=410">PDO::prepare</a> ) ma come inizio PDO::quote &egrave; pi&ugrave; che sufficiente.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>406</wp:post_id>
		<wp:post_date>2013-03-30 11:23:00</wp:post_date>
		<wp:post_date_gmt>2013-03-30 10:23:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>protezione-basilare-da-sql-injection-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="pdo"><![CDATA[PDO / PHP Data Objects]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-query"><![CDATA[PDO:: query();]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-quote"><![CDATA[PDO:: quote();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383829426;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/ZBFyw]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:79:"Protezione basilare da sql injection in PHP http://goo.gl/ZBFyw #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:79:"Protezione basilare da sql injection in PHP http://goo.gl/ZBFyw #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364639812;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Preparare una query sql sicura con PDO::prepare in PHP</title>
		<link>http://www.kludge.it/porv/</link>
		<pubDate>Sat, 30 Mar 2013 07:32:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=410</guid>
		<description></description>
		<content:encoded><![CDATA[Sicuramente, anche nella pi&ugrave;, semplice web application &egrave; necessario passare dei valori dinamici ad una query sql, tali frammenti di codice sono spesso il punto critico (riguardo la sicurezza) delle prime applicazioni.
Per proteggerci <strong>efficacemente</strong> da sql injection possiamo utilizzare il metodo PDO::prepare per poi effettuare un bind dei parametri ed eseguire la query.
Una volta che &egrave; stata <a href="/?p=387" title="new PDO">stabilita una connessione</a> ad un database, prepariamo la nostra query:
[cc lang="php"]
$data_source_name = 'mysql:host=localhost;dbname=nome_db';
$username = 'root';
$password = 'password';
$id = 3;
try {
    $conn = new PDO($data_source_name, $username, $password);
    $stmt = $conn->prepare("SELECT * FROM nome_tabella WHERE id = :id");
    //al posto della variabile utilizziamo un placeholder preponendoci ":"
} catch(PDOException $e) {
    echo 'Connessione fallita: ' . $e->getMessage();
}
[/cc]
Come potete vedere abbiamo sostituito la variabile stessa con un semplice placeholder (segnaposto) dandogli il nome a noi pi&ugrave; consono (in questo caso "id") che dovr&agrave; essere preceduto da ":".
Ora non ci resta che associare la vera variabile al placeholder e lanciare la query:
<ul>
<li><a href="/?p=416" title="PDO::bindParam">Effettuiamo il bind delle variabili con il metodo PDO::bindParam</a></li>
<li><a href="/?p=417" title="PDO::execute">Lanciamo la query con il metodo PDO::execute</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>410</wp:post_id>
		<wp:post_date>2013-03-30 08:32:00</wp:post_date>
		<wp:post_date_gmt>2013-03-30 07:32:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>porv</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="pdo"><![CDATA[PDO / PHP Data Objects]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-prepare"><![CDATA[PDO:: prepare();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383827986;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/PWqkN]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/porv/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:90:"Preparare una query sql sicura con PDO::prepare in PHP http://goo.gl/PWqkN #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:90:"Preparare una query sql sicura con PDO::prepare in PHP http://goo.gl/PWqkN #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364628898;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Effettuare un bind dei parametri di una query sql in PHP</title>
		<link>http://www.kludge.it/bind/</link>
		<pubDate>Fri, 29 Mar 2013 09:26:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=416</guid>
		<description></description>
		<content:encoded><![CDATA[Una volta che &egrave; stata <a href="/?p=387" title="new PDO">stabilita una connessione</a> ad un database e <a href="/?p=410" title="PDO::prepare">preparata la query</a> possiamo procedere ad effettuare il bind dei dati:
[cc lang="php"]
$data_source_name = 'mysql:host=localhost;dbname=nome_db';
$username = 'root';
$password = 'password';
$id = 3;
try {
    $conn = new PDO($data_source_name, $username, $password);
    $stmt = $conn->prepare("SELECT * FROM nome_tabella WHERE id = :id");
    $stmt = $conn->bindParam(':id', $id, PDO::PARAM_INT, 2);
    //effettuiamo il bind passando il nome del placeholder, la variabile, il tipo e la lunghezza
} catch(PDOException $e) {
    echo 'Connessione fallita: ' . $e->getMessage();
}
[/cc]
Grazie al metodo PDO::bindParam abbiamo associato al placeholder :id la variabile stessa specificandone anche il tipo (opzionale) e la lunghezza massima(opzionale).

Ora non ci resta che lanciare la query:
<ul>
<li><a href="/?p=417" title="PDO::execute">Lanciamo la query con il metodo PDO::execute</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>416</wp:post_id>
		<wp:post_date>2013-03-29 10:26:00</wp:post_date>
		<wp:post_date_gmt>2013-03-29 09:26:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bind</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="pdo"><![CDATA[PDO / PHP Data Objects]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-bindparam"><![CDATA[PDO:: bindParam();]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-prepare"><![CDATA[PDO:: prepare();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383827986;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/yfsfs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/bind/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:92:"Effettuare un bind dei parametri di una query sql in PHP http://goo.gl/yfsfs #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:92:"Effettuare un bind dei parametri di una query sql in PHP http://goo.gl/yfsfs #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364549420;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Eseguire una query sql precedentemente preparata in PHP</title>
		<link>http://www.kludge.it/execute/</link>
		<pubDate>Fri, 29 Mar 2013 08:38:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=417</guid>
		<description></description>
		<content:encoded><![CDATA[Una volta che &egrave; stata <a href="/?p=387" title="new PDO">stabilita una connessione</a> ad un database e <a href="/?p=410" title="PDO::prepare">preparata la query</a> ed <a href="/?p=416" title="PDO::bindParam">effettuato il bind dei dati</a> possiamo eseguirla:
[cc lang="php"]
$data_source_name = 'mysql:host=localhost;dbname=nome_db';
$username = 'root';
$password = 'password';
$id = 3;
try {
    $conn = new PDO($data_source_name, $username, $password);
    $stmt = $conn->prepare("SELECT * FROM nome_tabella WHERE id = :id");
    $stmt = $conn->bindParam(':id', $id, PDO::PARAM_INT, 2);
    $stmt = $conn->execute(); //eseguiamo la query preparata con PDO::execute
} catch(PDOException $e) {
    echo 'Connessione fallita: ' . $e->getMessage();
}
[/cc]
Se, ad esempio, non volessimo effettuare il bind delle/e variabile/i con il metodo PDO::bindParam potremmo effettuarlo passando al metodo PDO::execute un array associativo composto dall'indice di ciascun valore uguale al placeholder e il valore uguale alla variabile stessa:
[cc lang="php"]
$data_source_name = 'mysql:host=localhost;dbname=nome_db';
$username = 'root';
$password = 'password';
$id = 3;
try {
    $conn = new PDO($data_source_name, $username, $password);
    $stmt = $conn->prepare("SELECT * FROM nome_tabella WHERE id = :id");
    $stmt = $conn->execute(array(
        'id' => $id
    )); //eseguiamo con bind
} catch(PDOException $e) {
    echo 'Connessione fallita: ' . $e->getMessage();
}
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>417</wp:post_id>
		<wp:post_date>2013-03-29 09:38:00</wp:post_date>
		<wp:post_date_gmt>2013-03-29 08:38:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>execute</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="pdo"><![CDATA[PDO / PHP Data Objects]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-bindparam"><![CDATA[PDO:: bindParam();]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-execute"><![CDATA[PDO:: execute();]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-prepare"><![CDATA[PDO:: prepare();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383827986;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/0JTSb]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/execute/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:91:"Eseguire una query sql precedentemente preparata in PHP http://goo.gl/0JTSb #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:91:"Eseguire una query sql precedentemente preparata in PHP http://goo.gl/0JTSb #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364547114;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shortcut per visualizzare e ridimensionare un&#039;immagine in PHOTOSHOP</title>
		<link>http://www.kludge.it/visualizzare-e-ridimensionare-unimmagine-in-photoshop/</link>
		<pubDate>Thu, 21 Mar 2013 10:15:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=436</guid>
		<description></description>
		<content:encoded><![CDATA[Molto spesso ci troviamo in questa situazione:<a href="http://localhost/appunti//wp-content/uploads/2013/01/Schermata-2013-01-08-a-11.59.31.png"><img class="alignnone size-full wp-image-439" title="Schermata 2013-01-08 a 11.59.31" src="http://localhost/appunti//wp-content/uploads/2013/01/Schermata-2013-01-08-a-11.59.31.png" alt="" width="502" height="555" /></a>

Dopo aver importato un'immagine nello stage ci accorgiamo che è immensamente più grande di quanto ci aspettassimo e dobbiamo ridimensionarla.
Per attivare i controlli di trasformazione premete:
⌘+T
Per visualizzare l'immagine da ridimensionare per intero premete:
⌘+0
La situazione ora sarà la seguente:
<a href="http://localhost/appunti//wp-content/uploads/2013/01/Schermata-2013-01-08-a-12.02.42.png"><img class="alignnone size-full wp-image-440" title="Schermata 2013-01-08 a 12.02.42" src="http://localhost/appunti//wp-content/uploads/2013/01/Schermata-2013-01-08-a-12.02.42.png" alt="" width="1002" height="691" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>436</wp:post_id>
		<wp:post_date>2013-03-21 11:15:00</wp:post_date>
		<wp:post_date_gmt>2013-03-21 10:15:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visualizzare-e-ridimensionare-unimmagine-in-photoshop</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="photoshop"><![CDATA[Photoshop]]></category>
		<category domain="category" nicename="shortcut"><![CDATA[Shortcut]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383708493;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shortcut per visualizzare e nascondere i righelli in PHOTOSHOP</title>
		<link>http://www.kludge.it/shortcut-per-visualizzare-e-nascondere-i-righelli-in-photoshop/</link>
		<pubDate>Thu, 21 Mar 2013 09:50:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=449</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://localhost/appunti//wp-content/uploads/2013/01/Schermata-2013-01-08-a-12.20.14.png"><img src="http://localhost/appunti//wp-content/uploads/2013/01/Schermata-2013-01-08-a-12.20.14.png" alt="" title="Schermata 2013-01-08 a 12.20.14" width="653" height="523" class="alignnone size-full wp-image-450" /></a>

Per visualizzare o nascondere i righelli in Photoshop possiamo utilizzare lo shortcut:
&#8984;+R

<a href="http://localhost/appunti//wp-content/uploads/2013/01/Schermata-2013-01-08-a-12.20.22.png"><img src="http://localhost/appunti//wp-content/uploads/2013/01/Schermata-2013-01-08-a-12.20.22.png" alt="" title="Schermata 2013-01-08 a 12.20.22" width="651" height="522" class="alignnone size-full wp-image-451" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>449</wp:post_id>
		<wp:post_date>2013-03-21 10:50:00</wp:post_date>
		<wp:post_date_gmt>2013-03-21 09:50:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shortcut-per-visualizzare-e-nascondere-i-righelli-in-photoshop</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="photoshop"><![CDATA[Photoshop]]></category>
		<category domain="category" nicename="shortcut"><![CDATA[Shortcut]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383708493;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shortcut per duplicare un livello in PHOTOSHOP</title>
		<link>http://www.kludge.it/shortcut-per-duplicare-un-livello-in-photoshop/</link>
		<pubDate>Fri, 22 Mar 2013 08:46:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=453</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://localhost/appunti//wp-content/uploads/2013/01/Schermata-2013-01-08-a-12.30.11.png"><img src="http://localhost/appunti//wp-content/uploads/2013/01/Schermata-2013-01-08-a-12.30.11.png" alt="" title="Schermata 2013-01-08 a 12.30.11" width="251" height="280" class="alignnone size-full wp-image-454" /></a>

Per duplicare un livello in Photoshop dobbiamo selezionarlo dalla palette "Livelli" ed utilizzare lo shortcut:
&#8984;+J

<a href="http://localhost/appunti//wp-content/uploads/2013/01/Schermata-2013-01-08-a-12.30.27.png"><img src="http://localhost/appunti//wp-content/uploads/2013/01/Schermata-2013-01-08-a-12.30.27.png" alt="" title="Schermata 2013-01-08 a 12.30.27" width="247" height="279" class="alignnone size-full wp-image-455" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>453</wp:post_id>
		<wp:post_date>2013-03-22 09:46:00</wp:post_date>
		<wp:post_date_gmt>2013-03-22 08:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shortcut-per-duplicare-un-livello-in-photoshop</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="photoshop"><![CDATA[Photoshop]]></category>
		<category domain="category" nicename="shortcut"><![CDATA[Shortcut]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383708493;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shortcut per chiudere un tag html in SUBLIME TEXT 2</title>
		<link>http://www.kludge.it/shortcut-per-chiudere-un-tag-html-in-sublime-text-2/</link>
		<pubDate>Fri, 22 Mar 2013 10:52:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=459</guid>
		<description></description>
		<content:encoded><![CDATA[Ogni designer o developer cerca di velocizzare il proprio lavoro e cerca di risparmiare più tempo possibile nella scrittura del codice; a tal proposito in Sublime Text 2 (e anche in TextMate) possiamo chiudere qualsiasi tag HTML aperto (uno per volta ed in sequenza) utilizzando lo shortcut:
⌘+⌥+.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>459</wp:post_id>
		<wp:post_date>2013-03-22 11:52:00</wp:post_date>
		<wp:post_date_gmt>2013-03-22 10:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shortcut-per-chiudere-un-tag-html-in-sublime-text-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="shortcut"><![CDATA[Shortcut]]></category>
		<category domain="post_tag" nicename="sublime-text-2"><![CDATA[Sublime text 2]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383708493;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>HTML5 &amp; CSS3 blank theme per WORDPRESS</title>
		<link>http://www.kludge.it/html5-css3-blank-theme-per-wordpress/</link>
		<pubDate>Sat, 23 Mar 2013 07:28:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=464</guid>
		<description></description>
		<content:encoded><![CDATA[Iniziare lo sviluppo di un tema wordpress con un blank theme &egrave; sempre una buona idea.
Tale tema ci permette di avere delle pagine senza un layout e con solo gli snippet necessari a wordpress e il markup html.

Nel web ce ne sono molti ma, personalmente, trovo ben fatto e aggiornato quello proposto da <a href="http://html5reset.org/#wordpress" alt="HTML5 RESET">html5reset.org</a>, basato sul Blank theme di Chris Coyer e proposto in <a href="http://digwp.com/" alt="Digging into wordpress website">Digging into Wordpress</a> ma riadattato in HTML5 e predisposto per il Responsive web design:
Il tema viene installato come un normalissimo tema wordpress, &egrave; possibile scaricarlo all'indirizzo <a href="https://github.com/murtaugh/HTML5-Reset-Wordpress-Theme/zipball/master" alt="Blank theme html5 github">https://github.com/murtaugh/HTML5-Reset-Wordpress-Theme/zipball/master</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>464</wp:post_id>
		<wp:post_date>2013-03-23 08:28:00</wp:post_date>
		<wp:post_date_gmt>2013-03-23 07:28:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>html5-css3-blank-theme-per-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:51:"http://www.kludge.it/funzione_linguaggio/wordpress/";}s:4:"time";i:1383834560;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Metodo get_header() in WORDPRESS</title>
		<link>http://www.kludge.it/metodo-get_header-in-wordpress/</link>
		<pubDate>Sun, 24 Mar 2013 09:12:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=470</guid>
		<description></description>
		<content:encoded><![CDATA[Grazie al metodo get_header() in wordpress importiamo il file header.php (file necessario) all'interno delle nostre pagine:
[cc lang="php"]
<?php
    get_header(); //include file header.php
?>
[/cc]
Accetta un parametro opzionale che si riferisce al nome del file:
[cc lang="php"]
<?php
    get_header('home'); //include file header-home.php
?>
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>470</wp:post_id>
		<wp:post_date>2013-03-24 10:12:00</wp:post_date>
		<wp:post_date_gmt>2013-03-24 09:12:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>metodo-get_header-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:51:"http://www.kludge.it/funzione_linguaggio/wordpress/";}s:4:"time";i:1383736453;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Metodo get_footer() in WORDPRESS</title>
		<link>http://www.kludge.it/metodo-get_footer-in-wordpress/</link>
		<pubDate>Sun, 24 Mar 2013 08:02:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=472</guid>
		<description></description>
		<content:encoded><![CDATA[Grazie al metodo get_footer() in wordpress importiamo il file footer.php (file necessario) all'interno delle nostre pagine:
[cc lang="php"]
<?php
    get_footer();  //include file footer.php
?>
[/cc]
Accetta un parametro opzionale che si riferisce al nome del file:
[cc lang="php"]
<?php
    get_footer('home'); //include file footer-home.php
?>
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>472</wp:post_id>
		<wp:post_date>2013-03-24 09:02:00</wp:post_date>
		<wp:post_date_gmt>2013-03-24 08:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>metodo-get_footer-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:51:"http://www.kludge.it/funzione_linguaggio/wordpress/";}s:4:"time";i:1383736453;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Metodo get_sidebar() in WORDPRESS</title>
		<link>http://www.kludge.it/metodo-get_sidebar-in-wordpress/</link>
		<pubDate>Sat, 23 Mar 2013 10:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=478</guid>
		<description></description>
		<content:encoded><![CDATA[Grazie al metodo get_sidebar() in wordpress importiamo il file sidebar.php all'interno delle nostre pagine:
[cc lang="php"]
<?php
    get_sidebar(); //include file sidebar.php
?>
[/cc]
Accetta un parametro opzionale che si riferisce al nome del file:
[cc lang="php"]
<?php
    get_sidebar('left'); //include file sidebar-left.php
?>
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>478</wp:post_id>
		<wp:post_date>2013-03-23 11:00:00</wp:post_date>
		<wp:post_date_gmt>2013-03-23 10:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>metodo-get_sidebar-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:51:"http://www.kludge.it/funzione_linguaggio/wordpress/";}s:4:"time";i:1383902046;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Metodo is_archive() in WORDPRESS</title>
		<link>http://www.kludge.it/metodo-is_archive-in-wordpress/</link>
		<pubDate>Mon, 25 Mar 2013 09:53:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=486</guid>
		<description></description>
		<content:encoded><![CDATA[Il metodo is_archive() restituisce un valore booleano dicendoci se la pagina attuale &egrave; una pagina archivio:
[cc lang="php"]
<?php if (is_archive()) {
    echo '<title>Archivio</title>';
} ?>
[/cc]
Il metodo non accetta parametri.
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>486</wp:post_id>
		<wp:post_date>2013-03-25 10:53:00</wp:post_date>
		<wp:post_date_gmt>2013-03-25 09:53:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>metodo-is_archive-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="echo"><![CDATA[echo]]></category>
		<category domain="funzione_linguaggio" nicename="is_archive"><![CDATA[is_archive();]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383903781;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Funzioni di aiuto per effettuare query SQL in PHP</title>
		<link>http://www.kludge.it/funzioni-di-aiuto-per-effettuare-query-sql-in-php/</link>
		<pubDate>Thu, 28 Mar 2013 08:04:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=518</guid>
		<description></description>
		<content:encoded><![CDATA[Dopo aver analizzato tutti i vari passaggi per connetterci ad un DB, effettuare delle query etc. possiamo riassumere quanto imparato in delle funzioni di aiuto che potrebbero essere racchiuse in un file functions.php ed utilizzate ogni qual volta ne avessimo la necessit&agrave;.
Dopo aver effettuato la connessione al DB ci &egrave; utile lanciare delle query:
[cc lang="php"]
function kludge_query($query, $bindings, $conn)
{
	$stmt = $conn->prepare($query);
	$stmt->execute($bindings);

	$results = $stmt->fetchAll();

	return $results ? $results : false;
}
[/cc]

Tale funzione verr&agrave; richiamata in questo modo in index.php:
[cc lang="php"]
require 'functions.php';
$id = 12;
$results = kludge_query("SELECT * FROM users WHERE id = :id",
				  array('id' => $id),
				  $conn);
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>518</wp:post_id>
		<wp:post_date>2013-03-28 09:04:00</wp:post_date>
		<wp:post_date_gmt>2013-03-28 08:04:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>funzioni-di-aiuto-per-effettuare-query-sql-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="array"><![CDATA[array();]]></category>
		<category domain="funzione_linguaggio" nicename="pdo"><![CDATA[PDO / PHP Data Objects]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-execute"><![CDATA[PDO:: execute();]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-fetchall"><![CDATA[PDO:: fetchAll();]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-prepare"><![CDATA[PDO:: prepare();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383819384;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/04zJF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/funzioni-di-aiuto-per-effettuare-query-sql-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:85:"Funzioni di aiuto per effettuare query SQL in PHP http://goo.gl/04zJF #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:85:"Funzioni di aiuto per effettuare query SQL in PHP http://goo.gl/04zJF #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364458688;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Modificare URL da un dominio ad un altro con SQL in WORDPRESS</title>
		<link>http://www.kludge.it/modificare-url-da-un-dominio-ad-un-altro-con-sql-in-wordpress/</link>
		<pubDate>Mon, 25 Mar 2013 09:31:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=546</guid>
		<description></description>
		<content:encoded><![CDATA[Se non vi &egrave; gi&agrave; successo sicuramente vi succeder&agrave;: parlo di una migrazione da un dominio ad un altro.
Il processo nel suo complesso &egrave; piuttosto semplice: si fa un backup dei files, si modifica l'URL dal pannello di wordpress (o dalla tabella wp_options) si spostano i files e si importa nuovamente il DB...
Semplice no? Ma se nei nostri post avessimo erroneamente inserito dei links assoluti che puntavano verso il nostro vecchio dominio?
SQL ci viene in aiuto con una query piuttosto semplice:
[cc lang="SQL"]
UPDATE wp_options SET option_value = replace(option_value, 'http://vecchiodominio.com', 'http://nuovodominio.com') WHERE option_name = 'home' OR option_name = 'siteurl';

UPDATE wp_posts SET post_content = replace(post_content, 'http://vecchiodominio.com', 'http://nuovodominio.com');

UPDATE wp_links SET link_url = replace(link_url, 'http://vecchiodominio.com','http://nuovodominio.com');

UPDATE wp_postmeta SET meta_value = replace(meta_value, 'http://vecchiodominio.com','http://nuovodominio.com');

UPDATE wp_posts SET guid = replace(guid, 'http://vecchiodominio.com','http://nuovodominio.com');
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>546</wp:post_id>
		<wp:post_date>2013-03-25 10:31:00</wp:post_date>
		<wp:post_date_gmt>2013-03-25 09:31:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>modificare-url-da-un-dominio-ad-un-altro-con-sql-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="replace"><![CDATA[REPLACE;]]></category>
		<category domain="funzione_linguaggio" nicename="sql"><![CDATA[SQL]]></category>
		<category domain="funzione_linguaggio" nicename="update"><![CDATA[UPDATE;]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:51:"http://www.kludge.it/funzione_linguaggio/wordpress/";}s:4:"time";i:1383903781;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[AleX]]></wp:comment_author>
			<wp:comment_author_email>alexturry@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.aleandroid.com</wp:comment_author_url>
			<wp:comment_author_IP>95.141.31.7</wp:comment_author_IP>
			<wp:comment_date>2013-04-15 23:39:11</wp:comment_date>
			<wp:comment_date_gmt>2013-04-15 21:39:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Query molto utile, grazie.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366061952.056972026824951171875;s:7:"message";s:35:"Akismet ha ripulito questo commento";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366063941.2556059360504150390625;s:7:"message";s:53:"admin ha modificato lo stato del commento in approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Matteo Currò]]></wp:comment_author>
			<wp:comment_author_email>curromatteo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>82.84.108.28</wp:comment_author_IP>
			<wp:comment_date>2013-04-16 00:15:29</wp:comment_date>
			<wp:comment_date_gmt>2013-04-15 22:15:29</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Si fa quel che si può! :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>14</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366064129.749713897705078125;s:7:"message";s:35:"Akismet ha ripulito questo commento";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Creare delle nuove categorie e tag con register_taxonomy() in WORDPRESS</title>
		<link>http://www.kludge.it/creare-delle-nuove-categorie-e-tag-con-register_taxonomy-in-wordpress/</link>
		<pubDate>Tue, 26 Mar 2013 10:35:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=669</guid>
		<description></description>
		<content:encoded><![CDATA[Abbiamo gi&agrave; visto come <a href="/?p=552" title="Creare dei custom posts type in wordpress">creare delle tipologie nuove di posts in wordpress</a>, ma se volessimo categorizzare i posts creando delle nuove "categorie"? Se volessimo ad esempio categorizzare i posts secondo la loro difficolt&agrave;?
Potremmo usare il metodo register_taxonomy()!

Procediamo dunque a registrare la nostra nuova tassonomia all'interno del file functions.php del nostro tema:
[cc lang="php"]
// verifichiamo che wordpress sia stato inizializzato
add_action('init', function() {
    // creiamo, ad esempio, una tassonomia per la difficoltà
    register_taxonomy('difficulty', 'snippet', array( // ($nome_taxonomy, $post_type, $options)
        'label' => 'Difficulty', // nome dell'etichetta
        'hierarchical' => true // tassonomia gerarchica - come le categorie
    ));
});
[/cc]

NB: &Egrave; importante ricordare che esistono una serie di termini riservati da wordpress e che non &Egrave; possibile utilizzare, tali termini sono <a href="http://codex.wordpress.org/Function_Reference/register_taxonomy#Reserved_Terms" title="Termini non utilizzabili per registrare una tassonomia in wordpress">disponibili nel codex.</a>.

<img src="http://localhost/appunti/wp-content/uploads/Schermata-2013-01-30-a-11.10.24.png" alt="Custom taxonomy dedicata alla difficoltà dei posts" title="Custom taxonomy dedicata alla difficoltà dei posts" width="290" height="421" class="aligncenter size-full wp-image-679" />

Come sempre, per ulteriori dettagli fate riferimento al codex di wordpress alla pagina della <a href="http://codex.wordpress.org/Function_Reference/register_taxonomy" title="Registrare una custom taxonomy in wordpress">referenza register_taxonomy.</a>

Una volta che abbiamo aggiornato i nostri post con la nostra nuova tassonomia come facciamo a visualizzarla nelle pagine del post singolo?
[cc lang="php"]
echo get_the_term_list( $post->ID, 'difficulty', '', ', ');
[/cc]
Il metodo get_the_term_list() accetta 4 parametri: il primo &egrave; l'ID del post (che possiamo recuperare grazie a $post->ID dato se siamo nel loop), il nome della tassonomia, cosa inserire prima di ciascun tag e cosa inserire dopo ciascun tag.
Per ulteriori approfondimenti consultare il codex alla pagina dedicata a<a href="http://codex.wordpress.org/Function_Reference/get_the_term_list" title="Referenza per il metodo get_the_term_list in wordpress">get_the_term_list</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>669</wp:post_id>
		<wp:post_date>2013-03-26 11:35:00</wp:post_date>
		<wp:post_date_gmt>2013-03-26 10:35:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creare-delle-nuove-categorie-e-tag-con-register_taxonomy-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="add_action"><![CDATA[add_action();]]></category>
		<category domain="funzione_linguaggio" nicename="array"><![CDATA[array();]]></category>
		<category domain="funzione_linguaggio" nicename="get_the_term_list"><![CDATA[get_the_term_list();]]></category>
		<category domain="funzione_linguaggio" nicename="register_taxonomy"><![CDATA[register_taxonomy();]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:51:"http://www.kludge.it/funzione_linguaggio/wordpress/";}s:4:"time";i:1383903781;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cercare files in PHP</title>
		<link>http://www.kludge.it/cercare-files-in-php/</link>
		<pubDate>Wed, 01 May 2013 06:13:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=351</guid>
		<description></description>
		<content:encoded><![CDATA[Se volessimo cercare il percorso e il nome di uno o più files in PHP potremmo utilizzare il metodo glob():
Supponendo di avere una cartella "img" con all'interno una serie di files .jpg e .png potremmo ottenere un array contenente tutti i files in questo modo:
[cc lang="php"]
$images: glob("img/*.{jpg,png}", GLOB_BRACE);
foreach ( $images as $image) {
    echo "$image <br/>";
}
[/cc]
Il flag GLOB_BRACE permette di fornire più opzioni racchiudendole tra parentesi graffe; attenzione al fatto che vengono conteggiati anche gli spazi come caratteri per ciò non è possibile organizzare a proprio piacimento il codice all'interno delle parentesi.
Per ulteriori flags disponibili visitate: http://php.net/manual/en/function.glob.php]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>351</wp:post_id>
		<wp:post_date>2013-05-01 08:13:00</wp:post_date>
		<wp:post_date_gmt>2013-05-01 06:13:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cercare-files-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="glob"><![CDATA[glob();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383834374;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/pwxWh]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/cercare-files-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:56:"Cercare files in PHP http://goo.gl/pwxWh #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:56:"Cercare files in PHP http://goo.gl/pwxWh #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1367388861;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cercare il nome di un file in PHP</title>
		<link>http://www.kludge.it/cercare-il-nome-di-un-file-in-php/</link>
		<pubDate>Tue, 30 Apr 2013 08:56:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=355</guid>
		<description></description>
		<content:encoded><![CDATA[Grazie al metodo <a href="http://www.kludge.it/funzione_linguaggio/php/glob/" title="Il metodo glob(); in PHP">glob();</a> possiamo cercare il percorso di uno o più files, ma se volessimo invece ottenerne solo il nome senza il percorso?
Supponendo di avere una cartella "img" con all'interno una serie di files .jpg e .png potremmo ottenere un array contenente tutti i <strong>nomi dei files e la relativa estensione</strong> utilizzando il metodo <a href="http://www.kludge.it/funzione_linguaggio/php/basename/" title="Il metodo basename(); in PHP">basename();</a>:
[cc lang="php"]
$images: glob("img/*.{jpg,png}", GLOB_BRACE);
foreach ( $images as $image) {
    echo basename($image) . "<br/>";
}
[/cc]
Se volessimo ottenere sono i <strong>nomi dei files SENZA la relativa estensione</strong> potremmo passare un secondo parametro a basename(); contenente il suffisso da eliminare.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>355</wp:post_id>
		<wp:post_date>2013-04-30 10:56:00</wp:post_date>
		<wp:post_date_gmt>2013-04-30 08:56:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cercare-il-nome-di-un-file-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="basename"><![CDATA[basename();]]></category>
		<category domain="funzione_linguaggio" nicename="glob"><![CDATA[glob();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/8ezOU]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/cercare-il-nome-di-un-file-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:69:"Cercare il nome di un file in PHP http://goo.gl/8ezOU #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:69:"Cercare il nome di un file in PHP http://goo.gl/8ezOU #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1367312672;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:69:"Cercare il nome di un file in PHP http://goo.gl/8ezOU #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1367312829;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:69:"Cercare il nome di un file in PHP http://goo.gl/8ezOU #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1367312909;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:54:"http://www.kludge.it/funzione_linguaggio/php/basename/";}s:4:"time";i:1383834374;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ottenere il percorso di directory di un file in PHP</title>
		<link>http://www.kludge.it/ottenere-il-percorso-di-directory-di-un-file-in-php/</link>
		<pubDate>Thu, 02 May 2013 09:10:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=358</guid>
		<description></description>
		<content:encoded><![CDATA[Supponendo di avere alcune cartelle con all'interno una serie di files .jpg e .png potremmo ottenere un array contenente tutti i percorsi delle dei files .jpg o .png utilizzando il metodo dirname():
[cc lang="php"]
$images = glob("*/*.{jpg,png}", GLOB_BRACE);
foreach ( $images as $image) {
    echo dirname($image) . "<br/>";
}
[/cc]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>358</wp:post_id>
		<wp:post_date>2013-05-02 11:10:00</wp:post_date>
		<wp:post_date_gmt>2013-05-02 09:10:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ottenere-il-percorso-di-directory-di-un-file-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="dirname"><![CDATA[dirname();]]></category>
		<category domain="funzione_linguaggio" nicename="glob"><![CDATA[glob();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/k6VML]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/ottenere-il-percorso-di-directory-di-un-file-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:87:"Ottenere il percorso di directory di un file in PHP http://goo.gl/k6VML #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:87:"Ottenere il percorso di directory di un file in PHP http://goo.gl/k6VML #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1367485859;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383834374;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Estrapolare parte di una stringa in PHP</title>
		<link>http://www.kludge.it/estrapolare-parte-di-una-stringa-in-php/</link>
		<pubDate>Fri, 03 May 2013 08:04:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=360</guid>
		<description></description>
		<content:encoded><![CDATA[Se volessimo estrapolare parte di una stringa in PHP potremmo utilizzare il metodo substr(). Tale metodo accetta 3 parametri (di cui il terzo opzionale): il primo e la stringa da tagliare, il secondo &egrave; il punto di partenza ed il terzo &egrave; la lunghezza di caratteri da estrapolare:
[cc lang="PHP"]$string = "Ciao da PHP";
echo substr($string, 0, 4); //Stamperà "Ciao"
echo substr($string, -3) //Stamperà "PHP"[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>360</wp:post_id>
		<wp:post_date>2013-05-03 10:04:00</wp:post_date>
		<wp:post_date_gmt>2013-05-03 08:04:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>estrapolare-parte-di-una-stringa-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="echo"><![CDATA[echo]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="substr"><![CDATA[substr();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383829066;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/yPWgB]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/estrapolare-parte-di-una-stringa-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:75:"Estrapolare parte di una stringa in PHP http://goo.gl/yPWgB #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:75:"Estrapolare parte di una stringa in PHP http://goo.gl/yPWgB #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1367568527;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Eliminare gli spazi all&#039;inizio e alla fine di una stringa in PHP</title>
		<link>http://www.kludge.it/eliminare-gli-spazi-allinizio-e-alla-fine-di-una-stringa-in-php/</link>
		<pubDate>Fri, 19 Apr 2013 07:55:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=379</guid>
		<description></description>
		<content:encoded><![CDATA[Con il metodo trim() possiamo eliminare gli spazi o una serie di caratteri dall'inizio e dalla fine di una stringa:
[cc lang="php"]
$string = "    Ciao mondo        ";
echo $string; // "    Ciao mondo        "
echo trim($string); // "Ciao mondo"
[/cc]
C'&egrave; anche la possibilit&agrave;, come anticipato, di eliminare uno o pi&ugrave; caratteri se sono presenti alla fine o all'inizio, per far ci&ograve; &egrave; sufficiente passare un secondo parametro (opzionale) specificando quali:
[cc lang="php"]
$string = "Ciao mondoz";
echo trim($string, "z"); // "Ciao mondo"
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>379</wp:post_id>
		<wp:post_date>2013-04-19 09:55:00</wp:post_date>
		<wp:post_date_gmt>2013-04-19 07:55:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eliminare-gli-spazi-allinizio-e-alla-fine-di-una-stringa-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="echo"><![CDATA[echo]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="trim"><![CDATA[trim();]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/DHTng]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/eliminare-gli-spazi-allinizio-e-alla-fine-di-una-stringa-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:100:"Eliminare gli spazi all'inizio e alla fine di una stringa in PHP http://goo.gl/DHTng #PHP #webdesign";i:1;s:100:"Eliminare gli spazi all'inizio e alla fine di una stringa in PHP http://goo.gl/DHTng #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383877981;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:100:"Eliminare gli spazi all'inizio e alla fine di una stringa in PHP http://goo.gl/DHTng #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1366359296;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scoprire se una mail è valida in PHP</title>
		<link>http://www.kludge.it/scoprire-se-una-mail-e-valida-in-php/</link>
		<pubDate>Thu, 18 Apr 2013 09:20:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=381</guid>
		<description></description>
		<content:encoded><![CDATA[Ci sono molti modi per scoprire se un input contiene un'e-mail sintatticamente valida ma, a mio avviso, quello pi&ugrave; leggibile e chiaro &egrave;:
[cc lang="php"]
$email = "matt@lessons.com";
$not_email = "matt@lesson";
echo filter_var($email, FILTER_VALIDATE_EMAIL); // true
echo filter_var($not_email, FILTER_VALIDATE_EMAIL); // false
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>381</wp:post_id>
		<wp:post_date>2013-04-18 11:20:00</wp:post_date>
		<wp:post_date_gmt>2013-04-18 09:20:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scoprire-se-una-mail-e-valida-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="echo"><![CDATA[echo]]></category>
		<category domain="funzione_linguaggio" nicename="filter_var"><![CDATA[filter_var();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383840306;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/2yPcK]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/scoprire-se-una-mail-e-valida-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:73:"Scoprire se una mail è valida in PHP http://goo.gl/2yPcK #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:73:"Scoprire se una mail è valida in PHP http://goo.gl/2yPcK #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1366276979;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dividere un array in variabili in PHP</title>
		<link>http://www.kludge.it/dividere-un-array-in-variabili-in-php/</link>
		<pubDate>Wed, 17 Apr 2013 08:24:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=383</guid>
		<description></description>
		<content:encoded><![CDATA[Ci sono vari modi per dividere un array in variabili ma un metodo estremamente rapido ed efficace &egrave; l'utilizzo del costrutto list():
[cc lang="php"]
$arr = array('coca cola', 'nutella', 'mattina');
list($bevanda, $cibo, $quando) = $arr;
echo "Bevo $bevanda e mangio $cibo ogni $quando";
// "Bevo coca cola e mangio nutella ogni mattina
[/cc]
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>383</wp:post_id>
		<wp:post_date>2013-04-17 10:24:00</wp:post_date>
		<wp:post_date_gmt>2013-04-17 08:24:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dividere-un-array-in-variabili-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="array"><![CDATA[array();]]></category>
		<category domain="funzione_linguaggio" nicename="echo"><![CDATA[echo]]></category>
		<category domain="funzione_linguaggio" nicename="list"><![CDATA[list();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383843457;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/BalNO]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/dividere-un-array-in-variabili-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:73:"Dividere un array in variabili in PHP http://goo.gl/BalNO #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:73:"Dividere un array in variabili in PHP http://goo.gl/BalNO #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1366187150;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Connettersi ad un Database in PHP</title>
		<link>http://www.kludge.it/connettersi-ad-un-database-in-php/</link>
		<pubDate>Tue, 16 Apr 2013 06:03:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=387</guid>
		<description></description>
		<content:encoded><![CDATA[Ci sono vari metodi (come quasi per qualsiasi operazione in PHP) per connettersi ad un DB.
Uno tra i più utilizzati per i DB MySQL era il metodo mysql_connect ma, come ci spiega chiaramente il manuale ufficiale di php.net:
<pre>This extension is deprecated as of PHP 5.5, and will be removed in the future. Instead, the MySQLi or PDO_MySQL extension should be used. 
See also MySQL: choosing an API guide and related FAQ for more information. Alternatives to this function include:</pre>
Dobbiamo quindi utilizzare un metodo decisamente più versatile e corretto: <strong>PHP Data Objects</strong>.
[cc lang="php"]
$data_source_name = 'mysql:host=localhost;dbname=nome_db';
$username = 'root';
$password = 'password';
try {
    $conn = new PDO($data_source_name, $username, $password);
} catch(PDOException $e) {
    echo 'Connessione fallita: ' . $e->getMessage();
}
[/cc]
Come possiamo facilmente intuire il costruttore di PDO accetta 3 parametri: il primo &egrave; una stringa contenente il driver db, nell'esempio MySQL, (consultabili a <a href="http://php.net/manual/en/pdo.drivers.php" title="PDO Drivers">http://php.net/manual/en/pdo.drivers.php</a>) il secondo e il terzo, entrambi opzionali, contengono rispettivamente l'username e la password per accedere al DB specificato precedentemente.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>387</wp:post_id>
		<wp:post_date>2013-04-16 08:03:00</wp:post_date>
		<wp:post_date_gmt>2013-04-16 06:03:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>connettersi-ad-un-database-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="echo"><![CDATA[echo]]></category>
		<category domain="funzione_linguaggio" nicename="pdo"><![CDATA[PDO / PHP Data Objects]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383871853;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/YwAfq]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/connettersi-ad-un-database-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:69:"Connettersi ad un Database in PHP http://goo.gl/YwAfq #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:69:"Connettersi ad un Database in PHP http://goo.gl/YwAfq #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1366093091;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Visualizzare tutti gli errori di una connessione</title>
		<link>http://www.kludge.it/visualizzare-tutti-gli-errori-di-una-connessione/</link>
		<pubDate>Wed, 10 Apr 2013 07:41:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=397</guid>
		<description></description>
		<content:encoded><![CDATA[Durante lo sviluppo &egrave; molto, molto utile capire se ci sono errori nelle connessioni ai databases, a tal proposito ci vengono in aiuto gli attributi applicabili alla nostra connessione PDO:
[cc lang="php"]
$data_source_name = 'mysql:host=localhost;dbname=nome_db';
$username = 'root';
$password = 'password';
try {
    $conn = new PDO($data_source_name, $username, $password);
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch(PDOException $e) {
    echo 'Connessione fallita: ' . $e->getMessage();
}
[/cc]
Oltre alla classica stringa di connessione come vedete, possiamo impostare degli attributi con il metodo setAttribute() che accetta due parametri:
[cc lang="php"]
setAttribute(ATTRIBUTO, VALORE_ATTRIBUTO);
[/cc]
In questo caso abbiamo specificato per l'attributo PDO:ATTR_ERRMODE il valore PDO::ERRMODE_EXCEPTION che genera delle eccezioni nel caso di errori; di default, invece, il valore sarebbe stato PDO::ERRMODE_SILENT.
L'intera lista di attributi &egrave; consultabile a <a href="http://php.net/manual/en/pdo.setattribute.php" title="PDO setAttribute">http://php.net/manual/en/pdo.setattribute.php</a>).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>397</wp:post_id>
		<wp:post_date>2013-04-10 09:41:00</wp:post_date>
		<wp:post_date_gmt>2013-04-10 07:41:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visualizzare-tutti-gli-errori-di-una-connessione</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="echo"><![CDATA[echo]]></category>
		<category domain="funzione_linguaggio" nicename="pdo"><![CDATA[PDO / PHP Data Objects]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-setattribute"><![CDATA[PDO:: setAttribute;]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/vIt7w]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/visualizzare-tutti-gli-errori-di-una-connessione/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:84:"Visualizzare tutti gli errori di una connessione http://goo.gl/vIt7w #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383902042;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Effettuare una query sql in PHP</title>
		<link>http://www.kludge.it/effettuare-una-query-sql-in-php/</link>
		<pubDate>Sun, 31 Mar 2013 07:51:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=399</guid>
		<description></description>
		<content:encoded><![CDATA[Una volta che &egrave; stata stabilita una connessione ad un database possiamo lanciare una query utilizzando il metodo query() della nostra istanza di PDO.
Effettuiamo la connessione e lanciamo la query ricordandoci di racchiudere il tutto tra un try-catch di modo da monitorare eventuali errori:
[cc lang="php"]
$data_source_name = 'mysql:host=localhost;dbname=nome_db';
$username = 'root';
$password = 'password';
try {
    $conn = new PDO($data_source_name, $username, $password);
    $results = $conn->query("SELECT * FROM nome_tabella");
} catch(PDOException $e) {
    echo 'Connessione fallita: ' . $e->getMessage();
}
[/cc]
Il metodo PDO::query restituisce un oggetto o il valore booleano FALSE in caso la query lanciata fallisca.
Per maggiori informazioni fare <strong>sempre</strong> riferimento a <a href="http://php.net/manual/en/pdo.query.php" title="PDO::query">http://php.net/manual/en/pdo.query.php</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>399</wp:post_id>
		<wp:post_date>2013-03-31 09:51:00</wp:post_date>
		<wp:post_date_gmt>2013-03-31 07:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>effettuare-una-query-sql-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="pdo"><![CDATA[PDO / PHP Data Objects]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-query"><![CDATA[PDO:: query();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="sql"><![CDATA[SQL]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383902042;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/aqd9C]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/effettuare-una-query-sql-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:67:"Effettuare una query sql in PHP http://goo.gl/aqd9C #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:67:"Effettuare una query sql in PHP http://goo.gl/aqd9C #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364716715;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scoprire se una funzione è stata dichiarata in PHP</title>
		<link>http://www.kludge.it/scoprire-se-una-funzione-stata-dichiarata/</link>
		<pubDate>Tue, 02 Apr 2013 06:53:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=496</guid>
		<description></description>
		<content:encoded><![CDATA[Tra i vari metodi per effettuare dei controlli uno, sicuramente molto interessante, &egrave; quello utilizzato per verificare l'esistenza di una funzione: function_exists().
Questo metodo accetta un parametro (stringa) contenente il nome della funzione e restituisce un valore booleano che sar&agrave; TRUE se la funzione di cui abbiamo passato il nome esiste e FALSE in caso contrario:
[cc lang="php"]
function welcome_user ($name) {
    echo "$name benvenuto nel nostro sito";
}
if (function_exists("welcome_user") {
    welcome_user("Matt");
}
[/cc]
Nonostante l'esempio sia piuttosto senza senso dovrebbe far capire chiaramente l'utilizzo.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>496</wp:post_id>
		<wp:post_date>2013-04-02 08:53:00</wp:post_date>
		<wp:post_date_gmt>2013-04-02 06:53:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scoprire-se-una-funzione-stata-dichiarata</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="function_exists"><![CDATA[function_exists();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383904678;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/WPCVa]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/scoprire-se-una-funzione-stata-dichiarata/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:87:"Scoprire se una funzione è stata dichiarata in PHP http://goo.gl/WPCVa #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:87:"Scoprire se una funzione è stata dichiarata in PHP http://goo.gl/WPCVa #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364887453;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Aggiungere un namespace in PHP</title>
		<link>http://www.kludge.it/aggiungere-un-namespace-in-php/</link>
		<pubDate>Mon, 01 Apr 2013 09:46:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=513</guid>
		<description></description>
		<content:encoded><![CDATA[Se i nostri progetti iniziano a diventare piuttosto grossi potremmo incorrere in situazioni spiacievoli quali utilizzare come nome di una nostra funzione un nome già utilizzato per una funzione in una libreria che abbiamo importato.
Per ovviare a tale problema potremmo semplicemente modificare i nomi delle funzioni preponendoci un nostro prefisso (ed &egrave; cos&igrave; che veniva gestita la cosa prima di PHP 5.3) ma esiste un modo pi&ugrave; corretto:
Supponiamo di avere un file functions.php:
[cc lang="php"]
<?php
function connect() {
    return 'connecting';
}
?>
[/cc]
Tale file contiene una funcione con un nome molto generico (connect()), se volessimo importare il file function.php nel nostro progetto ci sarebbero buone probabilit&agrave; che tale nome sia gi&agrave; utilizzato da un'altra libreria; per ovviare a ci&ograve; dichiariamo il namespace:
[cc lang="php"]
<?php namespace AppDB;
function connect() {
    return 'connecting';
}
?>
[/cc]
NB: Pensate alla struttura del namespace esattamente come alla gestione delle cartelle o degli URL: i namespace hanno una gestione gerarchica ed &egrave; possibile suddividerli anche all'interno dello stesso.

Richiamiamo ora nel nostro file index.php il file functions.php e la sua funzione connect():
[cc lang="php"]
<?php
include 'functions.php';
$conn = AppDB\connect();
echo $conn; //Stamperà 'Connecting'
?>
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>513</wp:post_id>
		<wp:post_date>2013-04-01 10:46:00</wp:post_date>
		<wp:post_date_gmt>2013-04-01 09:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aggiungere-un-namespace-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/rtkyP]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/aggiungere-un-namespace-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:66:"Aggiungere un namespace in PHP http://goo.gl/rtkyP #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:66:"Aggiungere un namespace in PHP http://goo.gl/rtkyP #PHP #webdesign";s:5:"error";s:311:""403 Forbidden: The request is understood, but it has been refused". Questo codice è usato quando le richieste sono comprese ma rifiutate da Twitter. Le ragioni di ciò includono anche: Troppi Tweet creati in breve tempo oppure lo stesso Tweet è stato inviato due volte. Questo errore non è di WP to Twitter.";s:4:"code";i:403;s:9:"timestamp";i:1364810372;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:66:"Aggiungere un namespace in PHP http://goo.gl/rtkyP #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364810372;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383852471;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Funzioni di aiuto per la connessione al DB in PHP</title>
		<link>http://www.kludge.it/funzioni-di-aiuto-per-la-connessione-al-db-in-php/</link>
		<pubDate>Mon, 01 Apr 2013 08:57:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=515</guid>
		<description></description>
		<content:encoded><![CDATA[Dopo aver analizzato tutti i vari passaggi per connetterci ad un DB, effettuare delle query etc. possiamo riassumere quanto imparato in delle funzioni di aiuto che potrebbero essere racchiuse in un file functions.php ed utilizzate ogni qual volta ne avessimo la necessit&agrave;.
La prima &egrave; sicuramente la connessione al DB:
[cc lang="php"]
function kludge_connect($config)
{
	try {
		$conn = new PDO("mysql:host={$config['host']};dbname={$config['dbname']}",
						$config['username'],
						$config['password']);

		$conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

		return $conn;
	} catch(Exception $e) {
		return false;
	}
}
[/cc]

Tale funzione verr&agrave; richiamata in questo modo in index.php:
[cc lang="php"]
require 'functions.php';
$config = array(
        'host' => 'localhost',
      'dbname' => 'test_db',
    'username' => 'root',
    'password' => '123123'
);
kludge_connect($config);
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>515</wp:post_id>
		<wp:post_date>2013-04-01 10:57:00</wp:post_date>
		<wp:post_date_gmt>2013-04-01 08:57:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>funzioni-di-aiuto-per-la-connessione-al-db-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="array"><![CDATA[array();]]></category>
		<category domain="funzione_linguaggio" nicename="pdo"><![CDATA[PDO / PHP Data Objects]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-setattribute"><![CDATA[PDO:: setAttribute;]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383827867;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:66:"Aggiungere un namespace in PHP http://goo.gl/rtkyP #PHP #webdesign";i:1;s:85:"Funzioni di aiuto per la connessione al DB in PHP http://goo.gl/L1Xfz #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/L1Xfz]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/funzioni-di-aiuto-per-la-connessione-al-db-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:85:"Funzioni di aiuto per la connessione al DB in PHP http://goo.gl/L1Xfz #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364806828;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Funzioni di aiuto per recuperare tutti i valori di una tabella in PHP</title>
		<link>http://www.kludge.it/funzioni-di-aiuto-per-recuperare-tutti-i-valori-di-una-tabella-in-php/</link>
		<pubDate>Sun, 31 Mar 2013 06:19:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=521</guid>
		<description></description>
		<content:encoded><![CDATA[Dopo aver analizzato tutti i vari passaggi per connetterci ad un DB, effettuare delle query etc. possiamo riassumere quanto imparato in delle funzioni di aiuto che potrebbero essere racchiuse in un file functions.php ed utilizzate ogni qual volta ne avessimo la necessit&agrave;.
Dopo aver effettuato la connessione al DB ci &egrave; utile recuperare tutti i dati contenuti in una tabella:
[cc lang="php"]
function kludge_get($tableName, $conn, $limit = 10)
{
	try {
		$result = $conn->query("SELECT * FROM $tableName LIMIT $limit");

		return ( $result->rowCount() > 0 )
			? $result
			: false;
	} catch(Exception $e) {
		return false;
	}

}
[/cc]

Tale funzione verr&agrave; richiamata in questo modo in index.php:
[cc lang="php"]
require 'functions.php';
$results = kludge_get('user', $conn, 5);
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>521</wp:post_id>
		<wp:post_date>2013-03-31 08:19:00</wp:post_date>
		<wp:post_date_gmt>2013-03-31 06:19:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>funzioni-di-aiuto-per-recuperare-tutti-i-valori-di-una-tabella-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="pdo"><![CDATA[PDO / PHP Data Objects]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-query"><![CDATA[PDO:: query();]]></category>
		<category domain="funzione_linguaggio" nicename="pdo-rowcount"><![CDATA[PDO:: rowCount();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383852471;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/YKwNR]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/funzioni-di-aiuto-per-recuperare-tutti-i-valori-di-una-tabella-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:105:"Funzioni di aiuto per recuperare tutti i valori di una tabella in PHP http://goo.gl/YKwNR #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:105:"Funzioni di aiuto per recuperare tutti i valori di una tabella in PHP http://goo.gl/YKwNR #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364711811;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Effettuare un URL redirect in PHP</title>
		<link>http://www.kludge.it/effettuare-un-url-redirect-in-php/</link>
		<pubDate>Wed, 03 Apr 2013 06:41:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=524</guid>
		<description></description>
		<content:encoded><![CDATA[Potremmo trovarci a dover effettuare un redirect in PHP, come fare?
Esiste un costrutto, con molte sfaccettature per la verit&agrave; che ci permette con una dozzina di lettere di effettuare un redirect immediato: header();
[cc lang="php"]
<?php
header('location:http://www.google.com');
exit;
?>
[/cc]
Com'&egrave; piuttosto palese &egrave; sufficiente sostituire 'http://www.google.com' con l'indirizzo desiderato.

<strong>NB:</strong> &Egrave; necessario che il costrutto header(); venga eseguito prima di qualsiasi output, l'errore pi&ugrave; comune &egrave; infatti quello che eseguirlo magari dopo un include o un tag html, in tal caso, infatti, &egrave; "Warning: Cannot modify header information - headers already sent by...".]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>524</wp:post_id>
		<wp:post_date>2013-04-03 08:41:00</wp:post_date>
		<wp:post_date_gmt>2013-04-03 06:41:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>effettuare-un-url-redirect-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="header"><![CDATA[header();]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="senza-categoria"><![CDATA[Senza categoria]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:52:"http://www.kludge.it/funzione_linguaggio/php/header/";}s:4:"time";i:1383883702;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/IPrRJ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/effettuare-un-url-redirect-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:81:"Effettuare un URL redirect in PHP http://goo.gl/IPrRJ #Senza categoria #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:81:"Effettuare un URL redirect in PHP http://goo.gl/IPrRJ #Senza categoria #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364973912;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Utilizzare gli snippet in SUBLIME TEXT 2</title>
		<link>http://www.kludge.it/utilizzare-gli-snippet-in-sublime-text-2/</link>
		<pubDate>Thu, 04 Apr 2013 10:44:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=526</guid>
		<description></description>
		<content:encoded><![CDATA[Tutti sappiamo cosa sono gli snippet giusto? Beh, per chi non lo sapesse sono fondamentalmente dei frammenti di codice che, in questo caso, vengono inseriti nel nostro documento digitandone semplicemente un'abbreviazione.
Digitando, ad esempio "if"+TAB otterremo:
[cc lang="php"]
<?php if (condition): ?>
	
<?php endif ?>
[/cc]
Utile no?
Come facciamo per&ograve; a scoprire quali snippet sono disponibili? &Egrave; sufficiente cliccare su "Tools"->"Snippet" (o pi&ugrave; semplicemente &#8984; + &#8679; + P e digitare "Snippet") e verranno visualizzati tutti gli snippet disponibili per la sintassi attualmente selezionata in "View" -> "Syntax".

NB: &Egrave; possibile anche creare dei propri snippet o utilizzare programmi validissimi come <a href="http://smilesoftware.com/TextExpander/" title="Text Expander per la gestione degli snippet">Text Expander</a>, programma che, personalmente, adoro.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>526</wp:post_id>
		<wp:post_date>2013-04-04 11:44:00</wp:post_date>
		<wp:post_date_gmt>2013-04-04 10:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>utilizzare-gli-snippet-in-sublime-text-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="shortcut"><![CDATA[Shortcut]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383744981;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Commentare una o più righe in SUBLIME TEXT 2</title>
		<link>http://www.kludge.it/commentare-una-o-piu-righe-in-sublime-text-2/</link>
		<pubDate>Fri, 05 Apr 2013 07:20:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=530</guid>
		<description></description>
		<content:encoded><![CDATA[&Egrave; molto utile, dato che capita decine e decine di volte al giorno, avere uno shortcut per commentare/decommentare (toggle) una o pi&ugrave; righe di codice senza preoccuparci minimamente del linguaggio che stiamo utilizzando dato che pensar&agrave; a tutto SUBLIME TEXT 2.
Per fare ci&ograve; &egrave; sufficiente posizionare il cursore su una o pi&ugrave; righe o selezionarle e premere:
&#8984; + /
che, trasformato nella nostra tastiera italiana sar&agrave;:
&#8984; + &#8679; + 7]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>530</wp:post_id>
		<wp:post_date>2013-04-05 08:20:00</wp:post_date>
		<wp:post_date_gmt>2013-04-05 07:20:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>commentare-una-o-piu-righe-in-sublime-text-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="shortcut"><![CDATA[Shortcut]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383899772;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Manipolare la voce del menù della pagina corrente in WORDPRESS</title>
		<link>http://www.kludge.it/manipolare-la-voce-del-menu-della-pagina-corrente-in-wordpress/</link>
		<pubDate>Thu, 04 Apr 2013 08:11:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=534</guid>
		<description></description>
		<content:encoded><![CDATA[In Wordpress, come in tutti gli altri CMS e linguaggi, non si finisce mai di imparare e alcune cose davvero minime a volte possono richiedere del tempo per essere trovate.
A tal proposito potrebbe tornarci utile capire che classi/ids wordpress applica di default ai suoi elementi per capire come possiamo manipolarli nei nostri CSS:
<img src="http://localhost/appunti//wp-content/uploads/Schermata-2013-01-19-a-12.05.34.png" alt="" title="Schermata 2013-01-19 a 12.05.34" width="269" height="139" class="alignnone size-full wp-image-535" />
In un menù tipico avremo probabilmente la necessit&agrave; di modificare lo stile della voce del men&ugrave; della pagina che stiamo attualmente visualizzando, per fare ci&ograve; possiamo utilizzare la classe "current_page_item":
[cc lang="css"]
.current_page_item a {
  color: #bbbbbb;
  border-bottom: 1px dotted #ccc;
}
[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>534</wp:post_id>
		<wp:post_date>2013-04-04 09:11:00</wp:post_date>
		<wp:post_date_gmt>2013-04-04 08:11:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>manipolare-la-voce-del-menu-della-pagina-corrente-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[116]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/LwOiW]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/manipolare-la-voce-del-menu-della-pagina-corrente-in-wordpress/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:105:"Manipolare la voce del menù della pagina corrente in WORDPRESS http://goo.gl/LwOiW #Wordpress #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:51:"http://www.kludge.it/funzione_linguaggio/wordpress/";}s:4:"time";i:1383903781;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS</title>
		<link>http://www.kludge.it/creare-una-custom-meta-box-per-salvare-dei-dati-personalizzati-in-wordpress/</link>
		<pubDate>Wed, 03 Apr 2013 08:48:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=682</guid>
		<description></description>
		<content:encoded><![CDATA[Quando pubblichiamo degli articoli in wordpress siamo abituati alle meta boxes, magari senza sapere che si chiamano così:
La meta box che non manca mai &egrave; quella relativa alla pubblicazione (in alto a destra) ma poi c'è anche la meta box dell'excerpt, delle versioni, dei custom fields e molte altre.
Per chi ancora non lo sapesse possiamo intervenire nella pagina della creazione degli articoli creando delle metaboxes totalmente custom con dei dati che vogliamo noi, con delle immagini o qualsiasi cosa, a tal proposito costruiremo una meta box contenente un input di testo con il metodo add_meta_box().

Come le altre modifiche al core di wordpress, anche questa andr&agrave; eseguita all'interno del file functions.php del nostro tema (o in alternativa dovr&agrave; essere sviluppata come plugin):
[cc lang="php"]
//verifichiamo che la funzione venga lanciata al momento appropriato
add_action('add_meta_boxes', function() {
	add_meta_box(
	'kldg_snippet_info', // id della meta box
	'Snippet info', // titolo della meta box
	'kldg_snippet_info_cb', //nome della callback function da eseguire nella metabox
	'snippet', // nome del post type al quale aggiungere la meta box
	'normal', // dove posizionare la metabox (normal, advanced o side)
	'high' // priorità della MB, dove verrà posizionata (high, core, default o low)
	);
});
[/cc]
Come vediamo il metodo add_meta_box() accetta una serie di parametri (consultabili dettagliatamente nel codex nella <a href="http://codex.wordpress.org/Function_Reference/add_meta_box" title="Referenza add_meta_box nel codex di wordpress">pagina di referenza</a>): il primo &egrave; l'id univoco (ed &egrave; per questo che abbiamo impostato un prefisso) della meta box, il secondo &egrave; il titolo della meta box, il terzo &egrave; la callback function, o il suo nome, contenente ci&ograve; che verr&agrave; effettivamente visualizzato all'interno della metabox (spiegato qui di seguito), il nome del post type nel quale verr&agrave; utilizzata questa meta box, dove verr&agrave; posizionata la meta box all'interno della pagina di modifica/aggiunta dei posts ed infine la priorit&agrave; cio&egrave; quanto pi&ugrave; in alto verr&agrave; posizionata.

Fatto ci&ograve; se salviamo il file functions.php e visualizziamo la pagina di aggiunta/modifica dei post (in questo caso del nostro custom post type chiamato "snippet") visualizzeremo il box senza alcun contenuto.
Provvediamo dunque a riempire il box:
[cc lang="php"]
<?php
function kldg_snippet_info_cb() { 
	// recupero del informazioni del post corrente
	global $post;
	//ottengo il valore del meta box se già salvato
	$url = get_post_meta($post->ID, 'kldg_url', true);
	// proteggo la sessione aggiungendo dei campi nascosti
	wp_nonce_field(__FILE__, 'kldg_nonce');
	?>
	<label for="kldg_url">URL di riferimento</label>
	<input type="text" name="kldg_url" id="kldg_url" class="widefat" value="<?php echo $url; ?>">
	<?php
}
[/cc]
Creiamo la funzione il cui nome &egrave; stato passato come parametro ad add_meta_box() che, oltre a recuperare le informazioni riguardanti il post corrente e inserire dei campi nascosti per motivi di sicurezza, altro non fa che inserire un input di testo ed una etichetta con del semplicissimo html.
Come potete notare abbiamo recuperato le informazioni riguardanti il post corrente per poter visualizzare all'interno dell'input di testo il valore che verr&agrave; salvato; gi&agrave; perch&egrave; provando ora a pubblicare la pagina avendo inserito qualsiasi valore all'interno della nostra meta box noteremmo che, tale valore, non viene archiviato da nessuna parte.
Salviamolo quindi:
[cc lang="php"]
// verifichiamo che la funzione venga lanciata solamente al momento del salvataggio
add_action('save_post', function () {
	// ottengo le informazioni relative al post
	global $post;
	// non salvare la metabox con l'autosalvataggio di wordpress
	if ( defined('DOING_AUTOSAVE') && DOING_AUTOSAVE ) { 
		return; 
	}

	// check per la sicurezza:
	// verifichiamo che i campi nascosti inseriti con wp_nonce_field()
	// siano corretti, in caso contrario non effettuiamo il salvataggio
	if ($_POST && wp_verify_nonce($_POST['kldg_nonce'], __FILE__) ) {
		// verifico che sia stato inserito un valore nel form
		if ( isset($_POST['kldg_url']) ) {
			// salvo le informazioni contenute nella MB
			update_post_meta($post->ID, 'kldg_url', $_POST['kldg_url']);
		}
	}	
});
[/cc]
Con questo passaggio, gi&agrave; sufficientemente commentato, verifichiamo che la metabox non venga salvata con l'auto salvataggio ma solamente quando pubblicheremo o salveremo come bozza il post, verifichiamo i campi nascosti inseriti precedentemente (per ragioni di sicurezza) e salviamo, senza macchinose query e tabelle create ad hoc nel database, il nostro imput di testo con il metodo update_post_meta() di wordpress che richiede tre parametri: l'id del post (recuperato tramite la global $post), un id impostato al momento del dato (per convenzione utilizzeremo lo stesso del campo di testo) e il valore da associarci.

<img src="/wp-content/uploads/wordpress-metabox.png" alt="custom meta box di esempio" title="Custom meta box" width="289" height="98" class="aligncenter size-full wp-image-690" />

In questo post abbiamo utilizzato numerosi metodi di wordpress che potrebbero necessitare di qualche approfondimento:
<ul>
	<li><a href="http://codex.wordpress.org/Function_Reference/add_action" title="Referenza metodo add_action() di wordpress">http://codex.wordpress.org/Function_Reference/add_action</a></li>
	<li><a href="http://codex.wordpress.org/Function_Reference/add_meta_box" title="Referenza metodo add_meta_box() di wordpress">http://codex.wordpress.org/Function_Reference/add_meta_box</a></li>
	<li><a href="http://codex.wordpress.org/Function_Reference/get_post_meta" title="Referenza metodo add_post_meta() di wordpress">http://codex.wordpress.org/Function_Reference/get_post_meta</a></li>
	<li><a href="http://codex.wordpress.org/Function_Reference/wp_nonce_field" title="Referenza metodo wp_nonce_field() di wordpress">http://codex.wordpress.org/Function_Reference/wp_nonce_field</a></li>
	<li><a href="http://codex.wordpress.org/Function_Reference/wp_verify_nonce" title="Referenza metodo wp_verify_nonce() di wordpress">http://codex.wordpress.org/Function_Reference/wp_verify_nonce</a></li>
	<li><a href="http://codex.wordpress.org/Function_Reference/update_post_meta" title="Referenza metodo upadate_post_meta() di wordpress">http://codex.wordpress.org/Function_Reference/update_post_meta</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>682</wp:post_id>
		<wp:post_date>2013-04-03 10:48:00</wp:post_date>
		<wp:post_date_gmt>2013-04-03 08:48:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creare-una-custom-meta-box-per-salvare-dei-dati-personalizzati-in-wordpress</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="add_action"><![CDATA[add_action();]]></category>
		<category domain="funzione_linguaggio" nicename="add_meta_box"><![CDATA[add_meta_box();]]></category>
		<category domain="funzione_linguaggio" nicename="get_post_meta"><![CDATA[get_post_meta();]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="update_post_meta"><![CDATA[update_post_meta();]]></category>
		<category domain="category" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wordpress"><![CDATA[Wordpress]]></category>
		<category domain="funzione_linguaggio" nicename="wp_nonce_field"><![CDATA[wp_nonce_field();]]></category>
		<category domain="funzione_linguaggio" nicename="wp_verify_nonce"><![CDATA[wp_verify_nonce();]]></category>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/6cCUO]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/creare-una-custom-meta-box-per-salvare-dei-dati-personalizzati-in-wordpress/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:117:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS http://goo.gl/6cCUO #Wordpress #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:117:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS http://goo.gl/6cCUO #Wordpress #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364982585;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:117:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS http://goo.gl/6cCUO #Wordpress #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364982586;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:71:"Creare delle nuove categorie e tag con register_taxonomy() in WORDPRESS";s:51:"http://www.kludge.it/funzione_linguaggio/wordpress/";}s:4:"time";i:1383901602;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Simone]]></wp:comment_author>
			<wp:comment_author_email>simone.montaresi@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>79.43.57.196</wp:comment_author_IP>
			<wp:comment_date>2013-04-13 10:58:04</wp:comment_date>
			<wp:comment_date_gmt>2013-04-13 08:58:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[MI dite una cosa? Io dati salvati così, di un meta box creato da me, dove vengono salvati nel db?]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365843484.5441009998321533203125;s:7:"message";s:35:"Akismet ha ripulito questo commento";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365846213.0113201141357421875;s:7:"message";s:53:"admin ha modificato lo stato del commento in approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>curromatteo@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>94.36.12.20</wp:comment_author_IP>
			<wp:comment_date>2013-04-13 12:01:36</wp:comment_date>
			<wp:comment_date_gmt>2013-04-13 10:01:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Se non erro i dati sono salvati all'interno della tabella wp_postmeta però vengono serializzati per cui non è possibile, di default, effettuare delle query dirette se non attraverso le funzioni di wordpress...
Diciamo che, comunque, è sconsigliabile modificare la struttura del database a meno che non si sappia esattamente cosa si sta facendo :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>12</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1365847296.8825509548187255859375;s:7:"message";s:35:"Akismet ha ripulito questo commento";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[Alessandro]]></wp:comment_author>
			<wp:comment_author_email>info@a2area.it</wp:comment_author_email>
			<wp:comment_author_url>http://www.a2area.it</wp:comment_author_url>
			<wp:comment_author_IP>82.52.1.214</wp:comment_author_IP>
			<wp:comment_date>2013-04-17 19:38:27</wp:comment_date>
			<wp:comment_date_gmt>2013-04-17 17:38:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Complimenti per articolo e blog! Guida davvero esaustiva!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366220308.024197101593017578125;s:7:"message";s:35:"Akismet ha ripulito questo commento";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1366220567.8852899074554443359375;s:7:"message";s:53:"admin ha modificato lo stato del commento in approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Verificare compatibilità dei browser di HTML5, CSS3, SVG e altri </title>
		<link>http://www.kludge.it/verificare-compatibilita-dei-browser-di-html5-css3-svg-e-altri/</link>
		<pubDate>Tue, 02 Apr 2013 08:38:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti/?p=695</guid>
		<description></description>
		<content:encoded><![CDATA[Quante volte avete trovato ottimo comando CSS, entusiasi l'avete utilizzato ma andando a verificare nel browser... niente, non funzionava!
Lampo di genio, tornate nel vostro editor di testo e "che stupido avevo dimenticato i prefix", salvate, tornate nel browser... niente, non funziona.
Scoprite magari per caso che era un Opera-backed project e che quindi era supportato solo da opera.
Bene, per non scoprir pi&ugrave; "per caso" &egrave; possibile utilizzare <a href="http://caniuse.com/" title="Can I use? compatibilit&agrave; tra browser">caniuse.com</a> che vi permette di verificare la compatibilit&agrave; cross browser di moltissimi comandi CSS3, HTML5, SVG e altri.
<a href="http://caniuse.com/"><img src="http://localhost/appunti/wp-content/uploads/Schermata-2013-01-30-a-17.28.29.png" alt="" title="Can I use? compatibilità cross browser" width="576" height="445" class="aligncenter size-full wp-image-697" /></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>695</wp:post_id>
		<wp:post_date>2013-04-02 09:38:00</wp:post_date>
		<wp:post_date_gmt>2013-04-02 08:38:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>verificare-compatibilita-dei-browser-di-html5-css3-svg-e-altri</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="altro"><![CDATA[Altro]]></category>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383720276;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/z97UI]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/verificare-compatibilita-dei-browser-di-html5-css3-svg-e-altri/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:103:"Verificare compatibilità dei browser di HTML5, CSS3, SVG e altri http://goo.gl/z97UI #Altro #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:103:"Verificare compatibilità dei browser di HTML5, CSS3, SVG e altri http://goo.gl/z97UI #Altro #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364893429;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:103:"Verificare compatibilità dei browser di HTML5, CSS3, SVG e altri http://goo.gl/z97UI #Altro #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1364893429;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Scoprire se un file esiste in PHP</title>
		<link>http://www.kludge.it/scoprire-se-un-file-esiste-in-php/</link>
		<pubDate>Mon, 06 May 2013 07:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=262</guid>
		<description></description>
		<content:encoded><![CDATA[Se volessimo scoprire se un file esiste, avendone il percorso ed il nome, potremmo utilizzare il metodo file_exists():
[cc lang="PHP"]$file = 'percorso/di/file.txt';
if ( file_exists($file) {
    echo "Il file $file esiste";
} else {
    echo "Il file $file non esiste";
}[/cc]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>262</wp:post_id>
		<wp:post_date>2013-05-06 09:00:00</wp:post_date>
		<wp:post_date_gmt>2013-05-06 07:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>scoprire-se-un-file-esiste-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="echo"><![CDATA[echo]]></category>
		<category domain="funzione_linguaggio" nicename="file_exists"><![CDATA[file_exists();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383830356;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/yAi6L]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/scoprire-se-un-file-esiste-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:69:"Scoprire se un file esiste in PHP http://goo.gl/yAi6L #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:69:"Scoprire se un file esiste in PHP http://goo.gl/yAi6L #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1367823930;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Aprire un file locale o remoto in PHP</title>
		<link>http://www.kludge.it/aprire-un-file-locale-o-remoto-in-php/</link>
		<pubDate>Tue, 07 May 2013 06:03:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=264</guid>
		<description></description>
		<content:encoded><![CDATA[Se volessimo aprire un file, che sia in locale o in remoto, con PHP potremmo utilizzare il metodo fopen():
[cc lang="php"]$file = '/percorso/di/file.txt';
$handle = fopen($file, r+);
fclose($handle);[/cc]
Il metodo fopen() accetta vari parametri ma, tipicamente, vengono specificati i primi due: il primo, com'è facilmente intuibile è l'indirizzo del file; il secondo è il metodo con il quale viene aperto il file:

<table>
<thead>
<tr>
<th>Modo</th>
<th>Descrizione</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>'r'</em></td>
<td>Apre il file in sola lettura e posiziona il puntatore all'inizio del file.</td>
</tr>
<tr>
<td><em>'r+'</em></td>
<td>Apre il file in lettura e scrittura e posiziona il puntatore all'inizio del file.</td>
</tr>
<tr>
<td><em>'w'</em></td>
<td>Apre il file in sola scrittura, posiziona il puntatore all'inizio del file e ne cancella tutto il contenuto. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'w+'</em></td>
<td>Apre il file in lettura e scrittura, posiziona il puntatore all'inizio del file e ne cancella tutto il contenuto. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'a'</em></td>
<td>Apre il file in sola scrittura e posiziona il puntatore alla fine del file. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'a+'</em></td>
<td>Apre il file in lettura e scrittura e posiziona il puntatore alla fine del file. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'x'</em></td>
<td>Crea e apre il file in sola scrittura e posiziona il puntatore all'inizio del file. Se il file esiste già il metodo fopen() ritornerà FALSE e genererà un errore E_WARNING.</td>
</tr>
<tr>
<td><em>'x+'</em></td>
<td>Crea e apre il file in lettura e scrittura e posiziona il puntatore all'inizio del file. Se il file esiste già il metodo fopen() ritornerà FALSE e genererà un errore E_WARNING.</td>
</tr>
<tr>
<td><em>'c'</em></td>
<td>Apre il file in sola scrittura e posiziona il puntatore all'inizio del file mantenendone il contenuto (l'opposto di w). Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'c+'</em></td>
<td>Apre il file in lettura e scrittura e posiziona il puntatore all'inizio del file mantenendone il contenuto (l'opposto di w+). Se il file non esiste viene creato.</td>
</tr>
</tbody>
</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>264</wp:post_id>
		<wp:post_date>2013-05-07 08:03:00</wp:post_date>
		<wp:post_date_gmt>2013-05-07 06:03:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>aprire-un-file-locale-o-remoto-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="fclose"><![CDATA[fclose();]]></category>
		<category domain="funzione_linguaggio" nicename="fopen"><![CDATA[fopen();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383812315;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/xEmJe]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/aprire-un-file-locale-o-remoto-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:73:"Aprire un file locale o remoto in PHP http://goo.gl/xEmJe #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:73:"Aprire un file locale o remoto in PHP http://goo.gl/xEmJe #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1367907325;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Chiudere un file in PHP</title>
		<link>http://www.kludge.it/chiudere-un-file-in-php/</link>
		<pubDate>Wed, 08 May 2013 09:36:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://localhost/appunti//?p=272</guid>
		<description></description>
		<content:encoded><![CDATA[Per chiudere un file precedentemente aperto con fopen() in PHP possiamo utilizzare il metodo fclose():
[cc lang="php"]$file = '/percorso/di/file.txt';
$handle = fopen($file, r);
fclose($handle);[/cc]

Di seguito modalit&agrave; di apertura dei file del metodo fopen() e relativa descrizione:

<table>
<thead>
<tr>
<th>Modo</th>
<th>Descrizione</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>'r'</em></td>
<td>Apre il file in sola lettura e posiziona il puntatore all'inizio del file.</td>
</tr>
<tr>
<td><em>'r+'</em></td>
<td>Apre il file in lettura e scrittura e posiziona il puntatore all'inizio del file.</td>
</tr>
<tr>
<td><em>'w'</em></td>
<td>Apre il file in sola scrittura, posiziona il puntatore all'inizio del file e ne cancella tutto il contenuto. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'w+'</em></td>
<td>Apre il file in lettura e scrittura, posiziona il puntatore all'inizio del file e ne cancella tutto il contenuto. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'a'</em></td>
<td>Apre il file in sola scrittura e posiziona il puntatore alla fine del file. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'a+'</em></td>
<td>Apre il file in lettura e scrittura e posiziona il puntatore alla fine del file. Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'x'</em></td>
<td>Crea e apre il file in sola scrittura e posiziona il puntatore all'inizio del file. Se il file esiste già il metodo fopen() ritornerà FALSE e genererà un errore E_WARNING.</td>
</tr>
<tr>
<td><em>'x+'</em></td>
<td>Crea e apre il file in lettura e scrittura e posiziona il puntatore all'inizio del file. Se il file esiste già il metodo fopen() ritornerà FALSE e genererà un errore E_WARNING.</td>
</tr>
<tr>
<td><em>'c'</em></td>
<td>Apre il file in sola scrittura e posiziona il puntatore all'inizio del file mantenendone il contenuto (l'opposto di w). Se il file non esiste viene creato.</td>
</tr>
<tr>
<td><em>'c+'</em></td>
<td>Apre il file in lettura e scrittura e posiziona il puntatore all'inizio del file mantenendone il contenuto (l'opposto di w+). Se il file non esiste viene creato.</td>
</tr>
</tbody>
</table>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>272</wp:post_id>
		<wp:post_date>2013-05-08 11:36:00</wp:post_date>
		<wp:post_date_gmt>2013-05-08 09:36:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>chiudere-un-file-in-php</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="fclose"><![CDATA[fclose();]]></category>
		<category domain="funzione_linguaggio" nicename="fopen"><![CDATA[fopen();]]></category>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<category domain="funzione_linguaggio" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383812315;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/rjPN4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/chiudere-un-file-in-php/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:59:"Chiudere un file in PHP http://goo.gl/rjPN4 #PHP #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:59:"Chiudere un file in PHP http://goo.gl/rjPN4 #PHP #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1368006160;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Corso SEO lezione 1: I Motori di ricerca</title>
		<link>http://www.kludge.it/corso-seo-lezione-1-motori-di-ricerca/</link>
		<pubDate>Mon, 13 May 2013 06:22:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1607</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: left;">I <strong>motori di ricerca e le directories</strong> sono due strumenti che permettono agli utenti di rintracciare, più agevolmente, i siti internet di loro interesse.</p>
<p style="text-align: left;">La maggior parte degli utenti, circa il<strong> 75%</strong>, usa i motori di ricerca per trovare un sito. Gli altri utenti ci arrivano tramite le directories, gli scambi link o il passaparola.</p>
<p style="text-align: left;">Un motore di ricerca è un sistema automatico creato per esplorare e indicizzare (cioè assegnare un valore) ai miliardi di documenti, pagine, file, notizie video e altre media presenti sul web. Il suo scopo è quello di fornire risposte alle richieste degli utenti attraverso liste di pagine rilevanti, recuperando e ordinando le informazioni, tutto questo nel più breve tempo possibile. Attualmente è <em>Google</em> il motore di ricerca più famoso al mondo.
I motori di ricerca cercano e analizzano i siti internet grazie agli “spiders”, il cui compito è quello di visitare continuamente una grande quantità di siti e analizzarli estraendo il loro contenuto. Gli “spiders” però valutano il sito considerandone <strong>solo i contenuti testuali e il codice</strong> col quale vengono scritte le pagine, le immagini e le animazioni grafiche vengono ignorate. Quindi è importante sottolineare che i siti web acquisiscono rilevanza agli occhi dei motori di ricerca solo se contengono buone quantità di testo, ovviamente coerenti con gli argomenti trattati dal sito. In seguito ad una ricerca effettuata con un motore di ricerca all'utente verranno proposti soprattutto i siti più ricchi di testo.
Quando si parla di ottimizzazione di un sito sui motori di ricerca si intende la necessità di migliorare il contenuto dei suoi testi, in modo che la pagina così ottimizzata sia più visibile nei motori di ricerca.</p>
<p style="text-align: left;">Una Web Directory è un archivio di links a siti Web organizzati per categorie tematiche.
L’enorme differenza tra motore di ricerca e directory sta nel fatto che quando si suggerisce un sito in una directory, questo sarà <strong>visitato da una persona</strong> che valuterà se il sito è valido o meno. I motori di ricerca, al contrario, per indicizzare i siti internet utilizzano gli spiders che visitano il sito e lo inseriscono nel database. Un’altra distinzione è che in una directory si può inserire una sola pagina, tranne rari casi, di solito l’home page. Nel motore di ricerca, invece, quando viene suggerito un sito, lo spider lo visiterà e col tempo tornerà in tale sito per prendere tutte le pagine che contengono un link nella home page.
Comunque anche l’iscrizione del proprio sito web all’interno delle directories può aiutare ad incrementarne l’autorità e la popolarità. Soprattutto se i links provengono dalle directories più autorevoli: <a title="Dmoz - Directory" href="http://www.dmoz.org/World/Italiano/">Dmoz</a> e Yahoo Dir (per tali directories bisogna tener presente però che i tempi di attesa sono molto lunghi e possono arrivare anche a sei mesi). Un motivo a favore dell’inserimento del proprio sito in Dmoz è che <span style="text-decoration: underline;">molti altri motori di ricerca usano i dati Dmoz</span> e quindi il sito comparirà anche in quei motori di ricerca.
Per suggerire il proprio sito in Dmoz Yahoo Dir e nella maggior parte delle directories, bisogna scegliere la categoria/sottocategoria e poi suggerire il proprio sito.</p>
<p style="text-align: center;"><a title="SEM &amp; SEO" href="/corso-seo-lezione-2-sem-e-seo/">Lezione successiva: SEM &amp; SEO →
</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1607</wp:post_id>
		<wp:post_date>2013-05-13 08:22:00</wp:post_date>
		<wp:post_date_gmt>2013-05-13 06:22:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>corso-seo-lezione-1-motori-di-ricerca</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="seo"><![CDATA[SEO]]></category>
		<category domain="category" nicename="seo"><![CDATA[SEO]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/Y9NU7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/corso-seo-lezione-1-motori-di-ricerca/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:88:"Corso SEO lezione 1: I Motori di ricerca http://goo.gl/Y9NU7 #Senza categoria #webdesign";i:1;s:76:"Corso SEO lezione 1: I Motori di ricerca http://goo.gl/Y9NU7 #SEO #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:76:"Corso SEO lezione 1: I Motori di ricerca http://goo.gl/Y9NU7 #SEO #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1368428643;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383903785;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Corso SEO lezione 2: SEM &amp; SEO</title>
		<link>http://www.kludge.it/corso-seo-lezione-2-sem-e-seo/</link>
		<pubDate>Tue, 14 May 2013 08:22:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1613</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: left;">Quando si parla di <strong>promuovere siti internet sui motori di ricerca</strong> si fa spesso riferimento a termini come <strong>“SEM” e “SEO”</strong>. Queste sono due discipline i cui acronimi si riferiscono nello specifico a: <em>Search Egine Marketing</em> (<strong>SEM</strong>) e <em>Search Engine Optimization</em> (<strong>SEO</strong>).</p>
<p style="text-align: left;">Spesso questi due termini vengono utilizzati confusamente, è importante invece sottolineare che si tratta di <span style="text-decoration: underline;">due metodologie ben distinte</span>.</p>
<p style="text-align: left;">Il <em>Search Engine Marketing</em> (SEM) indica l’insieme delle attività di web marketing orientate ad <strong>incrementare la visibilità e la rintracciabilità</strong> di un sito web attraverso i motori di ricerca. Il Web Marketing è quel ramo delle attività del marketing aziendale che vuole <strong>analizzare il mercato</strong> e sviluppare rapporti commerciali tramite il web.</p>
<p style="text-align: left;">Il SEM mira non solo ad attuare diverse strategie di Web Marketing per raggiungere obiettivi in termini di reperibilità di un sito internet sui motori di ricerca, ma anche di valutare i ritorni delle singole azioni con appositi strumenti di web analysis. In questo modo il marketing sui motori di ricerca è la chiave per coloro che vogliono mantenersi competitivi sul web.</p>
<p style="text-align: left;">Il consulente SEM (<em>SEM Specialist</em>) si occupa principalmente della valutazione di tutti gli elementi esterni al sito ma che su di esso hanno un effetto diretto. Inoltre, pianifica e gestisce campagne <em>Pay per Click</em> e, attraverso strategie di<strong> link building</strong>, trova soluzioni per aumentare  la <strong>link popularity</strong>, fino alla valutazione dei ritorni derivanti dalle strategie adottate.</p>
<p style="text-align: left;">I motori di ricerca promuovono i contenuti di qualità ma questi, da soli, non bastano a generare popolarità: per questo motivo occorre la professionalità degli esperti di marketing su internet.</p>
<p style="text-align: left;">Infatti, la logica alla base di questa disciplina è che i migliori contenuti non possano essere semplicemente creati ma devono essere fatti conoscere.</p>
<p style="text-align: left;">La <em>Search Engine Optimization</em> (<strong>SEO</strong>), invece, è uno strumento fondamentale del <strong>SEM</strong>, orientato ad assicurare un miglior posizionamento nei risultati di ricerca (SERP) per una determinata singola parola o per una combinazione di parole.</p>
<p style="text-align: left;">L’ottimizzazione include tutte le attività messe in atto da un esperto dei motori di ricerca al fine di migliorare il posizionamento delle pagine di un sito web sulle pagine dei risultati naturali, restituite dai motori di ricerca in corrispondenza delle parole chiave ritenute più strategiche. Quando si parla di “posizionamento” si intende la procedura grazie alla quale il sito è collocato ai primi posti del motore di ricerca, questo in seguito a determinate ricerche, con precise parole chiave che riguardano i prodotti ed i servizi che offerti. Un concetto differente, quindi, da quello di “indicizzazione”: il processo attraverso cui il sito è semplicemente inserito all’interno del motore.</p>
<p style="text-align: left;">SEO significa fare in modo che le proprie pagine siano ben rappresentate all’interno dei vari motori di ricerca, in altre parole, far sì che <strong>aumenti il volume del traffico</strong> che il sito riceve dai motori di ricerca.</p>
<p style="text-align: left;">Infatti, i siti e le pagine competono per guadagnare attenzione e posizionamento sui motori di ricerca, e quelli che hanno le migliori conoscenze ed esperienze in materia riceveranno i benefici della maggior visibilità e maggior traffico.</p>
<p style="text-align: left;">In quest’ambito il consulente SEO (<em>SEO Specialist</em>) adempie a tutte quelle attività necessarie per una corretta indicizzazione e valorizzazione dei contenuti del sito. Questa figura professionale opera relativamente a tutti gli elementi riguardanti l'ottimizzazione dell’architettura di un sito: delle sue singole pagine e di tutti i tipi di contenuto che lo compongono.</p>
<p style="text-align: center;"><a title="I motori di ricerca" href="/corso-seo-lezione-1-motori-di-ricerca/">← Lezione precedente: I motori di ricerca</a></p>
<p style="text-align: center;"><a title="Un buon posizionamento SEO" href="/corso-seo-lezione-3-un-buon-posizionamento">Lezione successiva: Un buon posizionamento →</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1613</wp:post_id>
		<wp:post_date>2013-05-14 10:22:00</wp:post_date>
		<wp:post_date_gmt>2013-05-14 08:22:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>corso-seo-lezione-2-sem-e-seo</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="seo"><![CDATA[SEO]]></category>
		<category domain="category" nicename="seo"><![CDATA[SEO]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/bosTM]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/corso-seo-lezione-2-sem-e-seo/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:78:"Corso SEO lezione 2: SEM & SEO http://goo.gl/bosTM #Senza categoria #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383387859;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Corso SEO lezione 3: Un buon posizionamento</title>
		<link>http://www.kludge.it/corso-seo-lezione-3-un-buon-posizionamento/</link>
		<pubDate>Wed, 15 May 2013 08:50:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1618</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: left;">Il posizionamento può essere classificato come <strong>organico</strong> (o naturale) oppure <strong>a pagamento</strong> (il <em>pay per click o pay per view</em>).</p>
<p style="text-align: left;">Lo scopo di entrambe le tipologie di posizionamento è quello di riuscire a<strong> collocare i contenuti del proprio sito nelle prime posizioni</strong> dei risultati elaborati dai motori di ricerca.</p>
<p style="text-align: left;">Se indicizzare il proprio sito significa semplicemente farlo accettare dai diversi motori di ricerca (cosicché possa comparire tra i risultati di una ricerca, in google ad esempio), il posizionamento è altrettanto importante perché oggigiorno sono presenti tantissimi concorrenti sui motori di ricerca. Il problema che ne deriva è che ci sono molte informazioni ma <strong>l'attenzione degli utenti è limitata</strong>. Studi, infatti, dimostrano che l'<span style="text-decoration: underline;">80% degli utenti non scende oltre la seconda pagina</span> dei risultati: per questo motivo è decisivo collocarsi tra le prime venti posizioni.</p>
<p style="text-align: left;"><strong>Non esistono programmi</strong> per posizionare un sito: Il posizionamento viene stabilito da google tramite degli algoritmi matematici che vengono implementati con centinaia di patch e aggiornamenti ogni anno.</p>
<p style="text-align: left;">Ottenere un buon posizionamento nei risultati organici, quindi, dipende sia da come é stato progettato tecnicamente il sito, sia dal suo contenuto. Infatti, i motori di ricerca presenteranno una lista di siti internet che vedrà in cima i siti che meglio di altri trattano i temi riguardanti i termini ricercati.</p>
<p style="text-align: left;">Per migliorare la propria visibilità e il proprio posizionamento è utile considerare alcuni criteri:</p>

<ul style="text-align: left;">
	<li>dedicarsi all'ottimizzazione delle pagine e dei contenuti <strong>sin dalla progettazione del sito</strong>, e non solo dopo la sua creazione;</li>
	<li>progettare un sito web facilmente <strong>fruibile sia da parte sia dell'utente che dello spider</strong> (ricordando che gli spider non accettano cookie e molto raramente leggono script javascript);</li>
	<li>utilizzare come linguaggio di markup l'html e ricordarsi che, nonostante siano stati fatti grandi passi in avanti e che google riesca senza nessun problema a leggere il testo contenuto nei file *.swf (flash) <strong>non c'è ancora alcuna soluzione alla lettura dei testi scritti in delle immagini</strong> se non quello di utilizzare l'apposito tag html img alt (alternative text).</li>
	<li>curare con particolare attenzione i contenuti testuali, che devono essere originali, interessanti e sviluppati in maniera approfondita;</li>
	<li>indicare in modo preciso all’interno dei testi delle pagine quelle parole chiave che presumibilmente gli utenti useranno come termini di ricerca.</li>
	<li>sviluppare le pagine per gli utenti non per i motori di ricerca. Quindi evitare trucchi, come l’inserimento di testi nei quali compaiono a sproposito e in eccesso le parole chiave (keywords stuffing) o dei testi contenuti in dei div nascosti come con l'attributo CSS “display: none;”.</li>
	<li>ottenere da altri siti qualche <strong>backlinks</strong> (links in altri siti web che indirizzano al nostro) per aumentarne la popolarità, infatti i siti ritenuti più "popolari" o "autorevoli" da parte del motore di ricerca occupano nelle liste posizioni più alte rispetto a siti meno conosciuti. Attenzione però a non cadere nel tranello delle links farm o delle migliaia di directory che chiedono links in combio per poi, magari, applicare al vostro link l'attributo “nofollow” inibendo così gli spider dal visitare il vostro sito.</li>
	<li>osservare il comportamento dei propri concorrenti, imitandoli ma senza copiarli per non essere penalizzati dai motori di ricerca.</li>
</ul>
<p style="text-align: left;">Bisogna comunque tenere presente che non ci sono regole fisse. I motori di ricerca lavorano attraverso algoritmi di posizionamento (cioè complesse equazioni matematiche) che vengono continuamente modificate. Perciò, una volta ottenuta una buona posizione per il proprio sito, è indispensabile monitorare costantemente il proprio posizionamento per mantenerlo nel tempo, apportando tutte le modifiche necessarie e tenere sempre a mente che il sito come obiettivo primario deve avere un'<strong>ottima fruibilità da parte dell'utente.</strong></p>
<p style="text-align: center;"><a title="SEM &amp; SEO" href="/corso-seo-lezione-2-sem-e-seo">← Lezione precedente: I motori di ricerca</a></p>
<p style="text-align: center;"><a title="Lezione SEO: I miti da sfatare" href="/corso-seo-lezione-4-i-miti-da-sfatare/">Lezione successiva il 16/05/13: I miti da sfatare →</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1618</wp:post_id>
		<wp:post_date>2013-05-15 10:50:00</wp:post_date>
		<wp:post_date_gmt>2013-05-15 08:50:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>corso-seo-lezione-3-un-buon-posizionamento</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="seo"><![CDATA[SEO]]></category>
		<category domain="category" nicename="seo"><![CDATA[SEO]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/u9B9h]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/corso-seo-lezione-3-un-buon-posizionamento/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:91:"Corso SEO lezione 3: Un buon posizionamento http://goo.gl/u9B9h #Senza categoria #webdesign";i:1;s:79:"Corso SEO lezione 3: Un buon posizionamento http://goo.gl/u9B9h #SEO #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:79:"Corso SEO lezione 3: Un buon posizionamento http://goo.gl/u9B9h #SEO #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1368607925;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383886820;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Corso SEO lezione 4: I miti da sfatare</title>
		<link>http://www.kludge.it/corso-seo-lezione-4-i-miti-da-sfatare/</link>
		<pubDate>Thu, 16 May 2013 06:49:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1624</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: left;">Negli ultimi anni si sono diffusi molti miti e luoghi comuni sui motori di ricerca. Qui ne presentiamo alcuni che devono essere smentiti.</p>
<p style="text-align: left;"><strong>MOTORI DI RICERCA E REGISTRAZIONE</strong></p>
<p style="text-align: left;">Innanzitutto, bisogna sfatare il mito della necessità di inserimento del sito in centinaia di motori di ricerca. In realtà, oltre al fatto che non ne esistono così tanti, oggi <strong>i motori di ricerca che contano sono meno di 5</strong> (i principali sono Google e Yahoo!).</p>
<p style="text-align: left;">Sempre riguardo ai motori di ricerca, non è necessaria alcuna registrazione e non bisogna pagare alcun servizio di questo genere: i motori trovano da soli i siti mediante un processo di individuazione automatica attraverso gli spiders, l'unica cosa che è possibile fare è "suggerire un sito".</p>
<p style="text-align: left;"><strong>LA “PRIMA POSIZIONE”</strong></p>
<p style="text-align: left;"><strong>Non esiste una prima posizione assoluta</strong>: le liste di risultati visualizzate dai motori di ricerca vengono composte in tempo reale ed in base alle parole cercate dall'utente. Per ogni combinazione di termini, anche simili, si ottiene una lista di risultati differente.</p>
<p style="text-align: left;">Inoltre, non esiste un sistema o un programma che garantisca le prime posizioni nei principali motori di ricerca. Ed è errato pensare che una volta ottenuta una buona posizione questa rimanga tale: è necessario un <strong>costante monitoraggio</strong> per apportare le modifiche necessarie se si vuole mantenere tale posizione. A questo proposito, non bisogna considerare i motori di ricerca come delle semplici liste o graduatorie, e che ad ogni sito venga assegnata una posizione fissa e invariabile una volta raggiunta.</p>
<p style="text-align: left;"><strong>I META TAG</strong></p>
<p style="text-align: left;">I Meta TAG oggi non sono più così importanti <strong>ai fini del posizionamento</strong> come alcuni continuano a pensare. Per quanto riguarda il meta tag Keywords, visto che in passato se n’è abusato, i motori di ricerca migliori non le tengono più in considerazione. Verso la fine degli anni '90 si aveva infatti l'usanza di riempire il meta tag keywords con moltissime parole/frasi-chiave avendo la speranza che queste migliorassero la posizione nella serp, convinzione ad oggi totalmente errata.</p>
<p style="text-align: left;">Il meta tag Description, invece, è utile solo a certi motori di ricerca per fornire una breve descrizione nella pagina dei risultati e non influisce minimamente nel posizionamento.
Potrebbe essere invece piuttosto utile utilizzare i <strong>Rich format</strong> (microdata) per dare un pò di risalto alle nostre pagine nella serp. Tali formati saranno sempre più utilizzati dato che forniscono delle informazioni specifiche sulla dislocazione di specifici contenuti all'interno delle nostre pagine ai motori di ricerca.</p>
<p style="text-align: left;"><strong>KEYWORDS</strong></p>
<p style="text-align: left;">Una strategia che non è affatto vincente, è quella di puntare tutto su una singola keyword o comunque un numero limitato. Come pure sceglierne di troppo generiche o molto competitive. La scelta va fatta con intelligenza tenendo a mente la <strong>coerenza con i contenuti del sito.</strong></p>
<p style="text-align: left;">Non esiste una correlazione tra l’investimento in posizionamento a pagamento (il <em>pay per click</em>) e il miglioramento della propria posizione naturale. Infatti, per non far nascere dubbi a riguardo, i principali motori di ricerca separano in maniera netta all'interno delle loro organizzazioni queste due attività.</p>
<p style="text-align: left;">Spesso si ha la credenza che pratiche come quella del <em>keywords stuffing </em>(ossia la pratica di ripetere un numero eccessivo di volte una parola / frase chiave all'interno di una pagina) siano il modo migliore per posizionarsi nella serp (search engine results page -  pagina dei risultati dei motori di ricerca) ma bisogna sempre tenere a mente che<strong> il sito web va sviluppato per gli utenti</strong> e non per i motori di ricerca.</p>
<p style="text-align: left;"><strong>MOTORI DI RICERCA E SPAM</strong></p>
<p style="text-align: left;">La parola spam ha ormai assunto varie definizioni: il cloaking (contenuto differente tra spider e motori di ricerca), links autoreferenziati o incestuosi, la non segmentazione degli inbound links per aree geografiche e molte altre tecniche vengono ormai penalizzate “ad occhi chiusi” dai motori di ricerca.</p>
<p style="text-align: left;">I motori di ricerca vogliono limitare la diffusione di spam, anzi, avendo capito che gli utenti lo detestano, stanno facendo progressi  nell’identificazione di metodologie intelligenti per combattere la manipolazione dei risultati, rendendo molto più difficile aggirare i propri algoritmi.</p>
<p style="text-align: center;"><a title="Lezione SEO: Un buon posizionamento" href="/corso-seo-lezione-3-un-buon-posizionamento">← Lezione precedente: Un buon posizionamento</a></p>
<p style="text-align: center;"><a title="Lezione SEO: Scegliere il nome dominio" href="/corso-seo-lezione-5-scegliere-nome-dominio">Lezione successiva: Scegliere il nome dominio →</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1624</wp:post_id>
		<wp:post_date>2013-05-16 08:49:00</wp:post_date>
		<wp:post_date_gmt>2013-05-16 06:49:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>corso-seo-lezione-4-i-miti-da-sfatare</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="seo"><![CDATA[SEO]]></category>
		<category domain="category" nicename="seo"><![CDATA[SEO]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383839342;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Corso SEO lezione 5: Scegliere il nome del dominio</title>
		<link>http://www.kludge.it/corso-seo-lezione-5-scegliere-nome-dominio/</link>
		<pubDate>Fri, 17 May 2013 07:50:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1628</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: left;">La <strong>scelta del nome dominio</strong> è un passaggio molto importante infatti è il nostro biglietto da visita nel web.</p>
<p style="text-align: left;">Sebbene questa scelta incida in minima parte sul posizionamento del sito internet ci sono svariati altri motivi per cui tale nome va scelto con attenzione.</p>
<p style="text-align: left;">Bisogna considerare alcuni criteri, come scegliere un <strong>nome coerente col tipo di sito che si vuole sviluppare</strong>, ma anche un nome che sia <strong>facile da ricordare</strong> e che ci dia maggiori possibilità di anchor text nei backlinks. Il nome deve essere <strong>preferibilmente corto</strong>, perciò possono essere usate abbreviazioni.</p>
<p style="text-align: left;">Se si vuole  scegliere il nome di dominio per un'attività già presente sul mercato, il nome deve ricondurre a l'attività, cosicché i clienti lo possano ricordare facilmente. Nel caso il nome del dominio scelto sia già occupato, un’alternativa può essere registrare il nome dell’azienda + località di attività.</p>
<p style="text-align: left;">In ogni caso, al momento della scelta è necessario tenere a mente cosa fa l'azienda, che cosa offre, cosa vuole la gente da questa attività.</p>
<p style="text-align: left;">Per quanto riguarda la scelta dell’estensione (cioè .com, .org, .biz, .net, .it, .co.uk, .fr …) la scelta è molto ampia e quella che una volta era nata come una netta suddivisione degli ambiti dei contenuti dei siti internet è ormai oggi diventata una <strong>scelta principalmente estetica.</strong></p>
<p style="text-align: left;">Le estensioni sono nate con dei significati specifici ad esempio .it  sta per italiano; .com per commerciale; .org per organizzazioni; . net per network; .biz per businesses ecc.</p>
<p style="text-align: left;">Un consiglio piuttosto scontato ma che non va sottovalutato è l’acquisto del nome dominio con tutte le più comuni estensioni per <strong>evitare che queste vengano magari registrate da altre aziende</strong> per sfruttare il successo del sito padre.</p>
<p style="text-align: left;">Come abbiamo precedentemente anticipato uno dei motivi cardine per scegliere un nome dominio che contenga delle parole chiave al suo interno è avere, a prescindere dall’anchor text, delle parole che vogliamo spingere all’interno dei backlinks infatti quando si ricevono link spontanei da altri siti, questi link hanno proprio il nome del dominio. Più link si ricevono, maggiore sarà il livello di popolarità, quindi più in alto si comparirà nelle liste di risultati con le proprie parole chiave.</p>
<p style="text-align: center;"><a title="Lezione SEO: I miti da sfatare" href="/corso-seo-lezione-4-i-miti-da-sfatare/">← Lezione precedente: I miti da sfatare</a></p>
<p style="text-align: center;"><a title="Lezione SEO: Le keywords e le keyphrases" href="/corso-seo-lezione-6-le-keywords-e-le-keyphrases">Lezione successiva : Le keywords e le keyphrases →</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1628</wp:post_id>
		<wp:post_date>2013-05-17 09:50:00</wp:post_date>
		<wp:post_date_gmt>2013-05-17 07:50:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>corso-seo-lezione-5-scegliere-nome-dominio</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="seo"><![CDATA[SEO]]></category>
		<category domain="category" nicename="seo"><![CDATA[SEO]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/L54Hs]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/corso-seo-lezione-5-scegliere-nome-dominio/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:86:"Corso SEO lezione 5: Scegliere il nome del dominio http://goo.gl/L54Hs #SEO #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:86:"Corso SEO lezione 5: Scegliere il nome del dominio http://goo.gl/L54Hs #SEO #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1368777059;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383808670;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Corso SEO lezione 6: Le Keywords e le Keyphrases</title>
		<link>http://www.kludge.it/corso-seo-lezione-6-le-keywords-e-le-keyphrases/</link>
		<pubDate>Mon, 20 May 2013 07:06:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1631</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: left;">Le <strong>keywords</strong> (parole chiave) sono un elemento centrale nella SEO: attorno ad esse si sviluppa il lavoro di <strong>ottimizzazione e posizionamento</strong> del sito web.</p>
<p style="text-align: left;">Attraverso l’analisi delle parole chiave (<strong>keyword research</strong>) si riescono ad individuare i termini o parole da indirizzare con il SEO, e si impara anche a conoscere meglio i propri clienti.</p>
<p style="text-align: left;">Scegliere le proprie keywords o keyphrases significa scegliere le parole o frasi con le quali si è deciso  di ottimizzare un sito, una sezione o una pagina. In poche parole significa per quali parole ci si vuole far trovare dai propri utenti.</p>
<p style="text-align: left;">Le keywords migliori sono quelle che permettono di raggiungere al meglio gli obiettivi che ci siamo preposti, che portano il maggior numero di risultati e con un <strong>livello di concorrenza più basso</strong> possibile.</p>
<p style="text-align: left;">Bisogna infatti individuare la propria <strong>“nicchia” nel web</strong>, quelle parole che possono ricondurre a noi ma che non sono ancora estremamente competitive.</p>
<p style="text-align: left;">L’utente medio quando effettua una ricerca <strong>molto difficilmente cerca una sola parola</strong>, soprattutto se sta cercando un prodotto o un servizio, ci vengono dunque in aiuto le keyphrases.</p>
<p style="text-align: left;">Per sapere quali parole chiave sono più utilizzate dagli utenti ci si può riferire ai vari tools disponibili sul web. Inserendo una chiave il tool ti riporta tutte le sue combinazioni ricercate dagli utenti. In più mostra anche il numero di ricerche fatte.</p>
<p style="text-align: left;">Tra i tools principali troviamo <strong>Overture</strong>, che è libero ed adatto a chi deve scegliere delle chiavi per un sito amatoriale e poi c’è <strong>Adwords</strong>, un ormai famosissimo programma di google, che permette di scegliere delle chiavi e comparire in google nei collegamenti sponsorizzati (a pagamento).</p>
<p style="text-align: left;">Un errore da non commettere riguarda la densità di parole chiave all’interno di un testo (<strong>keywords stuffing</strong>), perché questo può influire negativamente sul posizionamento in quanto google valuta positivamente tutti quei siti che sono <span style="text-decoration: underline;">sviluppati nell’ottica della fruibilità e dello sviluppo per l’utente</span> e riempite un testo di parole chiave non rispecchia certamente queste caratteristiche.</p>
<p style="text-align: left;">La vicinanza tra le parole chiave <span style="text-decoration: underline;">non deve pregiudicare la leggibilità del testo</span>. Non bisogna, quindi, creare ripetizioni artificiose di parole chiave troppo vicine tra loro: questo non solo comporterebbe la perdita di leggibilità del testo e, di conseguenza, verrebbe interpreto da Google come spam.</p>
<p style="text-align: left;">In ogni caso è importante collocare le parole chiave soprattutto nel titolo (tag title) e nelle intestazioni o headings (h1, h2…). Infatti, in base alla regola della <em>first sentence</em>,<em> </em>i motori danno un peso maggiore alla presenza della parola chiave ad inizio pagina.</p>
<p style="text-align: left;">Un ultimo consiglio è di osservare la strategia messa in atto dalla concorrenza, quindi chiedersi per quali chiavi competitive risultano posizionati i siti dei propri concorrenti.</p>
<p style="text-align: center;"><a title="Lezione SEO: Scegliere il nome del dominio" href="/corso-seo-lezione-5-scegliere-nome-dominio">← Lezione precedente: Scegliere il nome dominio</a></p>
<p style="text-align: center;"><a title="Lezione SEO: Il tag title" href="/corso-seo-lezione-7-il-tag-title">Lezione successiva: Il tag title →</a></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1631</wp:post_id>
		<wp:post_date>2013-05-20 09:06:00</wp:post_date>
		<wp:post_date_gmt>2013-05-20 07:06:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>corso-seo-lezione-6-le-keywords-e-le-keyphrases</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="seo"><![CDATA[SEO]]></category>
		<category domain="category" nicename="seo"><![CDATA[SEO]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/RgUAh]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/corso-seo-lezione-6-le-keywords-e-le-keyphrases/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:84:"Corso SEO lezione 6: Le Keywords e le Keyphrases http://goo.gl/RgUAh #SEO #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:84:"Corso SEO lezione 6: Le Keywords e le Keyphrases http://goo.gl/RgUAh #SEO #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1369033899;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383844691;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Corso SEO lezione 7: Il tag title</title>
		<link>http://www.kludge.it/corso-seo-lezione-7-il-tag-title/</link>
		<pubDate>Tue, 21 May 2013 06:41:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1635</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: left;">La scelta del<strong> titolo di una pagina</strong> web rappresenta il primo importante passo per un buon posizionamento della pagina sui motori di ricerca.</p>
<p style="text-align: left;">E’ nel titolo che deve essere  inserita la <strong>parola chiave primaria</strong> perché questo è uno dei fattori che incide maggiormente sul posizionamento. Infatti, il titolo comunica gli argomenti della pagina sia agli utenti che ai motori di ricerca.</p>
<p style="text-align: left;">E’ proprio dal titolo che l’utente si farà un’idea riguardo la pagina: se il titolo contiene informazioni che l'utente giudica interessanti e compatibili con ciò che ha cercato, allora la visita della pagina web è "assicurata".</p>
<p style="text-align: left;">Il<strong> tag title</strong> si può considerare la più grande chance che il sito possiede per accattivare l'utente in un lasso di tempo estremamente ridotto e non va certo sprecata.</p>
<p style="text-align: left;">In generale è importante che nel titolo ci siano due tipi di informazione per far sì che l’utente abbia subito chiare le idee: il nome del sito o dell’azienda a cui il sito appartiene ed i temi trattati nella pagina.</p>
<p style="text-align: left;">I consigli per la scelta del titolo sono comunque vari:</p>

<ul>
	<li style="text-align: left;">Scegliere un titolo che comunichi efficacemente l’<strong>argomento del contenuto</strong> della pagina;</li>
	<li style="text-align: left;">non usare titoli titolo che non abbiano alcuna relazione con il contenuto;</li>
	<li style="text-align: left;">ogni pagina deve avere <strong>un title tag unico</strong>, che aiuti Google a capire in cosa la pagina si distingue dalle altre;</li>
	<li style="text-align: left;">scegliere titoli <strong>brevi e descrittivi</strong>;</li>
	<li style="text-align: left;">ricordare che un buon titolo di pagina deve esser sempre seguito da una altrettanto <strong>buona descrizione</strong>.</li>
	<li style="text-align: left;">E soprattutto crea dei tag Title <strong>unici per ciascuna pagina</strong> per poterle distinguere l’una dall’altra e per dar loro unicità.</li>
</ul>
<p style="text-align: center;"><a title="Lezione SEO: Le keywords e le Keyphrases" href="/corso-seo-lezione-6-le-keywords-e-le-keyphrases">← Lezione precedente: Le keywords e le keyphrases</a></p>
<p style="text-align: center;">Lezione successiva il 22/05/2013: I meta tags →</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1635</wp:post_id>
		<wp:post_date>2013-05-21 08:41:00</wp:post_date>
		<wp:post_date_gmt>2013-05-21 06:41:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>corso-seo-lezione-7-il-tag-title</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="seo"><![CDATA[SEO]]></category>
		<category domain="category" nicename="seo"><![CDATA[SEO]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/8gybP]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/corso-seo-lezione-7-il-tag-title/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:69:"Corso SEO lezione 7: Il tag title http://goo.gl/8gybP #SEO #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:69:"Corso SEO lezione 7: Il tag title http://goo.gl/8gybP #SEO #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1369118928;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383869455;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Corso SEO lezione 8: I meta tags</title>
		<link>http://www.kludge.it/corso-seo-lezione-8-i-meta-tags/</link>
		<pubDate>Wed, 22 May 2013 08:52:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1639</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: left;">II <strong>meta tags</strong> sono dei tags inseriti nella sezione head del codice html, fanno parte dunque di quella parte di codice che <strong>non è direttamente visibile all’utente finale</strong>.</p>
<p style="text-align: left;">La funzione dei meta tag è comunicare ai motori di ricerca informazioni relative al sito ma, badate bene, <strong>non influiscono minimamente nel posizionamento</strong>.</p>
<p style="text-align: left;">In particolare, i meta tags principali suggeriscono allo spider:</p>

<ul style="text-align: left;">
	<li>Una breve <strong>descrizione del sito</strong> / della pagina da riportare all'interno dell'indice del motore di ricerca;</li>
	<li>Le <strong>parole chiave</strong> di riferimento, sebbene queste siano soltanto un nostro suggerimento dal momento che l’utilizzo reale del contenuto del &lt;meta name=”keywords”&gt; resta ancora piuttosto sconosciuto.</li>
</ul>
<p style="text-align: left;">Come anticipato precedentemente i meta tag non sono importanti al fine del posizionamento di un sito web infatti i motori di ricerca stabiliscono la posizione di una pagina basandosi sul testo della stessa, sulla popolarità del sito web e su diversi altri parametri ed è possibile essere primi nei motori di ricerca senza avere alcun meta tag,</p>
<p style="text-align: left;">I meta tag principali sono tre:</p>

<ul style="text-align: left;">
	<li><strong>Description</strong> (&lt;meta name=”description”&gt;);</li>
	<li><strong>Keywords</strong> (&lt;meta name=”keywords”&gt;);</li>
	<li><strong>Robots</strong> (&lt;meta name=”robots”&gt;).</li>
</ul>
<p style="text-align: left;">Il meta tag description di una pagina fornisce a Google e agli altri motori di ricerca un sommario dell’argomento della pagina. La sua funzione è duplice: comunica informazioni utili al Motore di Ricerca e comunica informazioni utili agli utenti quando la visualizzano nella serp (search engine result page – pagina dei risultati del motre di ricerca).</p>
<p style="text-align: left;">La sua dichiarazione, come quella di tutti gli altri meta tag va fatta all’interno del tag &lt;head&gt; e si effettua  così &lt;meta name=”description” content=”Descrizione del vostro sito web…”&gt;</p>
<p style="text-align: left;">Il meta tag keywords, invece, consente di specificare una lista di parole chiave che riguardano gli<strong> argomenti trattati nella pagina</strong> web. Ovviamente, le keywords dovrebbero essere sempre pertinenti rispetto al contenuto della pagina di riferimento.</p>
<p style="text-align: left;">La quantità di parole chiave che vanno inserite all’interno di questo meta tag è stato spesso argomento di dibattito, certo è che inserendo moltissime o pochissime parole chiave l’incisività di questo tag nel posizionamento non cambia: resta pari a zero.</p>
<p style="text-align: left;">Personalmente credo che ne vada inserito <strong>un numero opportuno</strong> che, chiaramente può variare ma come linea guida direi che<strong> 7-8 parole</strong> chiave non dovrebbero nuocere.</p>
<p style="text-align: left;">Altro argomento di dibattito riguardante questo meta tag è l’utilizzo dei separatori tra una parola chiave e l’altra:</p>

<ul style="text-align: left;">
	<li>&lt;meta name=”keywords” content=”parola1, parola2, parola3, parola4”&gt;</li>
	<li>O così &lt;meta name=”keywords” content=”parola1 parola2 parola3 parola4”</li>
</ul>
<p style="text-align: left;">La mia opinione è che non ci siano differenze tra i due metodi e che i motori di ricerca siano piuttosto flessibili nella lettura di questi tag anche perché, non è certo l’utilizzo di un separatore che spaventa i colossi dei motori di ricerca.</p>
<p style="text-align: left;">Infine, il meta tag robots contiene delle indicazioni<em> </em>per gli spider che preleveranno e analizzeranno la pagina. In pratica è un mezzo di comunicazione tra il web master e lo spider (di conseguenza il motore di ricerca).</p>
<p style="text-align: left;">Questo meta tag contempla infatti vari valori che stabiliscono se indicizzare o meno determinate pagine del nostro sito, gli attributi sono i seguenti:</p>

<ul style="text-align: left;">
	<li>"<em>index</em>"- Indica al robot (o spider che dir si voglia), che questa pagina potrà essere indicizzata. In altre parole, si consente al motore di ricerca di inserire questa pagina nel suo database e di visualizzarla nella serp.</li>
</ul>
<ul style="text-align: left;">
	<li>"<em>noindex</em>"- Com’è facilmente intuibile è l’opposto del valore index, usando questo tag si ordina allo spider di non indicizzare questa pagina. Questa pagina, quindi, non apparirà nei motori di ricerca.</li>
</ul>
<ul style="text-align: left;">
	<li>"<em>follow</em>"- Con il valore follow si comunica allo spider che può seguire i links presenti in questa pagina ed analizzarle.</li>
</ul>
<ul style="text-align: left;">
	<li>"<em>nofollow</em>"- La negazione di follow vieta allo spider di seguire i links presenti in questa</li>
</ul>
<p style="text-align: left;">Questi attributi possono chiaramente essere combinati in vari modi tra cui:</p>

<ul style="text-align: left;">
	<li>&lt;meta name="robots" content="index,follow"&gt;</li>
</ul>
<ul style="text-align: left;">
	<li>&lt;meta name="robots" content="noindex,follow"&gt;</li>
</ul>
<ul style="text-align: left;">
	<li>&lt;meta name="robots" content="index,nofollow"&gt;</li>
</ul>
<ul style="text-align: left;">
	<li>&lt;meta name="robots" content="noindex,nofollow"&gt;</li>
</ul>
<p style="text-align: left;">Oltre ai meta tag elencati in questo articolo ne esistono degli altri dedicati per esempio a google, a facebook, altri atti a specificare la lingua nella quale la pagina è scritta (&lt;meta name="language" content="it"&gt;) e svariati altri.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1639</wp:post_id>
		<wp:post_date>2013-05-22 10:52:00</wp:post_date>
		<wp:post_date_gmt>2013-05-22 08:52:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>corso-seo-lezione-8-i-meta-tags</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="seo"><![CDATA[SEO]]></category>
		<category domain="category" nicename="seo"><![CDATA[SEO]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383851219;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Corso SEO lezione 9: Gli heading tags</title>
		<link>http://www.kludge.it/corso-seo-lezione-9-gli-heading-tags/</link>
		<pubDate>Thu, 23 May 2013 09:02:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1643</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: left;">Gli <strong>heading tags</strong> sono i tags utilizzati per individuare le <strong>intestazioni</strong> utilizzate per organizzare le parti principali e secondarie di una pagina.</p>
<p style="text-align: left;">Sono sei:</p>

<ol style="text-align: left;" start="1">
	<li>&lt;h1&gt;Testo&lt;/h1&gt;</li>
	<li>&lt;h2&gt;Testo&lt;/h2&gt;</li>
	<li>&lt;h3&gt;Testo&lt;/h3&gt;</li>
	<li>&lt;h4&gt;Testo&lt;/h4&gt;</li>
	<li>&lt;h5&gt;Testo&lt;/h5&gt;</li>
	<li>&lt;h6&gt;Testo&lt;/h6&gt;</li>
</ol>
<p style="text-align: left;">Da &lt;H1&gt;, la misura <strong>più importante</strong>, ad &lt;H6&gt;, la <strong>meno importante</strong>.</p>
<p style="text-align: left;">Un accorgimento da tenere presente, è che le intestazioni di paragrafo create, devono essere <strong>coerenti con i contenuti della pagina</strong> e devono avere un senso per l’utente. Inoltre, la keywords principale deve comparire una sola volta nel tag H1 e la parola chiave secondaria nel tag H2. <strong>In HTML4 è Importante è non ripetere il tag H1</strong> più di 2 volte all’interno della stessa pagina, mentre gli altri header tags si possono ripetere più volte,<strong> In HTML5 il ruolo degli heading tags è cambiato</strong> ed ogni sezione della pagina può avere la sua struttura e il suo H1, h2, h3 ecc.</p>
<p style="text-align: left;">Far finta di scrivere un sommario è un modo per capire come usare questo strumento, cercando di individuare quali saranno i punti principali e secondari del contenuto della pagina e, di conseguenza, decidere come usare le intestazioni in modo appropriato.</p>
<p style="text-align: left;">Per meglio capire come devono essere utilizzate queste tags ecco cosa dovrebbe essere inserito nelle rispettive intestazioni:</p>

<ul style="text-align: left;">
	<li>in H1 nome del sito/della sezione (html5) o titolo della pagina;</li>
	<li>in H2 nome del sito, descrizione, titolo delle sezioni, sottotitoli;</li>
	<li>in H3 titolo delle sezioni, sottotitoli;</li>
	<li>in H4 e H5 i testi delle pagine;</li>
	<li>in H5 o H6  note, approfondimenti.</li>
</ul>
<p style="text-align: left;">La formattazione, che si ottiene grazie a questi tags, aiuta visivamente gli utenti a comprendere l’importanza dei contenuti della pagina.</p>
<p style="text-align: left;"><strong>Ciascun heading tag ha infatti una sua formattazione</strong> che differisce per grandezza del testo, margini e rientri di paragrafo (che cambia però da browser a browser) e che può essere modificata con l’utilizzo dei css (cascading style sheet – Foglio di stile).</p>
<p style="text-align: left;">Una struttura multipla di heading tags viene utilizzata per creare una gerarchia all'interno del contenuto e questo facilita molto la navigazione e i motori di ricerca a dare una valutazione di importanzaai contenuti.</p>
<p style="text-align: left;">Con l’avvendo di html5 in oltre ci saranno novità all’interno dei browser che sfrutteranno molto più di ora le gerarchizzazioni per dare delle anteprime della struttura dei links e delle pagine.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1643</wp:post_id>
		<wp:post_date>2013-05-23 11:02:00</wp:post_date>
		<wp:post_date_gmt>2013-05-23 09:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>corso-seo-lezione-9-gli-heading-tags</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="seo"><![CDATA[SEO]]></category>
		<category domain="category" nicename="seo"><![CDATA[SEO]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383869455;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Corso SEO lezione 10: Il contenuto testuale</title>
		<link>http://www.kludge.it/corso-seo-lezione-10-il-contenuto-testuale/</link>
		<pubDate>Fri, 24 May 2013 08:04:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1648</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="text-align: left;">Un fattore importante o forse <strong>IL fattore</strong> per il successo di un sito web è la <strong>qualità dei contenuti</strong>.</p>
<p style="text-align: left;">La possibilità di raggiungere una posizione elevata nei risultati è <span style="text-decoration: underline;">strettamente connessa con la capacità di creare contenuti</span> in grado di soddisfare in maniera esaustiva un reale bisogno di ricerca.</p>
<p style="text-align: left;">Se gli utenti reputano un sito ben fatto, con un buon contenuto, indirizzeranno altre persone verso di esso. Il <strong>passaparola</strong> è, infatti, il <strong>mezzo più efficace</strong> per costruire la reputazione di un sito, sia tra gli utenti sia con Google, e ciò non avviene quasi mai se il contenuto non è di qualità.</p>
<p style="text-align: left;">Ma come fanno i motori di ricerca a considerare un sito migliore di un altro?</p>
<p style="text-align: left;">In generale questo avviene perché i siti ritenuti “migliori” hanno in comune determinate caratteristiche:</p>

<ul style="text-align: left;">
	<li>sono<strong> facili da utilizzare</strong>, da navigare e da capire;</li>
	<li>forniscono <strong>informazioni dirette</strong> e pertinenti per le ricerche effettuate;</li>
	<li>hanno un <strong>design professionale</strong> e risultano accessibili a tutti i browser moderni;</li>
	<li>forniscono <strong>contenuti credibili</strong> e di alta qualità.</li>
</ul>
<p style="text-align: left;">E’ sconsigliato scrivere testi palesemente copiati da altre fonti, con molti errori grammaticali o inserire il testo all'interno di immagini in quanto, come detto, l'importante è cercare di creare <strong>contenuti originali</strong> e con molte informazioni.</p>
<p style="text-align: left;">Per andare incontro alle esigenze degli utenti è utile classificare e comprendere le loro ricerche in base all’obiettivo che si sono posti:</p>
<p style="text-align: left;">1)  ricerca verso un percorso: l’intento dell’utente è quello di giungere direttamente ad un sito specifico;</p>
<p style="text-align: left;">2)  ricerca di informazioni: lo scopo è quello di ottenere risposte rapide, l'informazione stessa é il fine della ricerca, nessuna altra interazione é richiesta oltre al click e alla lettura di ciò che interessa sapere;</p>
<p style="text-align: left;">3)  ricerca transnazionale: si cerca un luogo (come un ristorante), o si vuole fare un acquisto online o ancora completare una registrazione;</p>
<p style="text-align: left;">4)  indagine commerciale: é una ricerca a metà strada tra una ricerca di informazioni e una ricerca transazionale (ad esempio la ricerca di potenziali clienti/partner o la raccolta di informazioni sui propri concorrenti).</p>
<p style="text-align: left;">L’unico accorgimento a livello progettuale che consigliamo nella realizzazione dei contenuti e (parallelamente dell’estetica) è di suddividere i contenuti in<strong> pagine pertinenti</strong> e, naturalmente, di utilizzare gli heading tags come spiegato nella <a title="Corso SEO: Gli heading tags" href="/corso-seo-lezione-9-gli-heading-tags/">lezione precedente</a>.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1648</wp:post_id>
		<wp:post_date>2013-05-24 10:04:00</wp:post_date>
		<wp:post_date_gmt>2013-05-24 08:04:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>corso-seo-lezione-10-il-contenuto-testuale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="seo"><![CDATA[SEO]]></category>
		<category domain="category" nicename="seo"><![CDATA[SEO]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[no]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383864604;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shortcut per saltare all&#039;inizio di una riga nel TERMINALE</title>
		<link>http://www.kludge.it/shortcut-per-saltare-allinizio-di-una-riga-nel-terminale/</link>
		<pubDate>Mon, 03 Jun 2013 06:51:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1679</guid>
		<description></description>
		<content:encoded><![CDATA[Capita molto spesso quando si opera con un terminale (Shell) di voler andare direttamente all'inizio di una riga: ciò è possibile utilizzando lo shortcut: CTRL + A.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1679</wp:post_id>
		<wp:post_date>2013-06-03 08:51:00</wp:post_date>
		<wp:post_date_gmt>2013-06-03 06:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shortcut-per-saltare-allinizio-di-una-riga-nel-terminale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="terminal"><![CDATA[Terminal]]></category>
		<category domain="category" nicename="terminale"><![CDATA[Terminale]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/l20Hf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/shortcut-per-saltare-allinizio-di-una-riga-nella-shell/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:103:"Shortcut per saltare all'inizio di una riga nella SHELL http://goo.gl/l20Hf #Senza categoria #webdesign";i:1;s:99:"Shortcut per saltare all'inizio di una riga nel TERMINALE http://goo.gl/l20Hf #Terminale #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:99:"Shortcut per saltare all'inizio di una riga nel TERMINALE http://goo.gl/l20Hf #Terminale #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1370243413;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383869455;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shortcut per saltare alla fine di una riga nel TERMINALE</title>
		<link>http://www.kludge.it/shortcut-per-saltare-alla-fine-di-una-riga-nel-terminale/</link>
		<pubDate>Tue, 04 Jun 2013 09:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1683</guid>
		<description></description>
		<content:encoded><![CDATA[Capita molto spesso quando si opera con un terminale (Shell) di voler andare direttamente alla fine di una riga: ci&amp;ograve; &amp;egrave; possibile utilizzando lo shortcut: CTRL + E.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1683</wp:post_id>
		<wp:post_date>2013-06-04 11:00:00</wp:post_date>
		<wp:post_date_gmt>2013-06-04 09:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>shortcut-per-saltare-alla-fine-di-una-riga-nel-terminale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="terminal"><![CDATA[Terminal]]></category>
		<category domain="category" nicename="terminale"><![CDATA[Terminale]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/zgWLy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/shortcut-per-saltare-alla-fine-di-una-riga-nella-shell/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:96:"Shortcut per saltare alla fine di una riga nella SHELL http://goo.gl/zgWLy #Terminale #webdesign";i:1;s:98:"Shortcut per saltare alla fine di una riga nel TERMINALE http://goo.gl/zgWLy #Terminale #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:98:"Shortcut per saltare alla fine di una riga nel TERMINALE http://goo.gl/zgWLy #Terminale #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1370336966;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383827267;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Manuale dei comandi nel TERMINALE</title>
		<link>http://www.kludge.it/manuale-dei-comandi-nel-terminale/</link>
		<pubDate>Wed, 05 Jun 2013 08:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1688</guid>
		<description></description>
		<content:encoded><![CDATA[Se volessimo avere qualche informazione in più riguardo un comando della shell potremmo andare su www.kludge.it (:P) o digitare <code>man COMANDO</code> ad esempio <code>man echo</code> mostrerà tutto ciò che riguarda il comando echo, le sue opzioni e funzioni.

<img class="aligncenter wp-image-1689" alt="il comando 'man' della shell" style="width: 100%; height: auto;" src="http://www.kludge.it/wp-content/uploads/Schermata-2013-05-31-a-19.34.51.png"  />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1688</wp:post_id>
		<wp:post_date>2013-06-05 10:00:00</wp:post_date>
		<wp:post_date_gmt>2013-06-05 08:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>manuale-dei-comandi-nel-terminale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="man"><![CDATA[man]]></category>
		<category domain="funzione_linguaggio" nicename="terminal"><![CDATA[Terminal]]></category>
		<category domain="category" nicename="terminale"><![CDATA[Terminale]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/9nq2Z]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/manuale-dei-comandi-nella-shell/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:73:"Manuale dei comandi nella SHELL http://goo.gl/9nq2Z #Terminale #webdesign";i:1;s:75:"Manuale dei comandi nel TERMINALE http://goo.gl/9nq2Z #Terminale #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:75:"Manuale dei comandi nel TERMINALE http://goo.gl/9nq2Z #Terminale #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1370419233;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383827267;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ripulire la schermata nel TERMINALE</title>
		<link>http://www.kludge.it/ripulire-la-schermata-nel-terminale/</link>
		<pubDate>Thu, 06 Jun 2013 06:07:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1692</guid>
		<description></description>
		<content:encoded><![CDATA[Nel caso in cui ci capitasse avere la finestra del nostro terminale piena zeppa di testo e volessimo ripulirla potremo digitare &lt;code&gt;clear&lt;/code&gt; e premere enter.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1692</wp:post_id>
		<wp:post_date>2013-06-06 08:07:00</wp:post_date>
		<wp:post_date_gmt>2013-06-06 06:07:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ripulire-la-schermata-nel-terminale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="clear"><![CDATA[clear]]></category>
		<category domain="funzione_linguaggio" nicename="terminal"><![CDATA[Terminal]]></category>
		<category domain="category" nicename="terminale"><![CDATA[Terminale]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/8uTvy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/ripulire-la-schermata-nella-shell/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:75:"Ripulire la schermata nella SHELL http://goo.gl/8uTvy #Terminale #webdesign";i:1;s:77:"Ripulire la schermata nel TERMINALE http://goo.gl/8uTvy #Terminale #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:77:"Ripulire la schermata nel TERMINALE http://goo.gl/8uTvy #Terminale #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1370499294;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:56:"http://www.kludge.it/funzione_linguaggio/terminal/clear/";}s:4:"time";i:1383827266;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Riavviare un server / pc da TERMINALE</title>
		<link>http://www.kludge.it/riavviare-un-server-pc-da-terminale/</link>
		<pubDate>Fri, 07 Jun 2013 06:46:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1704</guid>
		<description></description>
		<content:encoded><![CDATA[&Egrave; possibile riavviare il sistema dalla shell / terminale con il comando <strong>reboot</strong>:<br/>
<code>sudo reboot</code><br/>
Il sistema verr&agrave; immediatamente riavviato.<br/>
Non &egrave; possibile effettuare tale operazione nel caso in cui non disponessimo dei privilegi di amministratore.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1704</wp:post_id>
		<wp:post_date>2013-06-07 08:46:00</wp:post_date>
		<wp:post_date_gmt>2013-06-07 06:46:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>riavviare-un-server-pc-da-terminale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="reboot"><![CDATA[reboot]]></category>
		<category domain="funzione_linguaggio" nicename="terminal"><![CDATA[Terminal]]></category>
		<category domain="category" nicename="terminale"><![CDATA[Terminale]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/d6jtU]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/riavviare-un-server-pc-da-terminale/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:79:"Riavviare un server / pc da TERMINALE http://goo.gl/d6jtU #Terminale #webdesign";i:1;s:79:"Riavviare un server / pc da TERMINALE http://goo.gl/d6jtU #Terminale #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:79:"Riavviare un server / pc da TERMINALE http://goo.gl/d6jtU #Terminale #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1370588804;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:57:"http://www.kludge.it/funzione_linguaggio/terminal/reboot/";}s:4:"time";i:1383827266;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Spegnere un server / pc da TERMINALE</title>
		<link>http://www.kludge.it/spegnere-un-server-pc-da-terminale/</link>
		<pubDate>Sat, 08 Jun 2013 06:08:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1707</guid>
		<description></description>
		<content:encoded><![CDATA[Operare in un server da terminale ci permette di effettuare qualsiasi operazione dal <a href="/funzione_linguaggio/terminal/reboot/" title="Riavviare un server da terminale">riavvio di un sistema</a> allo spegnimento dello stesso con il comando <strong>shutdown</strong>.<br/>
Per spegnere un server da linea di comando in un modo sicuro avvisando tutti gli utenti collegati &egrave; sufficiente digitare:<br/>
<code>sudo shutdown</code><br/>
Non &egrave; possibile effettuare tale operazione nel caso in cui non disponessimo dei privilegi di amministratore.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1707</wp:post_id>
		<wp:post_date>2013-06-08 08:08:00</wp:post_date>
		<wp:post_date_gmt>2013-06-08 06:08:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spegnere-un-server-pc-da-terminale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="shutdown"><![CDATA[shutdown]]></category>
		<category domain="funzione_linguaggio" nicename="terminal"><![CDATA[Terminal]]></category>
		<category domain="category" nicename="terminale"><![CDATA[Terminale]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/2x2GI]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/spegnere-un-server-pc-da-terminale/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:78:"Spegnere un server / pc da TERMINALE http://goo.gl/2x2GI #Terminale #webdesign";i:1;s:78:"Spegnere un server / pc da TERMINALE http://goo.gl/2x2GI #Terminale #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:59:"http://www.kludge.it/funzione_linguaggio/terminal/shutdown/";}s:4:"time";i:1383827266;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:78:"Spegnere un server / pc da TERMINALE http://goo.gl/2x2GI #Terminale #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1370673093;}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Visualizzare la directory corrente nel TERMINALE</title>
		<link>http://www.kludge.it/visualizzare-la-directory-corrente-nel-terminale/</link>
		<pubDate>Mon, 10 Jun 2013 06:17:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1710</guid>
		<description></description>
		<content:encoded><![CDATA[Per visualizzare la directory nella quale stiamo operando nel terminale è sufficiente utilizzare il comando <strong>pwd</strong>:

<code>pwd</code>

<img class="aligncenter size-full wp-image-1713" alt="pwd terminale" src="http://www.kludge.it/wp-content/uploads/pwd.png" width="324" height="125" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1710</wp:post_id>
		<wp:post_date>2013-06-10 08:17:00</wp:post_date>
		<wp:post_date_gmt>2013-06-10 06:17:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visualizzare-la-directory-corrente-nel-terminale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="pwd"><![CDATA[pwd]]></category>
		<category domain="funzione_linguaggio" nicename="terminal"><![CDATA[Terminal]]></category>
		<category domain="category" nicename="terminale"><![CDATA[Terminale]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/fnKjr]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/visualizzare-la-directory-corrente-nel-terminale/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:90:"Visualizzare la directory corrente nel TERMINALE http://goo.gl/fnKjr #Terminale #webdesign";i:1;s:90:"Visualizzare la directory corrente nel TERMINALE http://goo.gl/fnKjr #Terminale #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383850585;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:90:"Visualizzare la directory corrente nel TERMINALE http://goo.gl/fnKjr #Terminale #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1370845291;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Visualizzarele files della directory corrente nel TERMINALE</title>
		<link>http://www.kludge.it/visualizzarele-files-della-directory-corrente-nel-terminale/</link>
		<pubDate>Tue, 11 Jun 2013 06:01:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1716</guid>
		<description></description>
		<content:encoded><![CDATA[Con il comando <strong>ls</strong> possiamo visualizzare una lista di tutti i files e le cartelle presenti nella nostra posizione attuale.<br/>
Possiamo altres&igrave; visualizzare i files contenuti in una o pi&ugrave; directories da noi decise specificandone il percorso subito il comando:
<code>ls /public/</code>
In questo modo visualizzaremo tutti i files presenti nella cartella "public".<br/>
Teniamo presente che nel caso in cui il nome della cartella passatagli come parametro contenesse degli spazi, tali spazi andrebbero preceduti da una backslash (\) o l'intero nome della cartella andrebbe racchiuso tra virgolette:
<code>ls Nome\ Cartella</code>
o
<code>ls "Nome Cartella"</code>
<strong>ls</strong>, come una buona parte dei comandi utilizzabili nella shell, accetta varie opzioni: l'opzione "-l" (ls -l) mostrer&agrave; una lista pi&ugrave; dettagliata; l'opzione "-a" (ls -a) mostrer&agrave; la lista completa dei files presenti, compresi quelli nascosti (preceduti dal "."); l'opzione "-t" (ls -t) ordiner&agrave; i files in base all'ultima modifica effettuata, poich&egrave; di default i files vengono ordinati per nome.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1716</wp:post_id>
		<wp:post_date>2013-06-11 08:01:00</wp:post_date>
		<wp:post_date_gmt>2013-06-11 06:01:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visualizzarele-files-della-directory-corrente-nel-terminale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="ls"><![CDATA[ls]]></category>
		<category domain="funzione_linguaggio" nicename="terminal"><![CDATA[Terminal]]></category>
		<category domain="category" nicename="terminale"><![CDATA[Terminale]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/Nika6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/visualizzarele-files-della-directory-corrente-nel-terminale/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:101:"Visualizzarele files della directory corrente nel TERMINALE http://goo.gl/Nika6 #Terminale #webdesign";i:1;s:101:"Visualizzarele files della directory corrente nel TERMINALE http://goo.gl/Nika6 #Terminale #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:101:"Visualizzarele files della directory corrente nel TERMINALE http://goo.gl/Nika6 #Terminale #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1370931626;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383850585;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Spostarsi tra le directories nel TERMINALE</title>
		<link>http://www.kludge.it/spostarsi-tra-le-directories-nel-terminale/</link>
		<pubDate>Wed, 12 Jun 2013 06:44:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1723</guid>
		<description></description>
		<content:encoded><![CDATA[Per navigare in un computer/server con il terminale dobbiamo abbandonare l'idea di poter cliccare su qualcosa di visuale e dobbiamo iniziare a pensare che ogni cosa che facciamo necessita di un comando.<br/>
Una delle operazioni pi&ugrave; semplici che ci capiter&agrave; di fare molte volte &egrave; senzadubbio lo spostamento da una cartella all'altra (aprire una cartella), per fare ci&ograve; ci serviamo del comando <strong>cd</strong>:
<code>cd public</code>
con questo comando abbiamo letteralmente aperto la cartella "public".<br/>
Potremmo aver necessit&agrave; di visualizzare i files e le cartelle presenti nella nostra attuale posizione, per fare ci&ograve; possiamo utilizzare il <a href="/funzione_linguaggio/terminal/ls/" title="Il comando ls della shell">comando ls</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1723</wp:post_id>
		<wp:post_date>2013-06-12 08:44:00</wp:post_date>
		<wp:post_date_gmt>2013-06-12 06:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spostarsi-tra-le-directories-nel-terminale</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="funzione_linguaggio" nicename="cd"><![CDATA[cd]]></category>
		<category domain="funzione_linguaggio" nicename="terminal"><![CDATA[Terminal]]></category>
		<category domain="category" nicename="terminale"><![CDATA[Terminale]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/9Ds01]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/spostarsi-tra-le-directories-nel-terminale/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:84:"Spostarsi tra le directories nel TERMINALE http://goo.gl/9Ds01 #Terminale #webdesign";i:1;s:84:"Spostarsi tra le directories nel TERMINALE http://goo.gl/9Ds01 #Terminale #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383850585;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:84:"Spostarsi tra le directories nel TERMINALE http://goo.gl/9Ds01 #Terminale #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1371019847;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Visualizzare l&#039;indirizzo completo di una directory nel finder</title>
		<link>http://www.kludge.it/visualizzare-lindirizzo-completo-di-una-directory-nel-finder/</link>
		<pubDate>Thu, 13 Jun 2013 05:47:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1726</guid>
		<description></description>
		<content:encoded><![CDATA[Iniziando ad utilizzare un pò più spesso il terminale magari per effettuare delle operazioni in un server virtuale avremo spesso la necessità di conoscere l'indirizzo preciso di alcuni files nel nostro computer locale.

Il metodo più conosciuto in OSX è probabilmente aprire le informazioni sul file con ⌘+i e leggerla ma, grazie al terminale possiamo far visualizzare la path completa anche nella finestra del finder stesso con il seguente comando:
<code>defaults write com.apple.finder _FXShowPosixPathInTitle -bool YES</code>
Ottenendo il seguente risultato:

<img class="aligncenter size-full wp-image-1727" alt="Path nel finder" src="http://www.kludge.it/wp-content/uploads/Schermata-2013-06-02-a-13.01.45.png" width="431" height="24" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1726</wp:post_id>
		<wp:post_date>2013-06-13 07:47:00</wp:post_date>
		<wp:post_date_gmt>2013-06-13 05:47:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>visualizzare-lindirizzo-completo-di-una-directory-nel-finder</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mac-osx"><![CDATA[Mac OSX]]></category>
		<category domain="funzione_linguaggio" nicename="terminal"><![CDATA[Terminal]]></category>
		<category domain="category" nicename="terminale"><![CDATA[Terminale]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/e4SR9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/visualizzare-lindirizzo-completo-di-una-directory-nel-finder/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{i:0;s:101:"Visualizzare l'indirizzo completo di una directory nel finder http://goo.gl/e4SR9 #Mac OSX #webdesign";i:1;s:101:"Visualizzare l'indirizzo completo di una directory nel finder http://goo.gl/e4SR9 #Mac OSX #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:0:{}s:4:"time";i:1383850585;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpt_failed</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:6:"author";b:0;s:8:"sentence";s:101:"Visualizzare l'indirizzo completo di una directory nel finder http://goo.gl/e4SR9 #Mac OSX #webdesign";s:5:"error";s:71:"This tweet is identical to another Tweet recently sent to this account.";s:4:"code";i:403;s:9:"timestamp";i:1371102426;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Creare un effetto parallasse con le trasformazioni CSS 3d e jQuery</title>
		<link>http://www.kludge.it/creare-un-effetto-parallasse-con-le-trasformazioni-css-3d-e-jquery/</link>
		<pubDate>Fri, 23 Aug 2013 10:10:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://www.kludge.it/?p=1738</guid>
		<description></description>
		<content:encoded><![CDATA[Il parallasse &egrave; un effetto ottico che fa sembrare che un oggetto si sposti cambiando il nostro punto di vista, questo &egrave; dettato dal fatto che l'oggetto &egrave; pi&ugrave; vicino a noi rispetto allo sfondo e di conseguenza si sposter&agrave; pi&ugrave; velocemente di quest'ultimo.
Creare un effetto parallax basilare con javascript/jquery &egrave; pi&ugrave; semplice di quel che si potrebbe pensare:
[cc lang="javascript"]
///////////////////
//  PARALLASSI  ///
///////////////////
//  Per il funzionamento dello script è sufficiente assegnare agli
//  elementi che devono scrollare due "custom data":
//  data-type="vertical_parallax"
//  data-speed="1"
//  Impostando data-speed a "1" lo scorrimento sarà alla stessa velocità
//  della pagina; sono contemplati anche valori negativi o decimali.

//  Dichiarazione delle variabili
var win = $(window);              
$('[data-type="vertical_parallax"]').each(function(){

    //  Dichiarazione delle variabili
    var elm = $(this); 
    
    //  Gestione dell'evento on scroll        
    win.on('scroll', function() {    

        //  Trasformo il valore di "speed" moltiplicandolo per la distanza
        //  dal top della finestra;               
        var position = -(win.scrollTop() * elm.data('speed'))/10,

        //  Assemblo la stringa per la proprietà CSS
            vertical_translate = 'translate3d(0,' + position + 'px, 0px)'; 

        //  Assegno all'elemento la nuova posizione
        elm.css({
            WebkitTransform : vertical_translate,
            MoxTransform : vertical_translate,
            transform : vertical_translate
        });

    }); // Fine Window scroll
}); // Fine each elements 
[/cc]

Come commentato all'interno del codice per funzionare &egrave; sufficiente assegnare due attributi custom all'elemento che vogliamo che abbia l'effetto:
[cc lang="html"]
<div data-speed="1.8" data-type="vertical_parallax">
    <img src="/img/immagine.png">
</div>
[/cc]

Ed il gioco &egrave; fatto.

&Egrave; possibile ottenere questo effetto anche in altri modi, utilizzando altre proprit&agrave; CSS ma, sfruttando transform3d sfrutteremo la GPU e lo scorrimento e il movimento saranno estremamente pi&ugrave; fluidi!
<strong>NB: Ricordo che &egrave; necessario avere incluso jQuery perch&egrave; il codice funzioni</strong>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1738</wp:post_id>
		<wp:post_date>2013-08-23 12:10:00</wp:post_date>
		<wp:post_date_gmt>2013-08-23 10:10:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>creare-un-effetto-parallasse-con-le-trasformazioni-css-3d-e-jquery</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="css"><![CDATA[CSS]]></category>
		<category domain="funzione_linguaggio" nicename="css"><![CDATA[CSS]]></category>
		<category domain="category" nicename="jquery"><![CDATA[jQuery]]></category>
		<category domain="funzione_linguaggio" nicename="jquery"><![CDATA[jQuery]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_tweet_this</wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_goo</wp:meta_key>
			<wp:meta_value><![CDATA[http://goo.gl/FjiOZr]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_jd_target</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.kludge.it/creare-un-effetto-parallasse-con-le-trasformazioni-css-3d-e-jquery/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_jd_wp_twitter</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:103:"Creare un effetto parallasse con le trasformazioni CSS 3d e jQuery http://goo.gl/FjiOZr #CSS #webdesign";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_seosmart_cache</wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:8:"keywords";a:1:{s:75:"Creare una custom meta box per salvare dei dati personalizzati in WORDPRESS";s:48:"http://www.kludge.it/funzione_linguaggio/jquery/";}s:4:"time";i:1383873078;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_li_love_count</wp:meta_key>
			<wp:meta_value><![CDATA[16]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
